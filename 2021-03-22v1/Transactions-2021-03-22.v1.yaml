openapi: 3.0.3
info:
  title: Transactions
  description: 'Transactions represent the transfer, or the attempt to transfer funds between the Payer and the Merchant using a specific payment method. A Sale transaction represents movement of funds from Payer to Merchant and a Refund from Merchant to Payer.'
  contact:
    name: API Integrations
    url: 'https://developer.globalpay.com/?gp-api=true'
    email: api.integrations@globalpay.com
  version: 2021 03 22
servers:
  - url: 'https://apis.sandbox.globalpay.com/ucp'
    description: Sandbox Environment
  - url: 'https://apis.globalpay.com/ucp'
    description: Production Environment
tags:
  - name: Create a Sale or Refund
    description: Create a Sale or Refund transaction that attempts to transfer funds between the Payer and the Merchant using a specific Payment Method. The Sale transaction can be flagged for automatic capture or flagged as requiring a separate capture action later.  (Availability of refunds that do not link directly to a previous Sale transaction depends on your live configuration.)
  - name: List Transactions
    description: 'Get a list of transactions recently processed, using criteria passed in the query string. Page through the result set to access all records.'
  - name: Get a Transaction
    description: Get a single view of a transaction using the Global Payments transaction id.
  - name: Refund a Sale
    description: Create a Refund transaction from a previous Sale. The payment method associated with the original Sale is used to refund the Payer.
  - name: Reverse a Sale or Refund
    description: 'Cancel a transaction before it has been sent for funding. transactions can be reversed in full or partially reversed. An attempt to restore Payer''s spending limit is always made. If no amount is included in the request body, the full value of the transaction will be reversed.  In timeout scenarios, the reference field can be used in place of the id in the URL to execute a reversal also. (Availability of partial reversals depends on your live configuration.)'
  - name: Capture a Sale
    description: Capture a Sale transaction that has a status of PREAUTHORIZED to receive funds for that transaction. The transaction can be captured for a different amount than what was authroized. Also it can be captured in multiple segments to facilitate split shipment. (Availability of multiple captures in production depends on your live configuration.)
  - name: Increment an Auth
    description: 'Increment the amount for an existing transaction. Use this action to add a charge to an existing transaction before it is batched. This action does not change the status of a transaction, if successful it increases the amount of the existing transaction.  (Availability in production depends on your live configuration.)'
  - name: Adjust a CP Sale
    description: 'Adjust an existing Customer Present (CP) transaction. Use this action to change data about a transaction before it is batched. This action does not change the status of a transaction, only the data it contains.'
  - name: ReAuth a Reversed Sale
    description: This action be to used to refresh the authorization associated with a transaction to get a more recent authcode or reauthorize a transaction reversed in error. (Availability in production depends on your live configuration.)
  - name: Confirm a Transaction
    description: 'For certain transactions created using non-card based payment methods (for example, PayPal), merchants are required to confirm that the transaction has completed  in order for funds to be transferred.'
  - name: Split a Transaction Amount
    description: 'Transfer part of a transaction amount, executed by a merchant, to the partner account'
  - name: List Settled Transactions
    description: Get a list of settled or funded transactions  Page through the result set to access all records.
paths:
  /transactions:
    post:
      operationId: createSaleOrRefundTransaction
      tags:
        - Create a Sale or Refund
      summary: Create a Sale or Refund transaction that attempts to transfer funds between the Payer and the Merchant using a specific Payment Method. The Sale transaction can be flagged for automatic capture or flagged as requiring a separate capture action later.  (Availability of refunds that do not link directly to a previous Sale transaction depends on your live configuration.)
      description: Create a Sale or Refund transaction that attempts to transfer funds between the Payer and the Merchant using a specific Payment Method. The Sale transaction can be flagged for automatic capture or flagged as requiring a separate capture action later.  (Availability of refunds that do not link directly to a previous Sale transaction depends on your live configuration.)
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              required:
                - account_name
                - amount
                - channel
                - country
                - currency
                - payment_method
                - reference
              type: object
              properties:
                account_name:
                  type: string
                  description: A meaningful label for the merchant account set by Global Payments.
                  example: Transaction_Processing
                  minLength: 1
                  maxLength: 50
                type:
                  type: string
                  description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                  example: SALE
                  default: SALE
                  enum:
                    - SALE
                    - REFUND
                channel:
                  type: string
                  description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
                  example: CNP
                  enum:
                    - CP
                    - CNP
                country:
                  type: string
                  description: The country in ISO-3166-1(alpha-2 code) format.
                  example: US
                  enum:
                    - ISO-3166-1(alpha-2 code)
                    - US
                capture_mode:
                  type: string
                  description: 'Indicates whether the transaction is to be captured automatically, later or later using more than 1 partial capture. * `AUTO` - If a transaction is authorized, funds will exchange between the payer and merchant automatically and as soon as possible. * `LATER` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically and will require a subsequent separate action to capture that transaction and start the funding process. Only one successful capture is permitted. * `MULTIPLE` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically. One or more subsequent separate capture actions are required to capture that transaction in parts and start the funding process for the part captured. One or many successful capture are permitted once the total amount captured is within a range of the original authorized amount.'''
                  default: AUTO
                  enum:
                    - AUTO
                    - LATER
                    - MULTIPLE
                total_capture_count:
                  type: integer
                  description: Indicates the total or expected total of captures that will executed against a transaction flagged as being captured multiple times.
                authorization_mode:
                  type: string
                  description: Indicates if the merchant would accept an authorization for an amount less than the requested amount. This is available for CP channel only where the balance not authorized can be processed again using a different card. * `PARTIAL` - Indicates merchant would accept an authorization for an amount less than the requested amount. * `WHOLE` - Merchant only accepts an authorization for the requested amount and not less than that amount.
                  example: PARTIAL
                  default: WHOLE
                  enum:
                    - PARTIAL
                    - WHOLE
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
                currency:
                  type: string
                  description: The currency of the amount in ISO-4217(alpha-3)
                  example: USD
                gratuity_amount:
                  type: string
                  description: The amount of the gratuity for a transaction.It is always represented in the lowest denomiation of the related currency.
                  example: '1999'
                cashback_amount:
                  type: string
                  description: The amount of the transaction that relates to cashback.It is always represented in the lowest denomiation of the related currency.
                  example: '2000'
                surcharge_amount:
                  type: string
                  description: The amount that reflects the additional charge the merchant applied to the transaction for using a specific payment method.It is always represented in the lowest denomiation of the related currency.
                  example: '150'
                convenience_amount:
                  type: string
                  description: The amount that reflects the charge the merchant applied to the transaction for availing of a more convenient purchase.It is always represented in the lowest denomiation of the related currency.
                  example: '120'
                reference:
                  type: string
                  description: Merchant defined field to reference the transaction.
                  minLength: 8
                  maxLength: 50
                description:
                  type: string
                  description: Merchant defined field to describe the transaction.
                  example: SKU#BLK-MED-G123-GUC
                  maxLength: 100
                language:
                  type: string
                  description: Indicates the language the transaction was executed in. In the format ISO-639-1 (alpha-2) or ISO-639-1 (alpha-2)_ISO-3166(alpha-2)
                  example: fr_CA
                  enum:
                    - ISO-639(alpha-2)
                    - fr
                    - ISO-639(alpha-2)_ISO-3166(alpha-2)
                    - fr_CA
                ip_address:
                  type: string
                  description: Indicates the source IP Address of the system used to create the transaction.
                  example: 123.123.123.123
                  minLength: 0
                  maxLength: 50
                site_reference:
                  type: string
                  description: A merchant defined reference for the location that created the transaction.
                  minLength: 0
                  maxLength: 50
                user_reference:
                  type: string
                  description: The merchant's user reference for the transaction. This represents the person who processed the transaction on the merchant's behalf like a clerk or cashier reference.
                  example: EMP_234235
                  minLength: 0
                  maxLength: 50
                payer_reference:
                  type: string
                  description: The merchant's payer reference for the transaction
                  example: CUST_12345
                  minLength: 0
                  maxLength: 50
                order:
                  type: object
                  properties:
                    reference:
                      type: string
                      description: Merchant defined field common to all transactions that are part of the same order.
                      example: INV#88547
                      minLength: 0
                      maxLength: 50
                currency_conversion:
                  type: object
                  properties:
                    id:
                      type: string
                      description: A unique identifier generated by Global Payments to identify the currency conversion. It can be used to reference a currency conversion when processing a sale or a refund transaction.
                      example: CCS_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                      minLength: 1
                      maxLength: 50
                initiator:
                  type: string
                  description: 'Indicates whether the Merchant or the Payer initiated the creation of a transaction. * `PAYER` - The transaction was initated by the customer who is paying the merchant. * `MERCHANT` - The transaction was initated by the merchant, who is getting paid by the payer.'''
                  enum:
                    - PAYER
                    - MERCHANT
                stored_credential:
                  type: object
                  description: Stored data information used to create a transaction.
                  properties:
                    model:
                      type: string
                      description: 'Indicates the transaction processing model being executed when using stored credentials. * `UNSCHEDULED` - the transaction is adhoc or unscheduled. For example a payer visiting a merchant to make purchase using the payment method stored with the merchant. * `RECURRING` - The transaction is a repeat transaction initiated my the merchant and taken using the payment method stored with the merchant, as part of an agreed schedule of transactions. * `SUBSCRIPTION` - The transaction is a repeat transaction initiated my the merchant and taken using the payment method stored with the merchant, as part of an agreed schedule of transactions. The amount taken is based on the usage by the payer of the good or service. for example a monthly mobile phone bill. * `INSTALLMENT` - The transaction is a repeat transaction initiated my the merchant and taken using the payment method stored with the merchant, as part of an agreed schedule of transactions and where the amount is known and agreed in advanced. For example the payment in full of a good in fixed installments over a defined period of time.'''
                      minLength: 1
                      maxLength: 50
                      enum:
                        - UNSCHEDULED
                        - RECURRING
                        - SUBSCRIPTION
                        - INSTALLMENT
                    reason:
                      type: string
                      description: The reason stored credentials are being used to to create a transaction.
                      enum:
                        - INCREMENTAL
                        - RESUBMISSION
                        - REAUTHORIZATION
                        - DELAYED
                        - NO_SHOW
                      minLength: 1
                      maxLength: 50
                    sequence:
                      type: string
                      description: Indiciates the order of this transaction in the sequence of a planned repeating transaction processing model.
                      minLength: 1
                      maxLength: 50
                      enum:
                        - FIRST
                        - SUBSEQUENT
                        - LAST
                notifications:
                  type: object
                  description: Indicates to Global Payments where the merchant wants to receive notifications of certain events that occur on the Global Payments system.
                  properties:
                    return_url:
                      example: 'https://www.example.com/notifications/return'
                      type: string
                      description: 'The merchant URL to return the payer to, once the payer has completed payment using the payment method. This returns control of the payer''s payment experience to the merchant.'
                    status_url:
                      example: 'https://www.example.com/notifications/status'
                      type: string
                      description: The merchant URL to notify the merchant of the latest status of the transaction.
                    challenge_return_url:
                      example: 'https://www.example.com/notifications/return'
                      type: string
                      description: The merchant URL that will receive the notification when the customer has completed the authentication.
                    three_ds_method_return_url:
                      type: string
                      description: The merchant URL that will receive the notification when the 3DS ACS successfully gathers device information and to close the hidden iFrame accordingly.
                      example: 'https://www.example.com/notifications/3DS_method_complete'
                    decoupled_challenge_return_url:
                      example: 'https://www.example.com/notifications/return'
                      type: string
                      description: The merchant URL that will receive the notification when the customer has completed the authentication when the authentication is decoupled and separate to the purchase.
                payment_method:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
                      example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
                      maxLength: 50
                    first_name:
                      type: string
                      description: Specify the first name of the owner of the payment method.
                      example: James
                      minLength: 0
                      maxLength: 50
                    last_name:
                      type: string
                      description: Specify the surname of the owner of the payment method.
                      example: Mason
                      minLength: 0
                      maxLength: 50
                    name:
                      type: string
                      description: The full name of the owner of the payment method.
                      example: James Mason
                      minLength: 0
                      maxLength: 100
                    entry_mode:
                      type: string
                      description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                      example: ECOM
                      enum:
                        - MOTO
                        - ECOM
                        - IN_APP
                        - CHIP
                        - SWIPE
                        - MANUAL
                        - PHONE
                        - MAIL
                        - CONTACTLESS_CHIP
                        - CONTACTLESS_SWIPE
                      minLength: 1
                      maxLength: 50
                    narrative:
                      type: string
                      description: Contains the value a merchant wishes to appear on the payer's payment method statement for this transaction
                      minLength: 1
                      maxLength: 50
                    storage_mode:
                      type: string
                      description: Indicates whether to store the card as part of a transaction. * `ALWAYS` -  The card information is always stored irrespective of whether the payment method authorization was successful or not. * `ON_SUCCESS` - The card information is only storedif the payment method authorization was successful.
                      enum:
                        - ALWAYS
                        - ON_SUCCESS
                      minLength: 1
                      maxLength: 50
                    fingerprint_mode:
                      type: string
                      description: Indicates whether to execute the fingerprint signature functionality. * `ALWAYS` - Always check and create the fingerprint value regardless of the result of the card authorization. * `ON_SUCCESS` - Always check and create the fingerprint value when the card authorization is successful.
                      enum:
                        - ALWAYS
                        - ON_SUCCESS
                      minLength: 1
                      maxLength: 50
                    encryption:
                      type: object
                      properties:
                        method:
                          type: string
                          description: The encryption method used when sending encrypted card data to Global Payments.
                          enum:
                            - KTB
                            - KSN
                          minLength: 1
                          maxLength: 50
                        version:
                          type: string
                          description: The version of encryption being used.
                          minLength: 1
                          maxLength: 50
                        info:
                          type: string
                          description: The encryption info used when sending encrypted card data to Global Payments.
                          minLength: 1
                          maxLength: 2000
                    authentication:
                      type: object
                      description: Information outlining the degree of authentication executed related to a transaction.
                      properties:
                        three_ds:
                          type: object
                          description: Information outlining the degree of 3D Secure authentication executed.
                          properties:
                            message_version:
                              type: string
                              description: Indicates the version of 3DS
                              example: 1.0.0
                              minLength: 0
                              maxLength: 50
                            eci:
                              type: string
                              description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                              example: '5'
                              minLength: 0
                              maxLength: 2
                            value:
                              type: string
                              description: The authentication value created as part of the 3D Secure process.
                              minLength: 0
                              maxLength: 50
                            server_trans_reference:
                              type: string
                              description: The reference created by the 3DSecure provider to identify the specific authentication attempt.
                              minLength: 0
                              maxLength: 50
                            ds_trans_reference:
                              type: string
                              description: The reference created by the 3DSecure Directory Server to identify the specific authentication attempt.
                              minLength: 0
                              maxLength: 50
                            exempt_status:
                              type: string
                              description: Indicates if any exemptions apply to this transaction.
                              minLength: 0
                              maxLength: 50
                              enum:
                                - LOW_VALUE
                                - TRANSACTION_RISK_ANALYSIS
                                - TRUSTED_MERCHANT
                                - SECURE_CORPORATE_PAYMENT
                                - SCA_DELEGATION
                    card:
                      type: object
                      properties:
                        number:
                          type: string
                          description: The the card account number used to authorize the transaction. Also known as PAN.
                          example: '4263970000005262'
                          minLength: 1
                          maxLength: 50
                        expiry_month:
                          type: string
                          description: The 2 digit expiry date month of the card.
                          example: '05'
                          minLength: 2
                          maxLength: 2
                        expiry_year:
                          type: string
                          description: The 2 digit expiry date year of the card.
                          example: '25'
                          minLength: 2
                          maxLength: 2
                        track:
                          type: string
                          description: Data from magnetic stripe of a card
                          minLength: 1
                          maxLength: 500
                        tag:
                          type: string
                          description: The full card tag data for an EMV/chip card transaction.
                          minLength: 1
                          maxLength: 2000
                        chip_condition:
                          type: string
                          description: Indicates if a fallback mechanism was used to obtain the card information when EMV/chip did not work as expected. * `PREV_SUCCESS` - indicates the previous transaction with this card was a success. * `PREV_FAILED` - indicates the previous transaction with this card failed.
                          enum:
                            - PREV_SUCCESS
                            - PREV_FAILED
                          minLength: 1
                          maxLength: 50
                        pin_block:
                          type: string
                          description: 'Contains the pin block info, relating to the pin code the Payer entered.'
                          minLength: 1
                          maxLength: 500
                        cvv:
                          type: string
                          description: The numeric value printed on the physical card.
                          example: '852'
                          minLength: 0
                          maxLength: 4
                        cvv_indicator:
                          type: string
                          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                          example: PRESENT
                          minLength: 0
                          maxLength: 50
                          enum:
                            - ILLEGIBLE
                            - NOT_PRESENT
                            - PRESENT
                        avs_address:
                          type: string
                          description: First line of the address associated with the card.
                          example: Apt 123
                          minLength: 0
                          maxLength: 50
                        avs_postal_code:
                          type: string
                          description: Postal code of the address associated with the card.
                          example: TGX562
                          minLength: 0
                          maxLength: 50
                        funding:
                          type: string
                          description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                          enum:
                            - DEBIT
                            - CREDIT
                          default: CREDIT
                          minLength: 0
                          maxLength: 50
                        authcode:
                          type: string
                          description: Code generated when the card is successfully authorized.
                          minLength: 0
                          maxLength: 50
                        brand_reference:
                          type: string
                          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                          minLength: 0
                          maxLength: 50
                    digital_wallet:
                      type: object
                      properties:
                        token:
                          type: string
                          description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                          minLength: 1
                          maxLength: 50
                        token_format:
                          type: string
                          description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                          minLength: 1
                          maxLength: 50
                          enum:
                            - CARD_NUMBER
                            - CARD_TOKEN
                        cryptogram:
                          type: string
                          description: The authentication value use to verify the validity of the digit wallet transaction.
                          minLength: 1
                          maxLength: 50
                        provider:
                          type: string
                          description: Identifies who provides the digital wallet for the Payer.
                          minLength: 1
                          maxLength: 50
                          enum:
                            - APPLEPAY
                            - PAY_BY_GOOGLE
                        expiry_month:
                          type: string
                          description: The 2 digit expiry date month of the card.
                          example: '05'
                          minLength: 2
                          maxLength: 2
                        expiry_year:
                          type: string
                          description: The 2 digit expiry date year of the card.
                          example: '25'
                          minLength: 2
                          maxLength: 2
                        eci:
                          type: string
                          description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                          example: '5'
                          minLength: 0
                          maxLength: 50
                        cvv:
                          type: string
                          description: The numeric value printed on the physical card.
                          example: '852'
                          minLength: 0
                          maxLength: 4
                        cvv_indicator:
                          type: string
                          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                          example: PRESENT
                          minLength: 0
                          maxLength: 50
                          enum:
                            - ILLEGIBLE
                            - NOT_PRESENT
                            - PRESENT
                        avs_address:
                          type: string
                          description: First line of the address associated with the card.
                          example: Apt 123
                          minLength: 0
                          maxLength: 50
                        avs_postal_code:
                          type: string
                          description: Postal code of the address associated with the card.
                          example: TGX562
                          minLength: 0
                          maxLength: 50
                    apm:
                      type: object
                      properties:
                        provider:
                          type: string
                          description: A string used to identify the payment method provider being used to execute this transaction.
                          enum:
                            - TESTPAY
                            - PAYPAL
                            - SOFORT
                            - IDEAL
                            - GIROPAY
                    bank_transfer:
                      type: object
                      properties:
                        account_number:
                          type: string
                          description: The number or reference for the payer's bank account.
                          example: '23452423'
                          minLength: 0
                          maxLength: 50
                        number_type:
                          type: string
                          description: The type of bank account associated with the payer's bank account.
                          example: SAVING
                          enum:
                            - CHECKING
                            - SAVING
                            - CREDIT
                        check_reference:
                          type: string
                          description: The number or reference for the check
                          example: '23452423'
                          minLength: 0
                          maxLength: 15
                        sec_code:
                          type: string
                          description: |
                            Indicates how the transaction was authorized by the merchant. 
                              * `CCD` - Cash Concentration or Disbursement - Can be either a credit or debit application where funds are wither distributed or consolidated between corporate entities.  
                              * `POP` - Point of Sale Entry - Point of sale debit applications non-shared (POS) environment. These transactions are most often initiated by the consumer via a plastic access card. This is only support for normal ACH transactions 
                              * `PPD` - Prearranged Payment and Deposits - used to credit or debit a consumer account. Popularity used for payroll direct deposits and pre-authorized bill payments. 
                              * `TEL` - Telephone-Initiated Entry - Used for the origination of a single entry debit transaction to a consumer's account pursuant to a verbal authorization obtained from the consumer via the telephone. 
                              * `WEB` - Internet (Web)-Initiated Entry - Used for the origination of debit entries (either Single or Recurring Entry) to a consumer's account pursuant to a to an authorization that is obtained from the Receiver via the Internet.
                          example: CCD
                          enum:
                            - CCD
                            - POP
                            - PPD
                            - TEL
                            - WEB
                        bank:
                          type: object
                          properties:
                            code:
                              type: string
                              description: The local identifier code for the bank.
                              example: james.mason@example.com
                              minLength: 0
                              maxLength: 50
                            name:
                              type: string
                              description: The name of the bank.
                              example: High Street Bank
                            address:
                              type: object
                              properties:
                                line_1:
                                  type: string
                                  description: First line of the address.
                                  minLength: 0
                                  maxLength: 50
                                line_2:
                                  type: string
                                  description: Second line of the address.
                                  minLength: 0
                                  maxLength: 50
                                line_3:
                                  type: string
                                  description: Third  line of the address.
                                  minLength: 0
                                  maxLength: 50
                                city:
                                  type: string
                                  description: Merchant defined field common to all transactions that are part of the same order.
                                  example: INV#88547
                                  minLength: 0
                                  maxLength: 50
                                state:
                                  type: string
                                  description: 'The state or region of the address. ISO 3166-2 minus the country code itself. For example, US Illinois = IL, or in the case of GB counties Wiltshire = WI or Aberdeenshire = ABD'
                                  minLength: 0
                                  maxLength: 3
                                postal_code:
                                  type: string
                                  description: The city or town of the address.
                                  minLength: 0
                                  maxLength: 50
                                country:
                                  type: string
                                  description: The country of the address. Countries are represented by the ISO-3166-1(alpha-2 code).
                                  minLength: 0
                                  maxLength: 2
            examples:
              Ecommerce Sale - Auto Capture:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: ECOM
                    authentication:
                      three_ds:
                        server_trans_ref: vJ9NXpFueXsAqeb4iAbJJbe+66s=
                        value: AAACBUGDZYYYIgGFGYNlAAAAAAA=
                        eci: '5'
                        message_version: 1.0.0
                    card:
                      number: '4263970000005262'
                      expiry_month: '05'
                      expiry_year: '25'
                      cvv: '852'
                      cvv_indicator: PRESENT
                      avs_address: Flat 123
                      avs_postal_code: '50001'
              Mail Order/Telephone Order Sale - Delayed Capture:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  capture_mode: LATER
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: MOTO
                    card:
                      number: '4263970000005262'
                      expiry_month: '05'
                      expiry_year: '25'
                      cvv: '852'
                      cvv_indicator: PRESENT
                      avs_address: Flat 123
                      avs_postal_code: '50001'
              Ecommerce Refund:
                value:
                  account_name: Transaction_Processing
                  type: REFUND
                  channel: CNP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  ip_address: 123.123.123.123
                  payment_method:
                    name: James Mason
                    entry_mode: ECOM
                    card:
                      number: '4263970000005262'
                      expiry_month: '05'
                      expiry_year: '25'
                      cvv: '852'
                      cvv_indicator: PRESENT
                      avs_address: Flat 123
                      avs_postal_code: '50001'
              Card Present Sale - Chip:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  ip_address: 123.123.123.123
                  site_reference: Site-1324
                  payment_method:
                    name: James Mason
                    entry_mode: CHIP
                    card:
                      track: '%B4012002000060016^VI TEST CREDIT^251210118039000000000396?;4012002000060016=25121011803939600000?'
                      tag: 9F4005F000F0A0019F02060000000025009F03060000000000009F2608D90A06501B48564E82027C005F3401019F360200029F0702FF009F0802008C9F0902008C9F34030403029F2701809F0D05F0400088009F0E0508000000009F0F05F0400098005F280208409F390105FFC605DC4000A800FFC7050010000000FFC805DC4004F8009F3303E0B8C89F1A0208409F350122950500000080005F2A0208409A031409109B02E8009F21030811539C01009F37045EED3A8E4F07A00000000310109F0607A00000000310108407A00000000310109F100706010A03A400029F410400000001
                      funding: DEBIT
                      chip_condition: ''
                      pin_block: ''
                      brand_reference: ''
              Card Present Sale - Swipe:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CP
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: SWIPE
                    card:
                      track: '%B4012002000060016^VI TEST CREDIT^251210118039000000000396?;4012002000060016=25121011803939600000?'
                      funding: CREDIT
                      chip_condition: ''
                      pin_block: ''
                      brand_reference: ''
              Card Present Refund - Chip:
                value:
                  account_name: Transaction_Processing
                  type: REFUND
                  channel: CP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: CHIP
                    card:
                      track: '%B4012002000060016^VI TEST CREDIT^251210118039000000000396?;4012002000060016=25121011803939600000?'
                      tag: 9F4005F000F0A0019F02060000000025009F03060000000000009F2608D90A06501B48564E82027C005F3401019F360200029F0702FF009F0802008C9F0902008C9F34030403029F2701809F0D05F0400088009F0E0508000000009F0F05F0400098005F280208409F390105FFC605DC4000A800FFC7050010000000FFC805DC4004F8009F3303E0B8C89F1A0208409F350122950500000080005F2A0208409A031409109B02E8009F21030811539C01009F37045EED3A8E4F07A00000000310109F0607A00000000310108407A00000000310109F100706010A03A400029F410400000001
                      funding: DEBIT
              Sale with Tokenized Payment Method:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  ip_address: 123.123.123.123
                  payment_method:
                    id: PMT_f6878e2a-2744-4d63-9420-3cc25c349ad2
                    name: James Mason
                    entry_mode: ECOM
                    authentication:
                      three_ds:
                        server_trans_ref: vJ9NXpFueXsAqeb4iAbJJbe+66s=
                        value: AAACBUGDZYYYIgGFGYNlAAAAAAA=
                        eci: '5'
                        message_version: 1.0.0
              Sale with Credential On File:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    id: PMT_f6878e2a-2744-4d63-9420-3cc25c349ad2
                    name: James Mason
                    entry_mode: ECOM
                  initiator: MERCHANT
                  stored_credential:
                    model: SUBSCRIPTION
                    reason: INCREMENTAL
                    sequence: SUBSEQUENT
              Ecommerce - Alternative Payment Method:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  amount: '1999'
                  currency: EUR
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: ECOM
                    apm:
                      provider: testpay
                  notifications:
                    return_url: 'https://www.example.com/return_url'
                    status_url: 'https://www.example.com/status_url'
              Ecommerce - PayPal:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  amount: '2999'
                  currency: EUR
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: GB
                  payment_method:
                    name: James Mason
                    entry_mode: ECOM
                    apm:
                      provider: paypal
                  notifications:
                    return_url: 'https://www.example.com/return_url'
                    status_url: 'https://www.example.com/status_url'
                    cancel_url: 'https://www.example.com/cancel_url'
              Apple Pay Sale - Tokenized Payment Token:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: ECOM
                    digital_wallet:
                      provider: APPLEPAY
                      payment_token:
                        version: EC_v1
                        data: Ft+dvMNzlcy6WNB+zerKtkh/RWW4RWW4yXIRgmM3WC/FYEC6Z+OJEzir2sDyzDkjIUJ0TFCQd/QAAAAAAAA==
                        header:
                          ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEWdNhNAHy9kO2Kol33kIh7k6wh6E/lxriM46MR1FUrn7SHugprkaeFmWKZPgGpWgZ+telY/G1+YSoaCbR5YSoaCbR57bdGA==
                          transactionId: fd88874954acdb299c285f95a3202ad1f330d3fd4ebc22a864398684198644c3
                          publicKeyHash: h7WnNVz2gmpTSkHqETOWsskFPLSj31e3sPTS2cBxgrk=
              Apple Pay Sale - DeTokenized Payment Token:
                value:
                  account_name: Transaction_Processing
                  type: SALE
                  channel: CNP
                  capture_mode: AUTO
                  amount: '1999'
                  currency: USD
                  reference: 93459c78-f3f9-427c-84df-ca0584bb55bf
                  country: US
                  payment_method:
                    name: James Mason
                    entry_mode: ECOM
                    digital_wallet:
                      token: '5167300431085507'
                      token_format: CARD_NUMBER
                      expiry_month: '12'
                      expiry_year: '20'
                      cryptogram: '234234234'
                      provider: APPLEPAY
                      eci: '5'
              ACH Sale:
                value:
                  account_name: Transaction_Processing
                  channel: CNP
                  type: SALE
                  amount: '12345'
                  currency: USD
                  reference: '67396831'
                  country: US
                  payment_method:
                    name: Jane Doe
                    entry_mode: ECOM
                    bank_transfer:
                      number: '1234567890'
                      number_type: SAVING
                      check_reference: '123'
                      sec_code: WEB
                      merchant_notes: '123'
                      bank:
                        code: '083908420'
                        name: First Union
                        address:
                          line_1: 12000 Smoketown Rd
                          line_2: Apt 3B
                          line_3: X
                          city: Mesa
                          state: AZ
                          postal_code: '22192'
                          country: USA
                  payer:
                    name: ANGELA SMITH
                    reference: '123'
                    date_of_birth: '1967-08-13'
                    landline_phone: '235555'
                    mobile_phone: '222222'
                    billing_address:
                      line_1: Address Line 1
                      line_2: Address Line 2
                      city: PUNE
                      state: AZ
                      postal_code: '411015'
                      country: USA
              ACH Refund:
                value:
                  channel: CNP
                  type: REFUND
                  amount: '12345'
                  currency: HKD
                  reference: Test_1234sd
                  country: HK
                  payment_method:
                    name: Jane
                    entry_mode: ECOM
                    card:
                      number: '4263970000005262'
                      expiry_month: '09'
                      expiry_year: '22'
        required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  channel:
                    type: string
                    description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
                    example: CNP
                    enum:
                      - CP
                      - CNP
                  capture_mode:
                    type: string
                    description: 'Indicates whether the transaction is to be captured automatically, later or later using more than 1 partial capture. * `AUTO` - If a transaction is authorized, funds will exchange between the payer and merchant automatically and as soon as possible. * `LATER` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically and will require a subsequent separate action to capture that transaction and start the funding process. Only one successful capture is permitted. * `MULTIPLE` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically. One or more subsequent separate capture actions are required to capture that transaction in parts and start the funding process for the part captured. One or many successful capture are permitted once the total amount captured is within a range of the original authorized amount.'''
                    default: AUTO
                    enum:
                      - AUTO
                      - LATER
                      - MULTIPLE
                  authorization_mode:
                    type: string
                    description: Indicates if the merchant would accept an authorization for an amount less than the requested amount. This is available for CP channel only where the balance not authorized can be processed again using a different card. * `PARTIAL` - Indicates merchant would accept an authorization for an amount less than the requested amount. * `WHOLE` - Merchant only accepts an authorization for the requested amount and not less than that amount.
                    example: PARTIAL
                    default: WHOLE
                    enum:
                      - PARTIAL
                      - WHOLE
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  merchant_id:
                    type: string
                    description: A unique identifier for the merchant set by Global Payments.
                    example: MER_c4c0df11039c48a9b63701adeaa296c3
                    minLength: 1
                    maxLength: 50
                  merchant_name:
                    type: string
                    description: A meaningful label for the merchant set by Global Payments.
                    example: Sandbox_merchant_2
                    minLength: 1
                    maxLength: 50
                  account_id:
                    type: string
                    description: A unique identifier for the merchant account set by Global Payments.
                    example: TRA_6716058969854a48b33347043ff8225f
                    minLength: 1
                    maxLength: 50
                  account_name:
                    type: string
                    description: A meaningful label for the merchant account set by Global Payments.
                    example: Transaction_Processing
                    minLength: 1
                    maxLength: 50
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
                        example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
                        maxLength: 50
                      fingerprint_presence_indicator:
                        type: string
                        description: 'If enabled, this field indicates whether the payment method has been seen before or is new. * `EXISTS` -  Indicates that the payment method was seen on the platform before by this merchant. * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.'
                        enum:
                          - NEW
                          - EXISTS
                        minLength: 0
                        maxLength: 256
                      fingerprint:
                        type: string
                        description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
                        minLength: 0
                        maxLength: 256
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      entry_mode:
                        type: string
                        description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                        example: ECOM
                        enum:
                          - MOTO
                          - ECOM
                          - IN_APP
                          - CHIP
                          - SWIPE
                          - MANUAL
                          - PHONE
                          - MAIL
                          - CONTACTLESS_CHIP
                          - CONTACTLESS_SWIPE
                        minLength: 1
                        maxLength: 50
                      authentication:
                        type: object
                        description: Information outlining the degree of authentication executed related to a transaction.
                        properties:
                          three_ds:
                            type: object
                            description: Information outlining the degree of 3D Secure authentication executed.
                            properties:
                              value_result:
                                type: string
                                description: The result of the three_ds value validation by the brands or issuing bank.
                                minLength: 0
                                maxLength: 50
                      digital_wallet:
                        type: object
                        properties:
                          token:
                            type: string
                            description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                            minLength: 1
                            maxLength: 50
                          token_format:
                            type: string
                            description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                            minLength: 1
                            maxLength: 50
                            enum:
                              - CARD_NUMBER
                              - CARD_TOKEN
                          cryptogram:
                            type: string
                            description: The authentication value use to verify the validity of the digit wallet transaction.
                            minLength: 1
                            maxLength: 50
                          provider:
                            type: string
                            description: Identifies who provides the digital wallet for the Payer.
                            minLength: 1
                            maxLength: 50
                            enum:
                              - APPLEPAY
                              - PAY_BY_GOOGLE
                          expiry_month:
                            type: string
                            description: The 2 digit expiry date month of the card.
                            example: '05'
                            minLength: 2
                            maxLength: 2
                          expiry_year:
                            type: string
                            description: The 2 digit expiry date year of the card.
                            example: '25'
                            minLength: 2
                            maxLength: 2
                          eci:
                            type: string
                            description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                            example: '5'
                            minLength: 0
                            maxLength: 50
                          cvv:
                            type: string
                            description: The numeric value printed on the physical card.
                            example: '852'
                            minLength: 0
                            maxLength: 4
                          cvv_indicator:
                            type: string
                            description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                            example: PRESENT
                            minLength: 0
                            maxLength: 50
                            enum:
                              - ILLEGIBLE
                              - NOT_PRESENT
                              - PRESENT
                          avs_address:
                            type: string
                            description: First line of the address associated with the card.
                            example: Apt 123
                            minLength: 0
                            maxLength: 50
                          avs_postal_code:
                            type: string
                            description: Postal code of the address associated with the card.
                            example: TGX562
                            minLength: 0
                            maxLength: 50
                      apm:
                        type: object
                        properties:
                          provider:
                            type: string
                            description: A string used to identify the payment method provider being used to execute this transaction.
                            enum:
                              - TESTPAY
                              - PAYPAL
                              - SOFORT
                              - IDEAL
                              - GIROPAY
                          redirect_url:
                            type: string
                            description: URL to redirect the payer from the merchant's system to the payment method's system.
                          session_token:
                            type: string
                            description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
                            example: EC-0SR89134FA420913U
                          fund_status:
                            type: string
                            description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
                            example: RECEIVED
                            enum:
                              - NOT_EXPECTED
                              - RECEIVED
                              - WAITING
                              - MISSING
                          wait_notification:
                            minimum: 0
                            maximum: 1
                            type: number
                            description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
                            example: 0
                            enum:
                              - 0
                              - 1
                          optional_redirect:
                            minimum: 0
                            maximum: 1
                            type: number
                            description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
                            example: 0
                            enum:
                              - 0
                              - 1
                          provider_transaction_reference:
                            type: string
                            description: The reference the payment method provider created for the transaction.
                            example: 49wnfs9w434234
                          provider_time_created:
                            type: string
                            description: The time the payment method provider created the transaction at on their system.
                            example: 49wnfs9w434234
                          provider_payer_name:
                            type: string
                            description: A name of the payer from the payment method system.
                            example: James Mason
                          bank:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The name assocaited with the bank account
                              identifier_code:
                                type: string
                                description: The international identifier code for the bank.
                              iban:
                                type: string
                                description: The international identifier of the bank account.
                              code:
                                type: string
                                description: The local identifier of the bank.
                              account_number:
                                type: string
                                description: The local identifier of the bank account.
                          mandate:
                            type: object
                            properties:
                              code:
                                type: string
                                description: The reference to identify the mandate.
                        description: Data associated with the response of an APM transaction.
                      card:
                        type: object
                        properties:
                          masked_number_last4:
                            type: string
                            description: Masked card number with last 4 digits showing.
                            minLength: 12
                            maxLength: 50
                          tag_response:
                            type: string
                            description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
                            minLength: 0
                            maxLength: 50
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand:
                            type: string
                            description: Indicates the card brand that issued the card.
                            enum:
                              - VISA
                              - MASTERCARD
                              - AMEX
                              - DINERS
                              - DISCOVER
                              - JCB
                              - CUP
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                          brand_time_reference:
                            type: string
                            description: The time returned by the card brand indicating when the transaction was processed on their system.
                            minLength: 0
                            maxLength: 50
                          cvv_result:
                            type: string
                            description: The result of the CVV check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_address_result:
                            type: string
                            description: The result of the AVS address check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_postal_code_result:
                            type: string
                            description: The result of the AVS postal code check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_action:
                            type: string
                            description: The recommended AVS action to be taken by the agent processing the card transaction.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - PROMPT
                              - DECLINE
                              - ACCEPT
                          provider:
                            type: object
                            description: The result codes directly from the card issuer.
                            properties:
                              card.provider.result:
                                type: string
                                description: Result code from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.cvv_result:
                                type: string
                                description: The result code of the CVV check from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.avs_result:
                                type: string
                                description: The result code of the AVS check from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.avs_address_result:
                                type: string
                                description: The result code of the AVS address check from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.avs_postal_code_result:
                                type: string
                                description: The result of the AVS postal code check from the card issuer..
                                minLength: 0
                                maxLength: 50
                      bank_transfer:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the bank.
                            example: High Street Bank
                          masked_number_last4:
                            type: string
                            description: The last 4 characters of the local reference for a bank account number.
                            minLength: 1
                            maxLength: 50
                          number_type:
                            type: string
                            description: The type of bank account associated with the payer's bank account.
                            example: SAVING
                            enum:
                              - CHECKING
                              - SAVING
                              - CREDIT
                  currency_conversion:
                    type: object
                    description: Information relating to a currency conversion.
                    properties:
                      payer_amount:
                        type: string
                        description: The amount that will affect the payer's account.
                        minLength: 0
                        maxLength: 50
                      payer_currency:
                        type: string
                        description: The currency of the amount that will affect the payer's account.
                        minLength: 0
                        maxLength: 50
                      conversion_rate:
                        type: string
                        description: The exchange rate used to convert one currency to another.
                        minLength: 0
                        maxLength: 50
                      margin_rate_percentage:
                        type: string
                        description: The exchange rate used to convert one currency to another.
                        minLength: 0
                        maxLength: 50
                      commission_percentage:
                        type: string
                        description: The percentage commission taken for providing the currency conversion.
                        minLength: 0
                        maxLength: 50
                      exchange_rate_source:
                        type: string
                        description: The source of the base exchange rate was obtained to execute the currency conversion.
                        minLength: 0
                        maxLength: 50
                      exchange_source_time:
                        type: string
                        description: The time the base exchange rate was obtained from the source.
                        minLength: 0
                        maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
      callbacks:
        APM Return Notification:
          '{$request.body#/notifications.return_url}':
            get:
              parameters:
                - name: X-GP-Signature
                  in: query
                  required: true
                  schema:
                    description: The signature of the notification message to the merchant's URL endpoint. Use this value to validate that the notification came from Global Payments.
                    maxLength: 1000
                    minLength: 1
                    type: string
                    example: 6bb6116d85c2326feb32dc34ded531ed80c6f04ac472fa0c7e8228fde0fe7d66195128c5d52f266398471bcdbaa7d09a7d88495ce998e48da34877d6fd530f0b
                - name: id
                  in: query
                  required: true
                  schema:
                    type: string
                    description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                    minLength: 1
                    maxLength: 50
                - name: status
                  in: query
                  required: true
                  schema:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                - name: reference
                  in: query
                  required: true
                  schema:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                - name: payment_method_result
                  in: query
                  required: true
                  schema:
                    type: string
                    description: Result code from the payment method provider.
                - name: payment_method_message
                  in: query
                  required: true
                  schema:
                    type: string
                    description: Result message from the payment method provider corresponding to the result code.
                - name: provider
                  in: query
                  required: true
                  schema:
                    type: string
                    description: A string used to identify the payment method provider being used to execute this transaction.
                    enum:
                      - TESTPAY
                      - PAYPAL
                      - SOFORT
                      - IDEAL
                      - GIROPAY
                - name: apm_wait_notification
                  in: query
                  required: true
                  schema:
                    minimum: 0
                    maximum: 1
                    type: number
                    description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
                    example: 0
                    enum:
                      - 0
                      - 1
                - name: apm_optional_redirect
                  in: query
                  required: true
                  schema:
                    minimum: 0
                    maximum: 1
                    type: number
                    description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
                    example: 0
                    enum:
                      - 0
                      - 1
                - name: apm_fund_status
                  in: query
                  required: true
                  schema:
                    type: string
                    description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
                    example: RECEIVED
                    enum:
                      - NOT_EXPECTED
                      - RECEIVED
                      - WAITING
                      - MISSING
                - name: apm_payment_description
                  in: query
                  required: true
                  schema:
                    type: string
                    description: The reference the payment method provider created for the transaction.
                    example: 49wnfs9w434234
                - name: apm_confirmed_accountholder
                  in: query
                  required: true
                  schema:
                    type: string
                    description: A name of the payer from the payment method system.
                    example: Jimmy Nail
                    default: Jimmy Nail
                - name: apm_account_number
                  in: query
                  schema:
                    type: string
                    description: The number or references to a bank account.
                - name: apm_bank_iban
                  in: query
                  schema:
                    type: string
                    description: The international identifier of the bank account.
                - name: apm_bank_identifier_code
                  in: query
                  schema:
                    type: string
                    description: The international identifier code for the bank.
                - name: apm_bank_name
                  in: query
                  schema:
                    type: string
                    description: The name of the bank.
                    example: High Street Bank
                - name: apm_bank_code
                  in: query
                  schema:
                    type: string
                    description: The local identifier code for the bank.
                    example: james.mason@example.com
                    minLength: 0
                    maxLength: 50
                - name: action_id
                  in: query
                  schema:
                    type: string
                    description: A unique identifier generated by Global Payments to identify an action.
                    example: ACT_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 1
                    maxLength: 50
                - name: action_type
                  in: query
                  schema:
                    type: string
                    description: The type of action executed.
                    example: PREAUTHORIZE
                    enum:
                      - AUTHORIZE
                      - PREAUTHORIZE
                - name: action_time_created
                  in: query
                  schema:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
              description: The endpoint to which the customer should be redirected after a payment has been attempted or successfully completed on the payment method's site. The data sent contains the current status of the transaction.
              responses:
                '200':
                  description: OK
        APM Status Notification:
          '{$request.body#/notifications.status_url}':
            post:
              parameters:
                - in: header
                  name: X-GP-Signature
                  description: The signature of the notification message to the merchant's URL endpoint. Use this value to validate that the notification came from Global Payments.
                  schema:
                    description: The signature of the notification message to the merchant's URL endpoint. Use this value to validate that the notification came from Global Payments.
                    maxLength: 1000
                    minLength: 1
                    type: string
                    example: 6bb6116d85c2326feb32dc34ded531ed80c6f04ac472fa0c7e8228fde0fe7d66195128c5d52f266398471bcdbaa7d09a7d88495ce998e48da34877d6fd530f0b
                - in: header
                  name: X-GP-Idempotency
                  description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                  schema:
                    description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                    type: string
                    minLength: 1
                    maxLength: 50
                - in: header
                  name: X-GP-Version
                  required: true
                  schema:
                    description: Indicates the version of the GP-API for this message.
                    type: string
                    default: '2021-03-22'
                    minLength: 1
                    maxLength: 50
                - in: header
                  name: Content-type
                  description: Format of the message.
                  required: true
                  schema:
                    description: Indicates the format of the message.
                    type: string
                    default: application/json
                - name: Accept-Encoding
                  in: header
                  description: Compression algorithm used in the response.
                  schema:
                    description: Indicates if the message is compressed and using what compression mechanism.
                    type: string
                    default: gzip
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        id:
                          type: string
                          description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                          minLength: 1
                          maxLength: 50
                        time_created:
                          type: string
                          format: date-time
                          description: Global Payments time indicating when the object was created in ISO-8601 format.
                          example: '2021-05-03T21:23:39.718Z'
                        type:
                          type: string
                          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                          example: SALE
                          default: SALE
                          enum:
                            - SALE
                            - REFUND
                        status:
                          type: string
                          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                          enum:
                            - INITIATED
                            - PREAUTHORIZED
                            - CAPTURED
                            - REVERSED
                            - DECLINED
                            - FUNDED
                            - REJECTED
                          minLength: 0
                          maxLength: 50
                        channel:
                          type: string
                          description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
                          example: CNP
                          enum:
                            - CP
                            - CNP
                        capture_mode:
                          type: string
                          description: 'Indicates whether the transaction is to be captured automatically, later or later using more than 1 partial capture. * `AUTO` - If a transaction is authorized, funds will exchange between the payer and merchant automatically and as soon as possible. * `LATER` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically and will require a subsequent separate action to capture that transaction and start the funding process. Only one successful capture is permitted. * `MULTIPLE` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically. One or more subsequent separate capture actions are required to capture that transaction in parts and start the funding process for the part captured. One or many successful capture are permitted once the total amount captured is within a range of the original authorized amount.'''
                          default: AUTO
                          enum:
                            - AUTO
                            - LATER
                            - MULTIPLE
                        amount:
                          type: string
                          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                          example: '11099'
                        currency:
                          type: string
                          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                          example: '11099'
                        country:
                          type: string
                          description: The country in ISO-3166-1(alpha-2 code) format.
                          example: US
                          enum:
                            - ISO-3166-1(alpha-2 code)
                            - US
                        merchant_id:
                          type: string
                          description: A unique identifier for the merchant set by Global Payments.
                          example: MER_c4c0df11039c48a9b63701adeaa296c3
                          minLength: 1
                          maxLength: 50
                        merchant_name:
                          type: string
                          description: A meaningful label for the merchant set by Global Payments.
                          example: Sandbox_merchant_2
                          minLength: 1
                          maxLength: 50
                        account_id:
                          type: string
                          description: A unique identifier for the merchant account set by Global Payments.
                          example: TRA_6716058969854a48b33347043ff8225f
                          minLength: 1
                          maxLength: 50
                        account_name:
                          type: string
                          description: A meaningful label for the merchant account set by Global Payments.
                          example: Transaction_Processing
                          minLength: 1
                          maxLength: 50
                        reference:
                          type: string
                          description: Merchant defined field to reference the transaction.
                          minLength: 8
                          maxLength: 50
                        batch_id:
                          type: string
                          description: A Global Payments created reference that uniquely identifies the batch.
                          example: BAT_234234234
                          minLength: 0
                          maxLength: 50
                        payment_method:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
                              example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
                              maxLength: 50
                            fingerprint_presence_indicator:
                              type: string
                              description: 'If enabled, this field indicates whether the payment method has been seen before or is new. * `EXISTS` -  Indicates that the payment method was seen on the platform before by this merchant. * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.'
                              enum:
                                - NEW
                                - EXISTS
                              minLength: 0
                              maxLength: 256
                            fingerprint:
                              type: string
                              description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
                              minLength: 0
                              maxLength: 256
                            result:
                              type: string
                              description: Result code from the payment method provider.
                            message:
                              type: string
                              description: Result message from the payment method provider corresponding to the result code.
                            entry_mode:
                              type: string
                              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                              example: ECOM
                              enum:
                                - MOTO
                                - ECOM
                                - IN_APP
                                - CHIP
                                - SWIPE
                                - MANUAL
                                - PHONE
                                - MAIL
                                - CONTACTLESS_CHIP
                                - CONTACTLESS_SWIPE
                              minLength: 1
                              maxLength: 50
                            authentication:
                              type: object
                              description: Information outlining the degree of authentication executed related to a transaction.
                              properties:
                                three_ds:
                                  type: object
                                  description: Information outlining the degree of 3D Secure authentication executed.
                                  properties:
                                    value_result:
                                      type: string
                                      description: The result of the three_ds value validation by the brands or issuing bank.
                                      minLength: 0
                                      maxLength: 50
                            digital_wallet:
                              type: object
                              properties:
                                token:
                                  type: string
                                  description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                                  minLength: 1
                                  maxLength: 50
                                token_format:
                                  type: string
                                  description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                                  minLength: 1
                                  maxLength: 50
                                  enum:
                                    - CARD_NUMBER
                                    - CARD_TOKEN
                                cryptogram:
                                  type: string
                                  description: The authentication value use to verify the validity of the digit wallet transaction.
                                  minLength: 1
                                  maxLength: 50
                                provider:
                                  type: string
                                  description: Identifies who provides the digital wallet for the Payer.
                                  minLength: 1
                                  maxLength: 50
                                  enum:
                                    - APPLEPAY
                                    - PAY_BY_GOOGLE
                                expiry_month:
                                  type: string
                                  description: The 2 digit expiry date month of the card.
                                  example: '05'
                                  minLength: 2
                                  maxLength: 2
                                expiry_year:
                                  type: string
                                  description: The 2 digit expiry date year of the card.
                                  example: '25'
                                  minLength: 2
                                  maxLength: 2
                                eci:
                                  type: string
                                  description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                                  example: '5'
                                  minLength: 0
                                  maxLength: 50
                                cvv:
                                  type: string
                                  description: The numeric value printed on the physical card.
                                  example: '852'
                                  minLength: 0
                                  maxLength: 4
                                cvv_indicator:
                                  type: string
                                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                                  example: PRESENT
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - ILLEGIBLE
                                    - NOT_PRESENT
                                    - PRESENT
                                avs_address:
                                  type: string
                                  description: First line of the address associated with the card.
                                  example: Apt 123
                                  minLength: 0
                                  maxLength: 50
                                avs_postal_code:
                                  type: string
                                  description: Postal code of the address associated with the card.
                                  example: TGX562
                                  minLength: 0
                                  maxLength: 50
                            apm:
                              type: object
                              properties:
                                provider:
                                  type: string
                                  description: A string used to identify the payment method provider being used to execute this transaction.
                                  enum:
                                    - TESTPAY
                                    - PAYPAL
                                    - SOFORT
                                    - IDEAL
                                    - GIROPAY
                                redirect_url:
                                  type: string
                                  description: URL to redirect the payer from the merchant's system to the payment method's system.
                                session_token:
                                  type: string
                                  description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
                                  example: EC-0SR89134FA420913U
                                fund_status:
                                  type: string
                                  description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
                                  example: RECEIVED
                                  enum:
                                    - NOT_EXPECTED
                                    - RECEIVED
                                    - WAITING
                                    - MISSING
                                wait_notification:
                                  minimum: 0
                                  maximum: 1
                                  type: number
                                  description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
                                  example: 0
                                  enum:
                                    - 0
                                    - 1
                                optional_redirect:
                                  minimum: 0
                                  maximum: 1
                                  type: number
                                  description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
                                  example: 0
                                  enum:
                                    - 0
                                    - 1
                                provider_transaction_reference:
                                  type: string
                                  description: The reference the payment method provider created for the transaction.
                                  example: 49wnfs9w434234
                                provider_time_created:
                                  type: string
                                  description: The time the payment method provider created the transaction at on their system.
                                  example: 49wnfs9w434234
                                provider_payer_name:
                                  type: string
                                  description: A name of the payer from the payment method system.
                                  example: James Mason
                                bank:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: The name assocaited with the bank account
                                    identifier_code:
                                      type: string
                                      description: The international identifier code for the bank.
                                    iban:
                                      type: string
                                      description: The international identifier of the bank account.
                                    code:
                                      type: string
                                      description: The local identifier of the bank.
                                    account_number:
                                      type: string
                                      description: The local identifier of the bank account.
                                mandate:
                                  type: object
                                  properties:
                                    code:
                                      type: string
                                      description: The reference to identify the mandate.
                              description: Data associated with the response of an APM transaction.
                            card:
                              type: object
                              properties:
                                masked_number_last4:
                                  type: string
                                  description: Masked card number with last 4 digits showing.
                                  minLength: 12
                                  maxLength: 50
                                tag_response:
                                  type: string
                                  description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
                                  minLength: 0
                                  maxLength: 50
                                authcode:
                                  type: string
                                  description: Code generated when the card is successfully authorized.
                                  minLength: 0
                                  maxLength: 50
                                brand:
                                  type: string
                                  description: Indicates the card brand that issued the card.
                                  enum:
                                    - VISA
                                    - MASTERCARD
                                    - AMEX
                                    - DINERS
                                    - DISCOVER
                                    - JCB
                                    - CUP
                                  minLength: 0
                                  maxLength: 50
                                brand_reference:
                                  type: string
                                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                                  minLength: 0
                                  maxLength: 50
                                brand_time_reference:
                                  type: string
                                  description: The time returned by the card brand indicating when the transaction was processed on their system.
                                  minLength: 0
                                  maxLength: 50
                                cvv_result:
                                  type: string
                                  description: The result of the CVV check.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - MATCHED
                                    - NOT_MATCHED
                                    - NOT_CHECKED
                                avs_address_result:
                                  type: string
                                  description: The result of the AVS address check.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - MATCHED
                                    - NOT_MATCHED
                                    - NOT_CHECKED
                                avs_postal_code_result:
                                  type: string
                                  description: The result of the AVS postal code check.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - MATCHED
                                    - NOT_MATCHED
                                    - NOT_CHECKED
                                avs_action:
                                  type: string
                                  description: The recommended AVS action to be taken by the agent processing the card transaction.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - PROMPT
                                    - DECLINE
                                    - ACCEPT
                                provider:
                                  type: object
                                  description: The result codes directly from the card issuer.
                                  properties:
                                    card.provider.result:
                                      type: string
                                      description: Result code from the card issuer.
                                      minLength: 0
                                      maxLength: 50
                                    card.provider.cvv_result:
                                      type: string
                                      description: The result code of the CVV check from the card issuer.
                                      minLength: 0
                                      maxLength: 50
                                    card.provider.avs_result:
                                      type: string
                                      description: The result code of the AVS check from the card issuer.
                                      minLength: 0
                                      maxLength: 50
                                    card.provider.avs_address_result:
                                      type: string
                                      description: The result code of the AVS address check from the card issuer.
                                      minLength: 0
                                      maxLength: 50
                                    card.provider.avs_postal_code_result:
                                      type: string
                                      description: The result of the AVS postal code check from the card issuer..
                                      minLength: 0
                                      maxLength: 50
                            bank_transfer:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The name of the bank.
                                  example: High Street Bank
                                masked_number_last4:
                                  type: string
                                  description: The last 4 characters of the local reference for a bank account number.
                                  minLength: 1
                                  maxLength: 50
                                number_type:
                                  type: string
                                  description: The type of bank account associated with the payer's bank account.
                                  example: SAVING
                                  enum:
                                    - CHECKING
                                    - SAVING
                                    - CREDIT
                        action:
                          type: object
                          description: Information about the Action executed.
                          properties:
                            id:
                              type: string
                              description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                              minLength: 1
                              maxLength: 50
                            type:
                              type: string
                              description: Indicates the action taken.
                            time_created:
                              type: string
                              format: date-time
                              description: Global Payments time indicating when the object was created in ISO-8601 format.
                              example: '2021-05-03T21:23:39.718Z'
                            result_code:
                              type: string
                              description: The result of the action executed.
                              enum:
                                - SUCCESS
                                - DECLINE
                              minLength: 1
                              maxLength: 50
                            app_id:
                              type: string
                              description: The id of the app that was used to create the token.
                              example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                              minLength: 1
                              maxLength: 50
                            app_name:
                              type: string
                              description: The name of the app the user gave to the application.
                              example: demo_app
                              minLength: 1
                              maxLength: 50
              description: The endpoint which will receive payment-status messages. This will include the result of the transaction or any updates to the transaction status. The Status URL will receive the final status of the transaction.
              responses:
                '200':
                  description: OK
    get:
      operationId: getSaleAndRefundTransactions
      tags:
        - List Transactions
      summary: 'Get a list of transactions recently processed, using criteria passed in the query string. Page through the result set to access all records.'
      description: 'Get a list of transactions recently processed, using criteria passedin the query string. Page through the result set to access all records.'
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: query
          name: page
          description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
          schema:
            description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
            maximum: 1000
            minimum: 1
            type: number
            default: 1
        - in: query
          name: page_size
          description: The total number of objects to return in a single page for that list.
          schema:
            description: The total number of objects to return in a single page for that list.
            maximum: 1000
            minimum: 1
            type: number
            default: 5
        - in: query
          name: order
          description: 'The direction of the ordering of the entire list, ASC or DESC'
          schema:
            description: 'The direction of the ordering of the entire list, ASC or DESC'
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: order_by
          description: 'The value to order the entire list by. '
          schema:
            description: 'The value to order the entire list by. '
            type: string
            enum:
              - TIME_CREATED
              - TYPE
              - ID
        - name: id
          in: query
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
        - name: type
          in: query
          schema:
            type: string
            description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
            example: SALE
            default: SALE
            enum:
              - SALE
              - REFUND
        - name: channel
          in: query
          schema:
            type: string
            description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
            example: CNP
            enum:
              - CP
              - CNP
        - name: amount
          in: query
          schema:
            type: string
            description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
            example: '11099'
        - name: currency
          in: query
          schema:
            type: string
            description: The currency of the amount in ISO-4217(alpha-3)
            example: USD
        - name: number_first6
          in: query
          schema:
            type: string
            description: First 6 digits of card number
            minLength: 6
            maxLength: 6
        - name: number_last4
          in: query
          schema:
            type: string
            description: Last 4 digits of card number
            minLength: 4
            maxLength: 4
        - name: token_first6
          in: query
          schema:
            type: string
            description: First 6 digits of digital wallet token
            minLength: 6
            maxLength: 6
        - name: token_last4
          in: query
          schema:
            type: string
            description: Last 4 digits of digital wallet token
            minLength: 4
            maxLength: 4
        - name: account_name
          in: query
          schema:
            type: string
            description: A meaningful label for the merchant account set by Global Payments.
            example: Transaction_Processing
            minLength: 1
            maxLength: 50
        - name: brand
          in: query
          schema:
            type: string
            description: Indicates the card brand that issued the card.
            enum:
              - VISA
              - MASTERCARD
              - AMEX
              - DINERS
              - DISCOVER
              - JCB
              - CUP
            minLength: 0
            maxLength: 50
        - name: brand_reference
          in: query
          schema:
            type: string
            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
            minLength: 0
            maxLength: 50
        - name: authcode
          in: query
          schema:
            type: string
            description: Code generated when the card is successfully authorized.
            minLength: 0
            maxLength: 50
        - name: reference
          in: query
          schema:
            type: string
            description: Merchant defined field to reference the transaction.
            minLength: 8
            maxLength: 50
        - name: status
          in: query
          schema:
            type: string
            description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
            enum:
              - INITIATED
              - PREAUTHORIZED
              - CAPTURED
              - REVERSED
              - DECLINED
              - FUNDED
              - REJECTED
            minLength: 0
            maxLength: 50
        - name: from_time_created
          in: query
          schema:
            description: 'The start time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-10-01'
        - name: to_time_created
          in: query
          schema:
            description: 'The end time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-12-31'
        - name: country
          in: query
          schema:
            type: string
            description: The country in ISO-3166-1(alpha-2 code) format.
            example: US
            enum:
              - ISO-3166-1(alpha-2 code)
              - US
        - name: batch_id
          in: query
          schema:
            type: string
            description: A Global Payments created reference that uniquely identifies the batch.
            example: BAT_234234234
            minLength: 0
            maxLength: 50
        - name: entry_mode
          in: query
          schema:
            type: string
            description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
            example: ECOM
            enum:
              - MOTO
              - ECOM
              - IN_APP
              - CHIP
              - SWIPE
              - MANUAL
              - PHONE
              - MAIL
              - CONTACTLESS_CHIP
              - CONTACTLESS_SWIPE
            minLength: 1
            maxLength: 50
        - name: name
          in: query
          schema:
            type: string
            description: The full name of the owner of the payment method.
            example: James Mason
            minLength: 0
            maxLength: 100
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_record_count:
                    type: number
                    description: 'The total number of records across all pages for the search filter. When searching for a collection of resoures, this is returned on the first page only and when the date range is a month or less.'
                    example: 3412
                  current_page_size:
                    type: number
                    description: The total number of records returned on the current page. If current_page_size is less than the page_size using in the querystring then this is the final page for that search.
                    example: 3412
                  merchant_id:
                    type: string
                    description: A unique identifier for the merchant set by Global Payments.
                    example: MER_c4c0df11039c48a9b63701adeaa296c3
                    minLength: 1
                    maxLength: 50
                  merchant_name:
                    type: string
                    description: A meaningful label for the merchant set by Global Payments.
                    example: Sandbox_merchant_2
                    minLength: 1
                    maxLength: 50
                  account_id:
                    type: string
                    description: A unique identifier for the merchant account set by Global Payments.
                    example: TRA_6716058969854a48b33347043ff8225f
                    minLength: 1
                    maxLength: 50
                  account_name:
                    type: string
                    description: A meaningful label for the merchant account set by Global Payments.
                    example: Transaction_Processing
                    minLength: 1
                    maxLength: 50
                  filter:
                    type: object
                    description: Indicates what fields and values used to filter the current list of resource objects in the current response.
                  paging:
                    type: object
                    description: The paging values used to generate this response.
                    properties:
                      page:
                        description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
                        maximum: 1000
                        minimum: 1
                        type: number
                        default: 1
                      page_size:
                        description: The total number of objects to return in a single page for that list.
                        maximum: 1000
                        minimum: 1
                        type: number
                        default: 5
                      order_by:
                        description: 'The value to order the entire list by. '
                        type: string
                        enum:
                          - TIME_CREATED
                      order:
                        description: 'The direction of the ordering of the entire list, ASC or DESC'
                        type: string
                        enum:
                          - ASC
                          - DESC
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: A unique identifier generated by Global Payments to identify the transaction.
                          example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                          minLength: 4
                          maxLength: 100
                        time_created:
                          type: string
                          format: date-time
                          description: Global Payments time indicating when the object was created in ISO-8601 format.
                          example: '2021-05-03T21:23:39.718Z'
                        status:
                          type: string
                          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                          enum:
                            - INITIATED
                            - PREAUTHORIZED
                            - CAPTURED
                            - REVERSED
                            - DECLINED
                            - FUNDED
                            - REJECTED
                          minLength: 0
                          maxLength: 50
                        type:
                          type: string
                          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                          example: SALE
                          default: SALE
                          enum:
                            - SALE
                            - REFUND
                        channel:
                          type: string
                          description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
                          example: CNP
                          enum:
                            - CP
                            - CNP
                        amount:
                          type: string
                          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                          example: '11099'
                        currency:
                          type: string
                          description: The currency of the amount in ISO-4217(alpha-3)
                          example: USD
                        reference:
                          type: string
                          description: Merchant defined field to reference the transaction.
                          minLength: 8
                          maxLength: 50
                        batch_id:
                          type: string
                          description: A Global Payments created reference that uniquely identifies the batch.
                          example: BAT_234234234
                          minLength: 0
                          maxLength: 50
                        country:
                          type: string
                          description: The country in ISO-3166-1(alpha-2 code) format.
                          example: US
                          enum:
                            - ISO-3166-1(alpha-2 code)
                            - US
                        parent_resource_id:
                          type: string
                          description: An identifier generated by Global Payments to uniquely identify the parent resource of this resource. This is resource that was used to create the current instance.
                        create_action_id:
                          type: string
                          description: An identifier generated by Global Payments to uniquely identify the action that created this resource.
                        payment_method:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The full name of the owner of the payment method.
                              example: James Mason
                              minLength: 0
                              maxLength: 100
                            result:
                              type: string
                              description: Result code from the payment method provider.
                            message:
                              type: string
                              description: Result message from the payment method provider corresponding to the result code.
                            entry_mode:
                              type: string
                              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                              example: ECOM
                              enum:
                                - MOTO
                                - ECOM
                                - IN_APP
                                - CHIP
                                - SWIPE
                                - MANUAL
                                - PHONE
                                - MAIL
                                - CONTACTLESS_CHIP
                                - CONTACTLESS_SWIPE
                              minLength: 1
                              maxLength: 50
                            card:
                              type: object
                              properties:
                                brand:
                                  type: string
                                  description: Indicates the card brand that issued the card.
                                  enum:
                                    - VISA
                                    - MASTERCARD
                                    - AMEX
                                    - DINERS
                                    - DISCOVER
                                    - JCB
                                    - CUP
                                  minLength: 0
                                  maxLength: 50
                                authcode:
                                  type: string
                                  description: Code generated when the card is successfully authorized.
                                  minLength: 0
                                  maxLength: 50
                                brand_reference:
                                  type: string
                                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                                  minLength: 0
                                  maxLength: 50
                                masked_number_first6last4:
                                  type: string
                                  description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                                masked_number_last4:
                                  type: string
                                  description: Masked card number with last 4 digits showing.
                                  minLength: 12
                                  maxLength: 50
                                funding:
                                  type: string
                                  description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                                  enum:
                                    - DEBIT
                                    - CREDIT
                                  default: CREDIT
                                  minLength: 0
                                  maxLength: 50
                                cvv_indicator:
                                  type: string
                                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                                  example: PRESENT
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - ILLEGIBLE
                                    - NOT_PRESENT
                                    - PRESENT
                                cvv_result:
                                  type: string
                                  description: The result of the CVV check.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - MATCHED
                                    - NOT_MATCHED
                                    - NOT_CHECKED
                                avs_address_result:
                                  type: string
                                  description: The result of the AVS address check.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - MATCHED
                                    - NOT_MATCHED
                                    - NOT_CHECKED
                                avs_postal_code_result:
                                  type: string
                                  description: The result of the AVS postal code check.
                                  minLength: 0
                                  maxLength: 50
                                  enum:
                                    - MATCHED
                                    - NOT_MATCHED
                                    - NOT_CHECKED
                              description: Data relating to the card payment method returned in a list response.
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}':
    get:
      operationId: getSingleSaleOrRefundTransaction
      tags:
        - Get a Transaction
      summary: Get a single view of a transaction using the Global Payments transaction id.
      description: Get a single view of a transaction using the Global Payments transaction id.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  time_last_updated:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was last updated in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  merchant_id:
                    type: string
                    description: A unique identifier for the merchant set by Global Payments.
                    example: MER_c4c0df11039c48a9b63701adeaa296c3
                    minLength: 1
                    maxLength: 50
                  merchant_name:
                    type: string
                    description: A meaningful label for the merchant set by Global Payments.
                    example: Sandbox_merchant_2
                    minLength: 1
                    maxLength: 50
                  account_id:
                    type: string
                    description: A unique identifier for the merchant account set by Global Payments.
                    example: TRA_6716058969854a48b33347043ff8225f
                    minLength: 1
                    maxLength: 50
                  account_name:
                    type: string
                    description: A meaningful label for the merchant account set by Global Payments.
                    example: Transaction_Processing
                    minLength: 1
                    maxLength: 50
                  channel:
                    type: string
                    description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
                    example: CNP
                    enum:
                      - CP
                      - CNP
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  description:
                    type: string
                    description: Merchant defined field to describe the transaction.
                    example: SKU#BLK-MED-G123-GUC
                    maxLength: 100
                  order_reference:
                    type: string
                    description: Merchant defined field common to all transactions that are part of the same order.
                    example: INV#88547
                    minLength: 0
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  initiator:
                    type: string
                    description: 'Indicates whether the Merchant or the Payer initiated the creation of a transaction. * `PAYER` - The transaction was initated by the customer who is paying the merchant. * `MERCHANT` - The transaction was initated by the merchant, who is getting paid by the payer.'''
                    enum:
                      - PAYER
                      - MERCHANT
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  language:
                    type: string
                    description: Indicates the language the transaction was executed in. In the format ISO-639-1 (alpha-2) or ISO-639-1 (alpha-2)_ISO-3166(alpha-2)
                    example: fr_CA
                    enum:
                      - ISO-639(alpha-2)
                      - fr
                      - ISO-639(alpha-2)_ISO-3166(alpha-2)
                      - fr_CA
                  ip_address:
                    type: string
                    description: Indicates the source IP Address of the system used to create the transaction.
                    example: 123.123.123.123
                    minLength: 0
                    maxLength: 50
                  site_reference:
                    type: string
                    description: A merchant defined reference for the location that created the transaction.
                    minLength: 0
                    maxLength: 50
                  parent_resource_id:
                    type: string
                    description: An identifier generated by Global Payments to uniquely identify the parent resource of this resource. This is resource that was used to create the current instance.
                  create_action_id:
                    type: string
                    description: An identifier generated by Global Payments to uniquely identify the action that created this resource.
                  payment_method:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The full name of the owner of the payment method.
                        example: James Mason
                        minLength: 0
                        maxLength: 100
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      entry_mode:
                        type: string
                        description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                        example: ECOM
                        enum:
                          - MOTO
                          - ECOM
                          - IN_APP
                          - CHIP
                          - SWIPE
                          - MANUAL
                          - PHONE
                          - MAIL
                          - CONTACTLESS_CHIP
                          - CONTACTLESS_SWIPE
                        minLength: 1
                        maxLength: 50
                      card:
                        type: object
                        properties:
                          brand:
                            type: string
                            description: Indicates the card brand that issued the card.
                            enum:
                              - VISA
                              - MASTERCARD
                              - AMEX
                              - DINERS
                              - DISCOVER
                              - JCB
                              - CUP
                            minLength: 0
                            maxLength: 50
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                          masked_number_first6last4:
                            type: string
                            description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                          masked_number_last4:
                            type: string
                            description: Masked card number with last 4 digits showing.
                            minLength: 12
                            maxLength: 50
                          funding:
                            type: string
                            description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                            enum:
                              - DEBIT
                              - CREDIT
                            default: CREDIT
                            minLength: 0
                            maxLength: 50
                          cvv_indicator:
                            type: string
                            description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                            example: PRESENT
                            minLength: 0
                            maxLength: 50
                            enum:
                              - ILLEGIBLE
                              - NOT_PRESENT
                              - PRESENT
                          cvv_result:
                            type: string
                            description: The result of the CVV check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_address_result:
                            type: string
                            description: The result of the AVS address check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_postal_code_result:
                            type: string
                            description: The result of the AVS postal code check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                        description: Data relating to the card payment method returned in a list response.
                  system:
                    type: object
                    description: Configuration relating to a transactions from the Global Payments system. This info is relevant for troubleshooting and integrators using other Global Payments systems to payment process.
                    properties:
                      mid:
                        type: string
                        description: Merchant Identifier from Global Payments system for some features.
                        minLength: 1
                        maxLength: 50
                      tid:
                        type: string
                        description: Terminal Identifier from Global Payments system for some features.
                        minLength: 1
                        maxLength: 50
                      hierarchy:
                        type: string
                        description: Identifies the location of a merchant  within the merchant's corporate hierarchical structure.
                        minLength: 1
                        maxLength: 50
                      name:
                        type: string
                        description: The merchant name that is associated with the merchant.
                        example: MERCHANT ABC INC.
                        minLength: 1
                        maxLength: 100
                      dba:
                        type: string
                        description: The alternate name the merchant may be known as.
                        example: MERCHANT XYZ INC.
                        minLength: 1
                        maxLength: 100
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/refund':
    post:
      operationId: createRefundTransactionFromSale
      tags:
        - Refund a Sale
      summary: Create a Refund transaction from a previous Sale. The payment method associated with the original Sale is used to refund the Payer.
      description: Create a Refund transaction from a previous Sale. The payment method associated with the original Sale is used to refund the Payer.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      card:
                        type: object
                        properties:
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/reversal':
    post:
      operationId: reverseExistingTransaction
      tags:
        - Reverse a Sale or Refund
      summary: 'Cancel a transaction before it has been sent for funding. transactions can be reversed in full or partially reversed. An attempt to restore Payer''s spending limit is always made. If no amount is included in the request body, the full value of the transaction will be reversed.  In timeout scenarios, the reference field can be used in place of the id in the URL to execute a reversal also. (Availability of partial reversals depends on your live configuration.)'
      description: 'Cancel a transaction before it has been sent for funding. transactions can be reversed in full or partially reversed. An attempt to restore Payer''s spending limit is always made. If no amount is included in the request body, the full value of the transaction will be reversed.  In timeout scenarios, the reference field can be used in place of the id in the URL to execute a reversal also. (Availability of partial reversals depends on your live configuration.)'
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      card:
                        type: object
                        properties:
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/capture':
    post:
      operationId: captureSaleTransaction
      tags:
        - Capture a Sale
      summary: Capture a Sale transaction that has a status of PREAUTHORIZED to receive funds for that transaction. The transaction can be captured for a different amount than what was authroized. Also it can be captured in multiple segments to facilitate split shipment. (Availability of multiple captures in production depends on your live configuration.)
      description: Capture a Sale transaction that has a status of PREAUTHORIZED to receive funds for that transaction. The transaction can be captured for a different amount than what was authroized. Also it can be captured in multiple segments to facilitate split shipment. (Availability of multiple captures in production depends on your live configuration.)
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
                gratuity_amount:
                  type: string
                  description: The amount of the gratuity for a transaction.It is always represented in the lowest denomiation of the related currency.
                  example: '1999'
                capture_sequence:
                  type: string
                  description: 'Indicates whether the request is the first,a subsequent or the last capture request when capturing multiple amounts separatelt'
                  example: FIRST
                  enum:
                    - FIRST
                    - SUBSEQUENT
                    - LAST
                total_capture_count:
                  type: integer
                  description: Indicates the total or expected total of captures that will executed against a transaction flagged as being captured multiple times.
                payment_method:
                  type: object
                  properties:
                    card:
                      type: object
                      properties:
                        tag:
                          type: string
                          description: The full card tag data for an EMV/chip card transaction.
                          minLength: 1
                          maxLength: 2000
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      card:
                        type: object
                        properties:
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/incremental':
    post:
      operationId: incrementExistingTransaction
      tags:
        - Increment an Auth
      summary: 'Increment the amount for an existing transaction. Use this action to add a charge to an existing transaction before it is batched. This action does not change the status of a transaction, if successful it increases the amount of the existing transaction.  (Availability in production depends on your live configuration.)'
      description: 'Increment the amount for an existing transaction. Use this action to add a charge to an existing transaction before it is batched. This action does not change the status of a transaction, if successful it increases the amount of the existing transaction.  (Availability in production depends on your live configuration.)'
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      card:
                        type: object
                        properties:
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/adjustment':
    post:
      operationId: adjustSaleTransaction
      tags:
        - Adjust a CP Sale
      summary: 'Adjust an existing Customer Present (CP) transaction. Use this action to change data about a transaction before it is batched. This action does not change the status of a transaction, only the data it contains.'
      description: 'Adjust an existing Customer Present (CP)transaction. Use this action to change data about a transaction before it is batched. This action does not change the status of a transaction, only the data it contains.'
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
                gratuity_amount:
                  type: string
                  description: The amount of the gratuity for a transaction.It is always represented in the lowest denomiation of the related currency.
                  example: '1999'
                capture_sequence:
                  type: string
                  description: 'Indicates whether the request is the first,a subsequent or the last capture request when capturing multiple amounts separatelt'
                  example: FIRST
                  enum:
                    - FIRST
                    - SUBSEQUENT
                    - LAST
                total_capture_count:
                  type: integer
                  description: Indicates the total or expected total of captures that will executed against a transaction flagged as being captured multiple times.
                payment_method:
                  type: object
                  properties:
                    card:
                      type: object
                      properties:
                        tag:
                          type: string
                          description: The full card tag data for an EMV/chip card transaction.
                          minLength: 1
                          maxLength: 2000
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      card:
                        type: object
                        properties:
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/reauthorization':
    post:
      operationId: reauthSaleTransaction
      tags:
        - ReAuth a Reversed Sale
      summary: This action be to used to refresh the authorization associated with a transaction to get a more recent authcode or reauthorize a transaction reversed in error. (Availability in production depends on your live configuration.)
      description: This action be to used to refresh the authorization associated with a transaction to get a more recent authcode or reauthorize a transaction reversed in error. (Availability in production depends on your live configuration.)
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                  example: '11099'
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify the transaction.
                    example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 4
                    maxLength: 100
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  type:
                    type: string
                    description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                    example: SALE
                    default: SALE
                    enum:
                      - SALE
                      - REFUND
                  status:
                    type: string
                    description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                    enum:
                      - INITIATED
                      - PREAUTHORIZED
                      - CAPTURED
                      - REVERSED
                      - DECLINED
                      - FUNDED
                      - REJECTED
                    minLength: 0
                    maxLength: 50
                  amount:
                    type: string
                    description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                    example: '11099'
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  reference:
                    type: string
                    description: Merchant defined field to reference the transaction.
                    minLength: 8
                    maxLength: 50
                  batch_id:
                    type: string
                    description: A Global Payments created reference that uniquely identifies the batch.
                    example: BAT_234234234
                    minLength: 0
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      card:
                        type: object
                        properties:
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/confirmation':
    post:
      operationId: confirmTransaction
      tags:
        - Confirm a Transaction
      summary: 'For certain transactions created using non-card based payment methods (for example, PayPal), merchants are required to confirm that the transaction has completed  in order for funds to be funds to be transferred.'
      description: 'For certain transactions created using non-card based payment methods (for example, PayPal), merchants are required to confirm that the transaction has completed  in order for funds to be funds to be transferred.'
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: object
                  properties:
                    apm:
                      type: object
                      properties:
                        provider:
                          type: string
                          description: A string used to identify the payment method provider being used to execute this transaction.
                          enum:
                            - TESTPAY
                            - PAYPAL
                            - SOFORT
                            - IDEAL
                            - GIROPAY
                        provider_payer_reference:
                          type: string
                          description: The payer reference from the payment method provider.
                          example: CUST_12345
                      description: Data associated with an APM.
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_method:
                    type: object
                    properties:
                      apm:
                        type: object
                        properties:
                          provider:
                            type: string
                            description: A string used to identify the payment method provider being used to execute this transaction.
                            enum:
                              - TESTPAY
                              - PAYPAL
                              - SOFORT
                              - IDEAL
                              - GIROPAY
                          provider_payer_reference:
                            type: string
                            description: The payer reference from the payment method provider.
                            example: CUST_12345
                          provider_transaction_reference:
                            type: string
                            description: The reference the payment method provider created for the transaction.
                            example: 49wnfs9w434234
                          provider_time_created:
                            type: string
                            description: The reference the payment method provider created for the transaction.
                            example: 49wnfs9w434234
                          provider_payer_name:
                            type: string
                            description: A name of the payer from the payment method system.
                            example: James Mason
                        description: Data associated with the response of an APM transaction.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  '/transactions/{id}/split':
    post:
      operationId: splitTransaction
      tags:
        - Split a Transaction Amount
      summary: 'Transfer part of a transaction amount, executed by a merchant, to the partner account.'
      description: 'Transfer part of a transaction amount, executed by a merchant, to the partner account.'
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Idempotency
          description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
          schema:
            description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
            type: string
            minLength: 1
            maxLength: 50
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: header
          name: Content-type
          description: Format of the message.
          required: true
          schema:
            description: Indicates the format of the message.
            type: string
            default: application/json
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  description: Merchant defined field to reference the transaction.
                  minLength: 8
                  maxLength: 50
                description:
                  type: string
                  description: Merchant defined field to describe the transaction.
                  example: SKU#BLK-MED-G123-GUC
                  maxLength: 100
                partner_amount:
                  type: string
                  description: The amount of a transaction that is funded to the partner.
                  example: '11099'
        required: false
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Idempotency:
              schema:
                description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
                type: string
                minLength: 1
                maxLength: 50
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: A unique identifier generated by Global Payments to identify a transfer
                    example: TRF_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                    minLength: 1
                    maxLength: 50
                  time_created:
                    type: string
                    format: date-time
                    description: Global Payments time indicating when the object was created in ISO-8601 format.
                    example: '2021-05-03T21:23:39.718Z'
                  status:
                    type: string
                    description: Indicates where a Transfer is in its lifecycle. * `CAPTURED` - A Teansfer has been successfully captured and will move between merchant account and their preferred payment method.
                    enum:
                      - CAPTURED
                    minLength: 0
                    maxLength: 50
                  currency:
                    type: string
                    description: The currency of the amount in ISO-4217(alpha-3)
                    example: USD
                  country:
                    type: string
                    description: The country in ISO-3166-1(alpha-2 code) format.
                    example: US
                    enum:
                      - ISO-3166-1(alpha-2 code)
                      - US
                  merchant_amount:
                    type: string
                    description: The amount of the transfer in the merchant's currency that is funded to the merchant.
                    example: '11099'
                  partner_amount:
                    type: string
                    description: The amount of a transaction that is funded to the partner.
                    example: '11099'
                  merchant_id:
                    type: string
                    description: A unique identifier for the merchant set by Global Payments.
                    example: MER_c4c0df11039c48a9b63701adeaa296c3
                    minLength: 1
                    maxLength: 50
                  merchant_name:
                    type: string
                    description: A meaningful label for the merchant set by Global Payments.
                    example: Sandbox_merchant_2
                    minLength: 1
                    maxLength: 50
                  account_id:
                    type: string
                    description: A unique identifier for the merchant account set by Global Payments.
                    example: TRA_6716058969854a48b33347043ff8225f
                    minLength: 1
                    maxLength: 50
                  account_name:
                    type: string
                    description: A meaningful label for the merchant account set by Global Payments.
                    example: Transaction_Processing
                    minLength: 1
                    maxLength: 50
                  payment_method:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
                        example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
                        maxLength: 50
                      fingerprint_presence_indicator:
                        type: string
                        description: 'If enabled, this field indicates whether the payment method has been seen before or is new. * `EXISTS` -  Indicates that the payment method was seen on the platform before by this merchant. * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.'
                        enum:
                          - NEW
                          - EXISTS
                        minLength: 0
                        maxLength: 256
                      fingerprint:
                        type: string
                        description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
                        minLength: 0
                        maxLength: 256
                      result:
                        type: string
                        description: Result code from the payment method provider.
                      message:
                        type: string
                        description: Result message from the payment method provider corresponding to the result code.
                      entry_mode:
                        type: string
                        description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                        example: ECOM
                        enum:
                          - MOTO
                          - ECOM
                          - IN_APP
                          - CHIP
                          - SWIPE
                          - MANUAL
                          - PHONE
                          - MAIL
                          - CONTACTLESS_CHIP
                          - CONTACTLESS_SWIPE
                        minLength: 1
                        maxLength: 50
                      authentication:
                        type: object
                        description: Information outlining the degree of authentication executed related to a transaction.
                        properties:
                          three_ds:
                            type: object
                            description: Information outlining the degree of 3D Secure authentication executed.
                            properties:
                              value_result:
                                type: string
                                description: The result of the three_ds value validation by the brands or issuing bank.
                                minLength: 0
                                maxLength: 50
                      digital_wallet:
                        type: object
                        properties:
                          token:
                            type: string
                            description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                            minLength: 1
                            maxLength: 50
                          token_format:
                            type: string
                            description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                            minLength: 1
                            maxLength: 50
                            enum:
                              - CARD_NUMBER
                              - CARD_TOKEN
                          cryptogram:
                            type: string
                            description: The authentication value use to verify the validity of the digit wallet transaction.
                            minLength: 1
                            maxLength: 50
                          provider:
                            type: string
                            description: Identifies who provides the digital wallet for the Payer.
                            minLength: 1
                            maxLength: 50
                            enum:
                              - APPLEPAY
                              - PAY_BY_GOOGLE
                          expiry_month:
                            type: string
                            description: The 2 digit expiry date month of the card.
                            example: '05'
                            minLength: 2
                            maxLength: 2
                          expiry_year:
                            type: string
                            description: The 2 digit expiry date year of the card.
                            example: '25'
                            minLength: 2
                            maxLength: 2
                          eci:
                            type: string
                            description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                            example: '5'
                            minLength: 0
                            maxLength: 50
                          cvv:
                            type: string
                            description: The numeric value printed on the physical card.
                            example: '852'
                            minLength: 0
                            maxLength: 4
                          cvv_indicator:
                            type: string
                            description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                            example: PRESENT
                            minLength: 0
                            maxLength: 50
                            enum:
                              - ILLEGIBLE
                              - NOT_PRESENT
                              - PRESENT
                          avs_address:
                            type: string
                            description: First line of the address associated with the card.
                            example: Apt 123
                            minLength: 0
                            maxLength: 50
                          avs_postal_code:
                            type: string
                            description: Postal code of the address associated with the card.
                            example: TGX562
                            minLength: 0
                            maxLength: 50
                      apm:
                        type: object
                        properties:
                          provider:
                            type: string
                            description: A string used to identify the payment method provider being used to execute this transaction.
                            enum:
                              - TESTPAY
                              - PAYPAL
                              - SOFORT
                              - IDEAL
                              - GIROPAY
                          redirect_url:
                            type: string
                            description: URL to redirect the payer from the merchant's system to the payment method's system.
                          session_token:
                            type: string
                            description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
                            example: EC-0SR89134FA420913U
                          fund_status:
                            type: string
                            description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
                            example: RECEIVED
                            enum:
                              - NOT_EXPECTED
                              - RECEIVED
                              - WAITING
                              - MISSING
                          wait_notification:
                            minimum: 0
                            maximum: 1
                            type: number
                            description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
                            example: 0
                            enum:
                              - 0
                              - 1
                          optional_redirect:
                            minimum: 0
                            maximum: 1
                            type: number
                            description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
                            example: 0
                            enum:
                              - 0
                              - 1
                          provider_transaction_reference:
                            type: string
                            description: The reference the payment method provider created for the transaction.
                            example: 49wnfs9w434234
                          provider_time_created:
                            type: string
                            description: The time the payment method provider created the transaction at on their system.
                            example: 49wnfs9w434234
                          provider_payer_name:
                            type: string
                            description: A name of the payer from the payment method system.
                            example: James Mason
                          bank:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The name assocaited with the bank account
                              identifier_code:
                                type: string
                                description: The international identifier code for the bank.
                              iban:
                                type: string
                                description: The international identifier of the bank account.
                              code:
                                type: string
                                description: The local identifier of the bank.
                              account_number:
                                type: string
                                description: The local identifier of the bank account.
                          mandate:
                            type: object
                            properties:
                              code:
                                type: string
                                description: The reference to identify the mandate.
                        description: Data associated with the response of an APM transaction.
                      card:
                        type: object
                        properties:
                          masked_number_last4:
                            type: string
                            description: Masked card number with last 4 digits showing.
                            minLength: 12
                            maxLength: 50
                          tag_response:
                            type: string
                            description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
                            minLength: 0
                            maxLength: 50
                          authcode:
                            type: string
                            description: Code generated when the card is successfully authorized.
                            minLength: 0
                            maxLength: 50
                          brand:
                            type: string
                            description: Indicates the card brand that issued the card.
                            enum:
                              - VISA
                              - MASTERCARD
                              - AMEX
                              - DINERS
                              - DISCOVER
                              - JCB
                              - CUP
                            minLength: 0
                            maxLength: 50
                          brand_reference:
                            type: string
                            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                            minLength: 0
                            maxLength: 50
                          brand_time_reference:
                            type: string
                            description: The time returned by the card brand indicating when the transaction was processed on their system.
                            minLength: 0
                            maxLength: 50
                          cvv_result:
                            type: string
                            description: The result of the CVV check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_address_result:
                            type: string
                            description: The result of the AVS address check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_postal_code_result:
                            type: string
                            description: The result of the AVS postal code check.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - MATCHED
                              - NOT_MATCHED
                              - NOT_CHECKED
                          avs_action:
                            type: string
                            description: The recommended AVS action to be taken by the agent processing the card transaction.
                            minLength: 0
                            maxLength: 50
                            enum:
                              - PROMPT
                              - DECLINE
                              - ACCEPT
                          provider:
                            type: object
                            description: The result codes directly from the card issuer.
                            properties:
                              card.provider.result:
                                type: string
                                description: Result code from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.cvv_result:
                                type: string
                                description: The result code of the CVV check from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.avs_result:
                                type: string
                                description: The result code of the AVS check from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.avs_address_result:
                                type: string
                                description: The result code of the AVS address check from the card issuer.
                                minLength: 0
                                maxLength: 50
                              card.provider.avs_postal_code_result:
                                type: string
                                description: The result of the AVS postal code check from the card issuer..
                                minLength: 0
                                maxLength: 50
                      bank_transfer:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the bank.
                            example: High Street Bank
                          masked_number_last4:
                            type: string
                            description: The last 4 characters of the local reference for a bank account number.
                            minLength: 1
                            maxLength: 50
                          number_type:
                            type: string
                            description: The type of bank account associated with the payer's bank account.
                            example: SAVING
                            enum:
                              - CHECKING
                              - SAVING
                              - CREDIT
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
  /settlement/transactions:
    get:
      operationId: getSettledTransactions
      tags:
        - List Settled Transactions
      summary: Get a list of funded transactions using filter criteria passed in the query string. Page through the result set to access all records.
      description: Get a list of transactions using criteria passed in the query string. Page through the result set to access all records.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: Bearer access token value used to access the API.
          schema:
            description: Bearer access token value used to access the API.
            type: string
            default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
            example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        - in: header
          name: X-GP-Version
          required: true
          schema:
            description: Indicates the version of the GP-API for this message.
            type: string
            default: '2021-03-22'
            minLength: 1
            maxLength: 50
        - in: header
          name: Accept
          description: Expected format of the response message.
          schema:
            description: Expected format of the response message.
            type: string
            default: application/json
            example: application/json
        - in: query
          name: page
          description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
          schema:
            description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
            maximum: 1000
            minimum: 1
            type: number
            default: 1
        - in: query
          name: page_size
          description: The total number of objects to return in a single page for that list.
          schema:
            description: The total number of objects to return in a single page for that list.
            maximum: 1000
            minimum: 1
            type: number
            default: 5
        - in: query
          name: order
          description: 'The direction of the ordering of the entire list, ASC or DESC'
          schema:
            description: 'The direction of the ordering of the entire list, ASC or DESC'
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: order_by
          description: 'The value to order the entire list by. '
          schema:
            description: 'The value to order the entire list by. '
            type: string
            enum:
              - STATUS
              - TYPE
              - DEPOSIT_ID
              - TIME_CREATED
        - name: number_first6
          in: query
          schema:
            type: string
            description: First 6 digits of card number
            minLength: 6
            maxLength: 6
        - name: number_last4
          in: query
          description: 'The last 4 of a card number    '
          schema:
            type: string
            description: Last 4 digits of card number
            minLength: 4
            maxLength: 4
        - name: deposit_status
          in: query
          description: 'Search for Deposits that have a status of FUNDED, SPLIT_FUNDING,DELAYED, RESERVED, IRREG or RELEASED.'
          schema:
            type: string
            description: Indicates where a resource object is in it's lifecylce.
            example: FUNDED
        - name: account_name
          in: query
          description: A unique identifier that identifies the account the search is being executed against.
          required: true
          schema:
            type: string
            description: A meaningful label for the merchant account set by Global Payments.
            example: Settlement Reporting
            minLength: 1
            maxLength: 50
        - name: brand
          in: query
          description: Indicates the card brand that issued the card.
          schema:
            type: string
            description: Indicates the card brand that issued the card.
            enum:
              - VISA
              - MASTERCARD
              - AMEX
              - DINERS
              - DISCOVER
              - JCB
              - CUP
            minLength: 0
            maxLength: 50
        - name: arn
          in: query
          description: Search by the full arn
          schema:
            type: string
            description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
            minLength: 1
            maxLength: 50
        - name: brand_reference
          in: query
          description: Search by the brand reference returned at the time of the transaction
          schema:
            type: string
            description: The unique reference created by the brands/schemes to uniquely identify the transaction.
            minLength: 0
            maxLength: 50
        - name: authcode
          in: query
          description: Search by the authcode
          schema:
            type: string
            description: Code generated when the card is successfully authorized.
            minLength: 0
            maxLength: 50
        - name: reference
          in: query
          description: wildcard search by the reference the merchant submitted with the transaction.
          schema:
            type: string
            description: Merchant defined field to reference the transaction.
            minLength: 8
            maxLength: 50
        - name: status
          in: query
          description: 'Search for transactions that have a status of FUNDED, REJECTED.'
          schema:
            type: string
            description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
            enum:
              - INITIATED
              - PREAUTHORIZED
              - CAPTURED
              - REVERSED
              - DECLINED
              - FUNDED
              - REJECTED
            minLength: 0
            maxLength: 50
        - name: from_time_created
          in: query
          description: 'The time to search from in a range, using the transaction time created value.'
          required: true
          schema:
            description: 'The start time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-10-01'
        - name: to_time_created
          in: query
          description: 'The time to search to in a range, using the transaction time created value.'
          schema:
            description: 'The end time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-12-31'
        - name: deposit_id
          in: query
          description: 'Identifier that uniquely identifies the Deposit on the Global Payments system. '
          schema:
            type: string
            description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
            minLength: 1
            maxLength: 50
        - name: from_deposit_time_created
          in: query
          description: 'The time to search from in a range, using the time the deposit was created that contains this transaction.'
          schema:
            description: 'The start time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-10-01'
        - name: to_deposit_time_created
          in: query
          description: 'The time to search to in a range, using the time the deposit was created that contains this transaction.'
          schema:
            description: 'The end time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-12-31'
        - name: from_batch_time_created
          in: query
          description: 'The time to search from in a range, using the time the batch was created that contains this transaction.'
          schema:
            description: 'The start time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-10-01'
        - name: to_batch_time_created
          in: query
          description: 'The time to search to in a range, using the time the batch was created that contains this transaction.'
          schema:
            description: 'The end time to search for in a range, using the resource time_created value.'
            type: string
            format: date
            example: '2021-12-31'
        - name: system.mid
          in: query
          description: The system merchant identifier.
          schema:
            type: string
            description: Merchant Identifier from Global Payments system for some features.
            minLength: 1
            maxLength: 50
        - name: system.hierarchy
          in: query
          description: The system merchant hierarchy
          schema:
            type: string
            description: Identifies the location of a merchant  within the merchant's corporate hierarchical structure.
            minLength: 1
            maxLength: 50
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                description: Indicates the format of the message.
                type: string
                default: application/json
            Content-Encoding:
              schema:
                description: Indicates if the message is compressed and using what compression mechanism.
                type: string
                default: gzip
            X-GP-Version:
              schema:
                description: Indicates the version of the GP-API for this message.
                type: string
                default: '2021-03-22'
                minLength: 1
                maxLength: 50
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_record_count:
                    type: number
                    description: 'The total number of records across all pages for the search filter. When searching for a collection of resoures, this is returned on the first page only and when the date range is a month or less.'
                    example: 3412
                  current_page_size:
                    type: number
                    description: The total number of records returned on the current page. If current_page_size is less than the page_size using in the querystring then this is the final page for that search.
                    example: 3412
                  merchant_id:
                    type: string
                    description: A unique identifier for the merchant set by Global Payments.
                    example: MER_c4c0df11039c48a9b63701adeaa296c3
                    minLength: 1
                    maxLength: 50
                  merchant_name:
                    type: string
                    description: A meaningful label for the merchant set by Global Payments.
                    example: Sandbox_merchant_2
                    minLength: 1
                    maxLength: 50
                  account_id:
                    type: string
                    description: A unique identifier for the merchant account set by Global Payments.
                    example: TRA_6716058969854a48b33347043ff8225f
                    minLength: 1
                    maxLength: 50
                  account_name:
                    type: string
                    description: A meaningful label for the merchant account set by Global Payments.
                    example: Transaction_Processing
                    minLength: 1
                    maxLength: 50
                  filter:
                    type: object
                    description: Indicates what fields and values used to filter the current list of resource objects in the current response.
                  paging:
                    type: object
                    description: The paging values used to generate this response.
                    properties:
                      page:
                        description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
                        maximum: 1000
                        minimum: 1
                        type: number
                        default: 1
                      page_size:
                        description: The total number of objects to return in a single page for that list.
                        maximum: 1000
                        minimum: 1
                        type: number
                        default: 5
                      order_by:
                        description: 'The value to order the entire list by. '
                        type: string
                        enum:
                          - TIME_CREATED
                      order:
                        description: 'The direction of the ordering of the entire list, ASC or DESC'
                        type: string
                        enum:
                          - ASC
                          - DESC
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        time_created:
                          type: string
                          format: date-time
                          description: Global Payments time indicating when the object was created in ISO-8601 format.
                          example: '2021-05-03T21:23:39.718Z'
                        status:
                          type: string
                          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                          enum:
                            - INITIATED
                            - PREAUTHORIZED
                            - CAPTURED
                            - REVERSED
                            - DECLINED
                            - FUNDED
                            - REJECTED
                          minLength: 0
                          maxLength: 50
                        type:
                          type: string
                          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                          example: SALE
                          default: SALE
                          enum:
                            - SALE
                            - REFUND
                        amount:
                          type: string
                          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                          example: '11099'
                        currency:
                          type: string
                          description: The currency of the amount in ISO-4217(alpha-3)
                          example: USD
                        merchant_amount:
                          type: string
                          description: The amount of the transaction in the merchant's currency that is funded to the merchant.
                          example: '1999'
                        merchant_currency:
                          type: string
                          description: The currency of the amount in ISO-4217(alpha-3)
                          example: USD
                        discount_amount:
                          type: string
                          description: The discount amount of the transaction in the currency the transaction was captured in.
                          example: '199'
                        discount_currency:
                          type: string
                          description: The currency of the amount in ISO-4217(alpha-3)
                          example: USD
                        merchant_discount_amount:
                          type: string
                          description: The discount amount of the transaction in the currency the merchant gets funded in
                          example: '299'
                        merchant_discount_currency:
                          type: string
                          description: The currency of the amount in ISO-4217(alpha-3)
                          example: USD
                        reference:
                          type: string
                          description: Merchant defined field to reference the transaction.
                          minLength: 8
                          maxLength: 50
                        time_created_reference:
                          type: string
                          description: Merchant's time indicating when the transaction was first created. Value is in ISO-8601 format.
                        deposit_id:
                          type: string
                          description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                          minLength: 1
                          maxLength: 50
                        deposit_time_created:
                          type: string
                          format: date-time
                          description: Global Payments time indicating when the object was created in ISO-8601 format.
                          example: '2021-05-03T21:23:39.718Z'
                        deposit_status:
                          type: string
                          description: Indicates where a resource object is in it's lifecylce.
                          example: FUNDED
                        batch_id:
                          type: string
                          description: A Global Payments created reference that uniquely identifies the batch.
                          example: BAT_234234234
                          minLength: 0
                          maxLength: 50
                        batch_time_created:
                          type: string
                          format: date-time
                          description: Global Payments time indicating when the object was created in ISO-8601 format.
                          example: '2021-05-03T21:23:39.718Z'
                        payment_method:
                          type: object
                          properties:
                            entry_mode:
                              type: string
                              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                              example: ECOM
                              enum:
                                - MOTO
                                - ECOM
                                - IN_APP
                                - CHIP
                                - SWIPE
                                - MANUAL
                                - PHONE
                                - MAIL
                                - CONTACTLESS_CHIP
                                - CONTACTLESS_SWIPE
                              minLength: 1
                              maxLength: 50
                            card:
                              type: object
                              properties:
                                brand:
                                  type: string
                                  description: Indicates the card brand that issued the card.
                                  enum:
                                    - VISA
                                    - MASTERCARD
                                    - AMEX
                                    - DINERS
                                    - DISCOVER
                                    - JCB
                                    - CUP
                                  minLength: 0
                                  maxLength: 50
                                authcode:
                                  type: string
                                  description: Code generated when the card is successfully authorized.
                                  minLength: 0
                                  maxLength: 50
                                arn:
                                  type: string
                                  description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
                                  minLength: 1
                                  maxLength: 50
                                brand_reference:
                                  type: string
                                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                                  minLength: 0
                                  maxLength: 50
                                masked_number_first6last4:
                                  type: string
                                  description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                              description: Data relating to the card payment method returned in a list response.
                        fees:
                          type: object
                          description: A breakdown of the fees associated with the transaction.
                          properties:
                            'total_amount_decimal:':
                              type: string
                              description: The total fee amount for this transaction. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.
                              example: '1298.67'
                            other_fees_amount_decimal:
                              type: string
                              description: 'The total amount of other fees for this transaction that don''t fit into assessment, interchange, discount or mark up. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.'
                              example: '1298.67'
                            exchange_rate:
                              type: string
                              description: The exchange rate used to convert the total fee amount in one currency to the currency of the merchant.
                              example: '0.12332'
                            assessment_total_amount_decimal:
                              type: string
                              description: The total assessment fee amount for this transaction. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.
                              example: '1298.67'
                            interchange:
                              type: object
                              description: a breakdown of the interchange fees associated with the transaction.
                              properties:
                                total_amount_decimal:
                                  type: string
                                  description: The total interchange amount represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                                program:
                                  type: string
                                  description: The name of the interchange program applied to the transction.
                                percentage:
                                  type: string
                                  description: The percentage of the transaction amount charged as interchange for this transaction.
                                  example: 0.234%
                                percentage_amount_decimal:
                                  type: string
                                  description: The interchange amount derived from a percentage of the transaction amount. It is represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '101.56'
                                per_item_flat_amount_decimal:
                                  type: string
                                  description: The amount charged based on the number of items bought.
                                  example: '10'
                                per_item_calculated_amount_decimal:
                                  type: string
                                  description: 'The amount that is charged based on one or many aspects of the transactions. These aspects can be the type of card used (debit, credit), the brand (Visa, Mastercard, etc,), how the card details were obtained,the channel (CP vs.CNP).'
                                  example: '155'
                            discount:
                              type: object
                              description: a breakdown of the interchange fees associated with the transaction.
                              properties:
                                total_amount_decimal:
                                  type: string
                                  description: The total interchange amount represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                                rate_1_percentage:
                                  type: string
                                  description: The discount percentage charged based on the rate number.
                                  example: 0.234%
                                rate_2_percentage:
                                  type: string
                                  description: The discount percentage charged based on the rate number.
                                  example: 0.234%
                            assessment_1:
                              type: object
                              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                              properties:
                                description:
                                  type: string
                                  description: The description for this assessment charge.
                                percentage:
                                  type: string
                                  description: The percentage of the transaction amount used to calculate this assessment charge.
                                  example: 0.234%
                                percentage_amount_decimal:
                                  type: string
                                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                            assessment_2:
                              type: object
                              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                              properties:
                                description:
                                  type: string
                                  description: The description for this assessment charge.
                                percentage:
                                  type: string
                                  description: The percentage of the transaction amount used to calculate this assessment charge.
                                  example: 0.234%
                                percentage_amount_decimal:
                                  type: string
                                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                            assessment_3:
                              type: object
                              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                              properties:
                                description:
                                  type: string
                                  description: The description for this assessment charge.
                                percentage:
                                  type: string
                                  description: The percentage of the transaction amount used to calculate this assessment charge.
                                  example: 0.234%
                                percentage_amount_decimal:
                                  type: string
                                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                            assessment_4:
                              type: object
                              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                              properties:
                                description:
                                  type: string
                                  description: The description for this assessment charge.
                                percentage:
                                  type: string
                                  description: The percentage of the transaction amount used to calculate this assessment charge.
                                  example: 0.234%
                                percentage_amount_decimal:
                                  type: string
                                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                            assessment_5:
                              type: object
                              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                              properties:
                                description:
                                  type: string
                                  description: The description for this assessment charge.
                                percentage:
                                  type: string
                                  description: The percentage of the transaction amount used to calculate this assessment charge.
                                  example: 0.234%
                                percentage_amount_decimal:
                                  type: string
                                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                                  example: '1050.4'
                            mark_up:
                              type: object
                              description: A list of percentage mark ups on any currency conversion services for this transaction.
                              properties:
                                dcc_percentage:
                                  type: string
                                  description: 'The mark up percentage charged for DCC, Dynamic Currency Conversion.'
                                  example: 0.034%
                                multicurrency_percentage:
                                  type: string
                                  description: The mark up percentage charged for Multi-Currency
                                  example: 0.034%
                        system:
                          type: object
                          description: Configuration relating to a transactions from the Global Payments system. This info is relevant for troubleshooting and integrators using other Global Payments systems to payment process.
                          properties:
                            mid:
                              type: string
                              description: Merchant Identifier from Global Payments system for some features.
                              minLength: 1
                              maxLength: 50
                            tid:
                              type: string
                              description: Terminal Identifier from Global Payments system for some features.
                              minLength: 1
                              maxLength: 50
                            hierarchy:
                              type: string
                              description: Identifies the location of a merchant  within the merchant's corporate hierarchical structure.
                              minLength: 1
                              maxLength: 50
                            name:
                              type: string
                              description: The merchant name that is associated with the merchant.
                              example: MERCHANT ABC INC.
                              minLength: 1
                              maxLength: 100
                            dba:
                              type: string
                              description: The alternate name the merchant may be known as.
                              example: MERCHANT XYZ INC.
                              minLength: 1
                              maxLength: 100
                  action:
                    type: object
                    description: Information about the Action executed.
                    properties:
                      id:
                        type: string
                        description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                        minLength: 1
                        maxLength: 50
                      type:
                        type: string
                        description: Indicates the action taken.
                      time_created:
                        type: string
                        format: date-time
                        description: Global Payments time indicating when the object was created in ISO-8601 format.
                        example: '2021-05-03T21:23:39.718Z'
                      result_code:
                        type: string
                        description: The result of the action executed.
                        enum:
                          - SUCCESS
                          - DECLINE
                        minLength: 1
                        maxLength: 50
                      app_id:
                        type: string
                        description: The id of the app that was used to create the token.
                        example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
                        minLength: 1
                        maxLength: 50
                      app_name:
                        type: string
                        description: The name of the app the user gave to the application.
                        example: demo_app
                        minLength: 1
                        maxLength: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Bad Request
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an issue with the API request.
                    example: MANDATORY_DATA_MISSING
                    enum:
                      - DUPLICATE_TRANSACTION
                      - INVALID_BATCH_ACTION
                      - INVALID_REQUEST_DATA
                      - INVALID_TRANSACTION_ACTION
                      - MANDATORY_DATA_MISSING
                      - TRANSACTION_NOT_FOUND
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40016'
                    enum:
                      - '40016'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Bad track data
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                description: Not Authenticated
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action failed as token in the request is not valid.
                    example: NOT_AUTHENTICATED
                    enum:
                      - NOT_AUTHENTICATED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40001'
                    enum:
                      - '40001'
                      - '40002'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Invalid Access Token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  error_code:
                    type: string
                    description: This action is not authorized with the credentials being used.
                    example: ACTION_NOT_AUTHORIZED
                    enum:
                      - ACTION_NOT_AUTHORIZED
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '40003'
                    enum:
                      - '40003'
                      - '40004'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Permission not enabled to execute action
        '404':
          description: Resource Not Found
          content: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Internal Server Error
                type: object
                properties:
                  error_code:
                    type: string
                    description: This indicates an unexpected issue occurred on the Global Payments system.
                    example: SYSTEM_ERROR_DOWNSTREAM
                    enum:
                      - SYSTEM_ERROR_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50011'
                    enum:
                      - '50011'
                  detailed_error_description:
                    type: string
                    description: Unique Text describing the specific error.
                    example: Processor Configuration error
        '501':
          description: Not implemented
          content:
            application/json:
              schema:
                description: Not implemented
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error not yet handled or mapped properly.
                    example: UNKNOWN_RESPONSE
                    enum:
                      - UNKNOWN_RESPONSE
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50012'
                    enum:
                      - '50012'
                  detailed_error_description:
                    type: string
                    description: 'Unique Text describing the specific error not yet handled.      '
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: Bad Gateway
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was an issue connecting to a partner system..
                    example: UNAUTHORIZED_DOWNSTREAM
                    enum:
                      - UNAUTHORIZED_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50002'
                    enum:
                      - '50002'
                  detailed_error_description:
                    type: string
                    description: Authentication error—Verify and correct credentials.
        '504':
          description: Timeout
          content:
            application/json:
              schema:
                description: Timeout
                type: object
                properties:
                  error_code:
                    type: string
                    description: This is an error indicating there was a timeout issue to another  system.
                    example: TIMEOUT_DOWNSTREAM
                    enum:
                      - TIMEOUT_DOWNSTREAM
                  detailed_error_code:
                    type: string
                    description: Unique reference to identify the error.
                    example: '50008'
                    enum:
                      - '50008'
                  detailed_error_description:
                    type: string
                    description: No response from payment method provider.
components:
  schemas:
    create_request:
      required:
        - account_name
        - amount
        - channel
        - country
        - currency
        - payment_method
        - reference
      type: object
      properties:
        account_name:
          type: string
          description: A meaningful label for the merchant account set by Global Payments.
          example: Transaction_Processing
          minLength: 1
          maxLength: 50
        type:
          type: string
          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
          example: SALE
          default: SALE
          enum:
            - SALE
            - REFUND
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
          example: CNP
          enum:
            - CP
            - CNP
        country:
          type: string
          description: The country in ISO-3166-1(alpha-2 code) format.
          example: US
          enum:
            - ISO-3166-1(alpha-2 code)
            - US
        capture_mode:
          type: string
          description: 'Indicates whether the transaction is to be captured automatically, later or later using more than 1 partial capture. * `AUTO` - If a transaction is authorized, funds will exchange between the payer and merchant automatically and as soon as possible. * `LATER` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically and will require a subsequent separate action to capture that transaction and start the funding process. Only one successful capture is permitted. * `MULTIPLE` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically. One or more subsequent separate capture actions are required to capture that transaction in parts and start the funding process for the part captured. One or many successful capture are permitted once the total amount captured is within a range of the original authorized amount.'''
          default: AUTO
          enum:
            - AUTO
            - LATER
            - MULTIPLE
        total_capture_count:
          type: integer
          description: Indicates the total or expected total of captures that will executed against a transaction flagged as being captured multiple times.
        authorization_mode:
          type: string
          description: Indicates if the merchant would accept an authorization for an amount less than the requested amount. This is available for CP channel only where the balance not authorized can be processed again using a different card. * `PARTIAL` - Indicates merchant would accept an authorization for an amount less than the requested amount. * `WHOLE` - Merchant only accepts an authorization for the requested amount and not less than that amount.
          example: PARTIAL
          default: WHOLE
          enum:
            - PARTIAL
            - WHOLE
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        gratuity_amount:
          type: string
          description: The amount of the gratuity for a transaction.It is always represented in the lowest denomiation of the related currency.
          example: '1999'
        cashback_amount:
          type: string
          description: The amount of the transaction that relates to cashback.It is always represented in the lowest denomiation of the related currency.
          example: '2000'
        surcharge_amount:
          type: string
          description: The amount that reflects the additional charge the merchant applied to the transaction for using a specific payment method.It is always represented in the lowest denomiation of the related currency.
          example: '150'
        convenience_amount:
          type: string
          description: The amount that reflects the charge the merchant applied to the transaction for availing of a more convenient purchase.It is always represented in the lowest denomiation of the related currency.
          example: '120'
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        description:
          type: string
          description: Merchant defined field to describe the transaction.
          example: SKU#BLK-MED-G123-GUC
          maxLength: 100
        language:
          type: string
          description: Indicates the language the transaction was executed in. In the format ISO-639-1 (alpha-2) or ISO-639-1 (alpha-2)_ISO-3166(alpha-2)
          example: fr_CA
          enum:
            - ISO-639(alpha-2)
            - fr
            - ISO-639(alpha-2)_ISO-3166(alpha-2)
            - fr_CA
        ip_address:
          type: string
          description: Indicates the source IP Address of the system used to create the transaction.
          example: 123.123.123.123
          minLength: 0
          maxLength: 50
        site_reference:
          type: string
          description: A merchant defined reference for the location that created the transaction.
          minLength: 0
          maxLength: 50
        user_reference:
          type: string
          description: The merchant's user reference for the transaction. This represents the person who processed the transaction on the merchant's behalf like a clerk or cashier reference.
          example: EMP_234235
          minLength: 0
          maxLength: 50
        payer_reference:
          type: string
          description: The merchant's payer reference for the transaction
          example: CUST_12345
          minLength: 0
          maxLength: 50
        order:
          type: object
          properties:
            reference:
              type: string
              description: Merchant defined field common to all transactions that are part of the same order.
              example: INV#88547
              minLength: 0
              maxLength: 50
        currency_conversion:
          type: object
          properties:
            id:
              type: string
              description: A unique identifier generated by Global Payments to identify the currency conversion. It can be used to reference a currency conversion when processing a sale or a refund transaction.
              example: CCS_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
              minLength: 1
              maxLength: 50
        initiator:
          type: string
          description: 'Indicates whether the Merchant or the Payer initiated the creation of a transaction. * `PAYER` - The transaction was initated by the customer who is paying the merchant. * `MERCHANT` - The transaction was initated by the merchant, who is getting paid by the payer.'''
          enum:
            - PAYER
            - MERCHANT
        stored_credential:
          type: object
          description: Stored data information used to create a transaction.
          properties:
            model:
              type: string
              description: 'Indicates the transaction processing model being executed when using stored credentials. * `UNSCHEDULED` - the transaction is adhoc or unscheduled. For example a payer visiting a merchant to make purchase using the payment method stored with the merchant. * `RECURRING` - The transaction is a repeat transaction initiated my the merchant and taken using the payment method stored with the merchant, as part of an agreed schedule of transactions. * `SUBSCRIPTION` - The transaction is a repeat transaction initiated my the merchant and taken using the payment method stored with the merchant, as part of an agreed schedule of transactions. The amount taken is based on the usage by the payer of the good or service. for example a monthly mobile phone bill. * `INSTALLMENT` - The transaction is a repeat transaction initiated my the merchant and taken using the payment method stored with the merchant, as part of an agreed schedule of transactions and where the amount is known and agreed in advanced. For example the payment in full of a good in fixed installments over a defined period of time.'''
              minLength: 1
              maxLength: 50
              enum:
                - UNSCHEDULED
                - RECURRING
                - SUBSCRIPTION
                - INSTALLMENT
            reason:
              type: string
              description: The reason stored credentials are being used to to create a transaction.
              enum:
                - INCREMENTAL
                - RESUBMISSION
                - REAUTHORIZATION
                - DELAYED
                - NO_SHOW
              minLength: 1
              maxLength: 50
            sequence:
              type: string
              description: Indiciates the order of this transaction in the sequence of a planned repeating transaction processing model.
              minLength: 1
              maxLength: 50
              enum:
                - FIRST
                - SUBSEQUENT
                - LAST
        notifications:
          type: object
          description: Indicates to Global Payments where the merchant wants to receive notifications of certain events that occur on the Global Payments system.
          properties:
            return_url:
              example: 'https://www.example.com/notifications/return'
              type: string
              description: 'The merchant URL to return the payer to, once the payer has completed payment using the payment method. This returns control of the payer''s payment experience to the merchant.'
            status_url:
              example: 'https://www.example.com/notifications/status'
              type: string
              description: The merchant URL to notify the merchant of the latest status of the transaction.
            challenge_return_url:
              example: 'https://www.example.com/notifications/return'
              type: string
              description: The merchant URL that will receive the notification when the customer has completed the authentication.
            three_ds_method_return_url:
              type: string
              description: The merchant URL that will receive the notification when the 3DS ACS successfully gathers device information and to close the hidden iFrame accordingly.
              example: 'https://www.example.com/notifications/3DS_method_complete'
            decoupled_challenge_return_url:
              example: 'https://www.example.com/notifications/return'
              type: string
              description: The merchant URL that will receive the notification when the customer has completed the authentication when the authentication is decoupled and separate to the purchase.
        payment_method:
          type: object
          properties:
            id:
              type: string
              description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
              example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
              maxLength: 50
            first_name:
              type: string
              description: Specify the first name of the owner of the payment method.
              example: James
              minLength: 0
              maxLength: 50
            last_name:
              type: string
              description: Specify the surname of the owner of the payment method.
              example: Mason
              minLength: 0
              maxLength: 50
            name:
              type: string
              description: The full name of the owner of the payment method.
              example: James Mason
              minLength: 0
              maxLength: 100
            entry_mode:
              type: string
              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
              example: ECOM
              enum:
                - MOTO
                - ECOM
                - IN_APP
                - CHIP
                - SWIPE
                - MANUAL
                - PHONE
                - MAIL
                - CONTACTLESS_CHIP
                - CONTACTLESS_SWIPE
              minLength: 1
              maxLength: 50
            narrative:
              type: string
              description: Contains the value a merchant wishes to appear on the payer's payment method statement for this transaction
              minLength: 1
              maxLength: 50
            storage_mode:
              type: string
              description: Indicates whether to store the card as part of a transaction. * `ALWAYS` -  The card information is always stored irrespective of whether the payment method authorization was successful or not. * `ON_SUCCESS` - The card information is only storedif the payment method authorization was successful.
              enum:
                - ALWAYS
                - ON_SUCCESS
              minLength: 1
              maxLength: 50
            fingerprint_mode:
              type: string
              description: Indicates whether to execute the fingerprint signature functionality. * `ALWAYS` - Always check and create the fingerprint value regardless of the result of the card authorization. * `ON_SUCCESS` - Always check and create the fingerprint value when the card authorization is successful.
              enum:
                - ALWAYS
                - ON_SUCCESS
              minLength: 1
              maxLength: 50
            encryption:
              type: object
              properties:
                method:
                  type: string
                  description: The encryption method used when sending encrypted card data to Global Payments.
                  enum:
                    - KTB
                    - KSN
                  minLength: 1
                  maxLength: 50
                version:
                  type: string
                  description: The version of encryption being used.
                  minLength: 1
                  maxLength: 50
                info:
                  type: string
                  description: The encryption info used when sending encrypted card data to Global Payments.
                  minLength: 1
                  maxLength: 2000
            authentication:
              type: object
              description: Information outlining the degree of authentication executed related to a transaction.
              properties:
                three_ds:
                  type: object
                  description: Information outlining the degree of 3D Secure authentication executed.
                  properties:
                    message_version:
                      type: string
                      description: Indicates the version of 3DS
                      example: 1.0.0
                      minLength: 0
                      maxLength: 50
                    eci:
                      type: string
                      description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                      example: '5'
                      minLength: 0
                      maxLength: 2
                    value:
                      type: string
                      description: The authentication value created as part of the 3D Secure process.
                      minLength: 0
                      maxLength: 50
                    server_trans_reference:
                      type: string
                      description: The reference created by the 3DSecure provider to identify the specific authentication attempt.
                      minLength: 0
                      maxLength: 50
                    ds_trans_reference:
                      type: string
                      description: The reference created by the 3DSecure Directory Server to identify the specific authentication attempt.
                      minLength: 0
                      maxLength: 50
                    exempt_status:
                      type: string
                      description: Indicates if any exemptions apply to this transaction.
                      minLength: 0
                      maxLength: 50
                      enum:
                        - LOW_VALUE
                        - TRANSACTION_RISK_ANALYSIS
                        - TRUSTED_MERCHANT
                        - SECURE_CORPORATE_PAYMENT
                        - SCA_DELEGATION
            card:
              type: object
              properties:
                number:
                  type: string
                  description: The the card account number used to authorize the transaction. Also known as PAN.
                  example: '4263970000005262'
                  minLength: 1
                  maxLength: 50
                expiry_month:
                  type: string
                  description: The 2 digit expiry date month of the card.
                  example: '05'
                  minLength: 2
                  maxLength: 2
                expiry_year:
                  type: string
                  description: The 2 digit expiry date year of the card.
                  example: '25'
                  minLength: 2
                  maxLength: 2
                track:
                  type: string
                  description: Data from magnetic stripe of a card
                  minLength: 1
                  maxLength: 500
                tag:
                  type: string
                  description: The full card tag data for an EMV/chip card transaction.
                  minLength: 1
                  maxLength: 2000
                chip_condition:
                  type: string
                  description: Indicates if a fallback mechanism was used to obtain the card information when EMV/chip did not work as expected. * `PREV_SUCCESS` - indicates the previous transaction with this card was a success. * `PREV_FAILED` - indicates the previous transaction with this card failed.
                  enum:
                    - PREV_SUCCESS
                    - PREV_FAILED
                  minLength: 1
                  maxLength: 50
                pin_block:
                  type: string
                  description: 'Contains the pin block info, relating to the pin code the Payer entered.'
                  minLength: 1
                  maxLength: 500
                cvv:
                  type: string
                  description: The numeric value printed on the physical card.
                  example: '852'
                  minLength: 0
                  maxLength: 4
                cvv_indicator:
                  type: string
                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                  example: PRESENT
                  minLength: 0
                  maxLength: 50
                  enum:
                    - ILLEGIBLE
                    - NOT_PRESENT
                    - PRESENT
                avs_address:
                  type: string
                  description: First line of the address associated with the card.
                  example: Apt 123
                  minLength: 0
                  maxLength: 50
                avs_postal_code:
                  type: string
                  description: Postal code of the address associated with the card.
                  example: TGX562
                  minLength: 0
                  maxLength: 50
                funding:
                  type: string
                  description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                  enum:
                    - DEBIT
                    - CREDIT
                  default: CREDIT
                  minLength: 0
                  maxLength: 50
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
            digital_wallet:
              type: object
              properties:
                token:
                  type: string
                  description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                  minLength: 1
                  maxLength: 50
                token_format:
                  type: string
                  description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                  minLength: 1
                  maxLength: 50
                  enum:
                    - CARD_NUMBER
                    - CARD_TOKEN
                cryptogram:
                  type: string
                  description: The authentication value use to verify the validity of the digit wallet transaction.
                  minLength: 1
                  maxLength: 50
                provider:
                  type: string
                  description: Identifies who provides the digital wallet for the Payer.
                  minLength: 1
                  maxLength: 50
                  enum:
                    - APPLEPAY
                    - PAY_BY_GOOGLE
                expiry_month:
                  type: string
                  description: The 2 digit expiry date month of the card.
                  example: '05'
                  minLength: 2
                  maxLength: 2
                expiry_year:
                  type: string
                  description: The 2 digit expiry date year of the card.
                  example: '25'
                  minLength: 2
                  maxLength: 2
                eci:
                  type: string
                  description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                  example: '5'
                  minLength: 0
                  maxLength: 50
                cvv:
                  type: string
                  description: The numeric value printed on the physical card.
                  example: '852'
                  minLength: 0
                  maxLength: 4
                cvv_indicator:
                  type: string
                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                  example: PRESENT
                  minLength: 0
                  maxLength: 50
                  enum:
                    - ILLEGIBLE
                    - NOT_PRESENT
                    - PRESENT
                avs_address:
                  type: string
                  description: First line of the address associated with the card.
                  example: Apt 123
                  minLength: 0
                  maxLength: 50
                avs_postal_code:
                  type: string
                  description: Postal code of the address associated with the card.
                  example: TGX562
                  minLength: 0
                  maxLength: 50
            apm:
              type: object
              properties:
                provider:
                  type: string
                  description: A string used to identify the payment method provider being used to execute this transaction.
                  enum:
                    - TESTPAY
                    - PAYPAL
                    - SOFORT
                    - IDEAL
                    - GIROPAY
            bank_transfer:
              type: object
              properties:
                account_number:
                  type: string
                  description: The number or reference for the payer's bank account.
                  example: '23452423'
                  minLength: 0
                  maxLength: 50
                number_type:
                  type: string
                  description: The type of bank account associated with the payer's bank account.
                  example: SAVING
                  enum:
                    - CHECKING
                    - SAVING
                    - CREDIT
                check_reference:
                  type: string
                  description: The number or reference for the check
                  example: '23452423'
                  minLength: 0
                  maxLength: 15
                sec_code:
                  type: string
                  description: |
                    Indicates how the transaction was authorized by the merchant. 
                      * `CCD` - Cash Concentration or Disbursement - Can be either a credit or debit application where funds are wither distributed or consolidated between corporate entities.  
                      * `POP` - Point of Sale Entry - Point of sale debit applications non-shared (POS) environment. These transactions are most often initiated by the consumer via a plastic access card. This is only support for normal ACH transactions 
                      * `PPD` - Prearranged Payment and Deposits - used to credit or debit a consumer account. Popularity used for payroll direct deposits and pre-authorized bill payments. 
                      * `TEL` - Telephone-Initiated Entry - Used for the origination of a single entry debit transaction to a consumer's account pursuant to a verbal authorization obtained from the consumer via the telephone. 
                      * `WEB` - Internet (Web)-Initiated Entry - Used for the origination of debit entries (either Single or Recurring Entry) to a consumer's account pursuant to a to an authorization that is obtained from the Receiver via the Internet.
                  example: CCD
                  enum:
                    - CCD
                    - POP
                    - PPD
                    - TEL
                    - WEB
                bank:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The local identifier code for the bank.
                      example: james.mason@example.com
                      minLength: 0
                      maxLength: 50
                    name:
                      type: string
                      description: The name of the bank.
                      example: High Street Bank
                    address:
                      type: object
                      properties:
                        line_1:
                          type: string
                          description: First line of the address.
                          minLength: 0
                          maxLength: 50
                        line_2:
                          type: string
                          description: Second line of the address.
                          minLength: 0
                          maxLength: 50
                        line_3:
                          type: string
                          description: Third  line of the address.
                          minLength: 0
                          maxLength: 50
                        city:
                          type: string
                          description: Merchant defined field common to all transactions that are part of the same order.
                          example: INV#88547
                          minLength: 0
                          maxLength: 50
                        state:
                          type: string
                          description: 'The state or region of the address. ISO 3166-2 minus the country code itself. For example, US Illinois = IL, or in the case of GB counties Wiltshire = WI or Aberdeenshire = ABD'
                          minLength: 0
                          maxLength: 3
                        postal_code:
                          type: string
                          description: The city or town of the address.
                          minLength: 0
                          maxLength: 50
                        country:
                          type: string
                          description: The country of the address. Countries are represented by the ISO-3166-1(alpha-2 code).
                          minLength: 0
                          maxLength: 2
    create_response:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier generated by Global Payments to identify the transaction.
          example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
          minLength: 4
          maxLength: 100
        time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        type:
          type: string
          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
          example: SALE
          default: SALE
          enum:
            - SALE
            - REFUND
        status:
          type: string
          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
          enum:
            - INITIATED
            - PREAUTHORIZED
            - CAPTURED
            - REVERSED
            - DECLINED
            - FUNDED
            - REJECTED
          minLength: 0
          maxLength: 50
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
          example: CNP
          enum:
            - CP
            - CNP
        capture_mode:
          type: string
          description: 'Indicates whether the transaction is to be captured automatically, later or later using more than 1 partial capture. * `AUTO` - If a transaction is authorized, funds will exchange between the payer and merchant automatically and as soon as possible. * `LATER` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically and will require a subsequent separate action to capture that transaction and start the funding process. Only one successful capture is permitted. * `MULTIPLE` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically. One or more subsequent separate capture actions are required to capture that transaction in parts and start the funding process for the part captured. One or many successful capture are permitted once the total amount captured is within a range of the original authorized amount.'''
          default: AUTO
          enum:
            - AUTO
            - LATER
            - MULTIPLE
        authorization_mode:
          type: string
          description: Indicates if the merchant would accept an authorization for an amount less than the requested amount. This is available for CP channel only where the balance not authorized can be processed again using a different card. * `PARTIAL` - Indicates merchant would accept an authorization for an amount less than the requested amount. * `WHOLE` - Merchant only accepts an authorization for the requested amount and not less than that amount.
          example: PARTIAL
          default: WHOLE
          enum:
            - PARTIAL
            - WHOLE
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        country:
          type: string
          description: The country in ISO-3166-1(alpha-2 code) format.
          example: US
          enum:
            - ISO-3166-1(alpha-2 code)
            - US
        merchant_id:
          type: string
          description: A unique identifier for the merchant set by Global Payments.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
          minLength: 1
          maxLength: 50
        merchant_name:
          type: string
          description: A meaningful label for the merchant set by Global Payments.
          example: Sandbox_merchant_2
          minLength: 1
          maxLength: 50
        account_id:
          type: string
          description: A unique identifier for the merchant account set by Global Payments.
          example: TRA_6716058969854a48b33347043ff8225f
          minLength: 1
          maxLength: 50
        account_name:
          type: string
          description: A meaningful label for the merchant account set by Global Payments.
          example: Transaction_Processing
          minLength: 1
          maxLength: 50
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        batch_id:
          type: string
          description: A Global Payments created reference that uniquely identifies the batch.
          example: BAT_234234234
          minLength: 0
          maxLength: 50
        payment_method:
          type: object
          properties:
            id:
              type: string
              description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
              example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
              maxLength: 50
            fingerprint_presence_indicator:
              type: string
              description: 'If enabled, this field indicates whether the payment method has been seen before or is new. * `EXISTS` -  Indicates that the payment method was seen on the platform before by this merchant. * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.'
              enum:
                - NEW
                - EXISTS
              minLength: 0
              maxLength: 256
            fingerprint:
              type: string
              description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
              minLength: 0
              maxLength: 256
            result:
              type: string
              description: Result code from the payment method provider.
            message:
              type: string
              description: Result message from the payment method provider corresponding to the result code.
            entry_mode:
              type: string
              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
              example: ECOM
              enum:
                - MOTO
                - ECOM
                - IN_APP
                - CHIP
                - SWIPE
                - MANUAL
                - PHONE
                - MAIL
                - CONTACTLESS_CHIP
                - CONTACTLESS_SWIPE
              minLength: 1
              maxLength: 50
            authentication:
              type: object
              description: Information outlining the degree of authentication executed related to a transaction.
              properties:
                three_ds:
                  type: object
                  description: Information outlining the degree of 3D Secure authentication executed.
                  properties:
                    value_result:
                      type: string
                      description: The result of the three_ds value validation by the brands or issuing bank.
                      minLength: 0
                      maxLength: 50
            digital_wallet:
              type: object
              properties:
                token:
                  type: string
                  description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                  minLength: 1
                  maxLength: 50
                token_format:
                  type: string
                  description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                  minLength: 1
                  maxLength: 50
                  enum:
                    - CARD_NUMBER
                    - CARD_TOKEN
                cryptogram:
                  type: string
                  description: The authentication value use to verify the validity of the digit wallet transaction.
                  minLength: 1
                  maxLength: 50
                provider:
                  type: string
                  description: Identifies who provides the digital wallet for the Payer.
                  minLength: 1
                  maxLength: 50
                  enum:
                    - APPLEPAY
                    - PAY_BY_GOOGLE
                expiry_month:
                  type: string
                  description: The 2 digit expiry date month of the card.
                  example: '05'
                  minLength: 2
                  maxLength: 2
                expiry_year:
                  type: string
                  description: The 2 digit expiry date year of the card.
                  example: '25'
                  minLength: 2
                  maxLength: 2
                eci:
                  type: string
                  description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                  example: '5'
                  minLength: 0
                  maxLength: 50
                cvv:
                  type: string
                  description: The numeric value printed on the physical card.
                  example: '852'
                  minLength: 0
                  maxLength: 4
                cvv_indicator:
                  type: string
                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                  example: PRESENT
                  minLength: 0
                  maxLength: 50
                  enum:
                    - ILLEGIBLE
                    - NOT_PRESENT
                    - PRESENT
                avs_address:
                  type: string
                  description: First line of the address associated with the card.
                  example: Apt 123
                  minLength: 0
                  maxLength: 50
                avs_postal_code:
                  type: string
                  description: Postal code of the address associated with the card.
                  example: TGX562
                  minLength: 0
                  maxLength: 50
            apm:
              type: object
              properties:
                provider:
                  type: string
                  description: A string used to identify the payment method provider being used to execute this transaction.
                  enum:
                    - TESTPAY
                    - PAYPAL
                    - SOFORT
                    - IDEAL
                    - GIROPAY
                redirect_url:
                  type: string
                  description: URL to redirect the payer from the merchant's system to the payment method's system.
                session_token:
                  type: string
                  description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
                  example: EC-0SR89134FA420913U
                fund_status:
                  type: string
                  description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
                  example: RECEIVED
                  enum:
                    - NOT_EXPECTED
                    - RECEIVED
                    - WAITING
                    - MISSING
                wait_notification:
                  minimum: 0
                  maximum: 1
                  type: number
                  description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
                  example: 0
                  enum:
                    - 0
                    - 1
                optional_redirect:
                  minimum: 0
                  maximum: 1
                  type: number
                  description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
                  example: 0
                  enum:
                    - 0
                    - 1
                provider_transaction_reference:
                  type: string
                  description: The reference the payment method provider created for the transaction.
                  example: 49wnfs9w434234
                provider_time_created:
                  type: string
                  description: The time the payment method provider created the transaction at on their system.
                  example: 49wnfs9w434234
                provider_payer_name:
                  type: string
                  description: A name of the payer from the payment method system.
                  example: James Mason
                bank:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name assocaited with the bank account
                    identifier_code:
                      type: string
                      description: The international identifier code for the bank.
                    iban:
                      type: string
                      description: The international identifier of the bank account.
                    code:
                      type: string
                      description: The local identifier of the bank.
                    account_number:
                      type: string
                      description: The local identifier of the bank account.
                mandate:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The reference to identify the mandate.
              description: Data associated with the response of an APM transaction.
            card:
              type: object
              properties:
                masked_number_last4:
                  type: string
                  description: Masked card number with last 4 digits showing.
                  minLength: 12
                  maxLength: 50
                tag_response:
                  type: string
                  description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
                  minLength: 0
                  maxLength: 50
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                brand:
                  type: string
                  description: Indicates the card brand that issued the card.
                  enum:
                    - VISA
                    - MASTERCARD
                    - AMEX
                    - DINERS
                    - DISCOVER
                    - JCB
                    - CUP
                  minLength: 0
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
                brand_time_reference:
                  type: string
                  description: The time returned by the card brand indicating when the transaction was processed on their system.
                  minLength: 0
                  maxLength: 50
                cvv_result:
                  type: string
                  description: The result of the CVV check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_address_result:
                  type: string
                  description: The result of the AVS address check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_postal_code_result:
                  type: string
                  description: The result of the AVS postal code check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_action:
                  type: string
                  description: The recommended AVS action to be taken by the agent processing the card transaction.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - PROMPT
                    - DECLINE
                    - ACCEPT
                provider:
                  type: object
                  description: The result codes directly from the card issuer.
                  properties:
                    card.provider.result:
                      type: string
                      description: Result code from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.cvv_result:
                      type: string
                      description: The result code of the CVV check from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.avs_result:
                      type: string
                      description: The result code of the AVS check from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.avs_address_result:
                      type: string
                      description: The result code of the AVS address check from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.avs_postal_code_result:
                      type: string
                      description: The result of the AVS postal code check from the card issuer..
                      minLength: 0
                      maxLength: 50
            bank_transfer:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the bank.
                  example: High Street Bank
                masked_number_last4:
                  type: string
                  description: The last 4 characters of the local reference for a bank account number.
                  minLength: 1
                  maxLength: 50
                number_type:
                  type: string
                  description: The type of bank account associated with the payer's bank account.
                  example: SAVING
                  enum:
                    - CHECKING
                    - SAVING
                    - CREDIT
        currency_conversion:
          type: object
          description: Information relating to a currency conversion.
          properties:
            payer_amount:
              type: string
              description: The amount that will affect the payer's account.
              minLength: 0
              maxLength: 50
            payer_currency:
              type: string
              description: The currency of the amount that will affect the payer's account.
              minLength: 0
              maxLength: 50
            conversion_rate:
              type: string
              description: The exchange rate used to convert one currency to another.
              minLength: 0
              maxLength: 50
            margin_rate_percentage:
              type: string
              description: The exchange rate used to convert one currency to another.
              minLength: 0
              maxLength: 50
            commission_percentage:
              type: string
              description: The percentage commission taken for providing the currency conversion.
              minLength: 0
              maxLength: 50
            exchange_rate_source:
              type: string
              description: The source of the base exchange rate was obtained to execute the currency conversion.
              minLength: 0
              maxLength: 50
            exchange_source_time:
              type: string
              description: The time the base exchange rate was obtained from the source.
              minLength: 0
              maxLength: 50
        action:
          type: object
          description: Information about the Action executed.
          properties:
            id:
              type: string
              description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
              minLength: 1
              maxLength: 50
            type:
              type: string
              description: Indicates the action taken.
            time_created:
              type: string
              format: date-time
              description: Global Payments time indicating when the object was created in ISO-8601 format.
              example: '2021-05-03T21:23:39.718Z'
            result_code:
              type: string
              description: The result of the action executed.
              enum:
                - SUCCESS
                - DECLINE
              minLength: 1
              maxLength: 50
            app_id:
              type: string
              description: The id of the app that was used to create the token.
              example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
              minLength: 1
              maxLength: 50
            app_name:
              type: string
              description: The name of the app the user gave to the application.
              example: demo_app
              minLength: 1
              maxLength: 50
    payment_method_request:
      type: object
      properties:
        id:
          type: string
          description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
          example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
          maxLength: 50
        first_name:
          type: string
          description: Specify the first name of the owner of the payment method.
          example: James
          minLength: 0
          maxLength: 50
        last_name:
          type: string
          description: Specify the surname of the owner of the payment method.
          example: Mason
          minLength: 0
          maxLength: 50
        name:
          type: string
          description: The full name of the owner of the payment method.
          example: James Mason
          minLength: 0
          maxLength: 100
        entry_mode:
          type: string
          description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
          example: ECOM
          enum:
            - MOTO
            - ECOM
            - IN_APP
            - CHIP
            - SWIPE
            - MANUAL
            - PHONE
            - MAIL
            - CONTACTLESS_CHIP
            - CONTACTLESS_SWIPE
          minLength: 1
          maxLength: 50
        narrative:
          type: string
          description: Contains the value a merchant wishes to appear on the payer's payment method statement for this transaction
          minLength: 1
          maxLength: 50
        storage_mode:
          type: string
          description: Indicates whether to store the card as part of a transaction. * `ALWAYS` -  The card information is always stored irrespective of whether the payment method authorization was successful or not. * `ON_SUCCESS` - The card information is only storedif the payment method authorization was successful.
          enum:
            - ALWAYS
            - ON_SUCCESS
          minLength: 1
          maxLength: 50
        fingerprint_mode:
          type: string
          description: Indicates whether to execute the fingerprint signature functionality. * `ALWAYS` - Always check and create the fingerprint value regardless of the result of the card authorization. * `ON_SUCCESS` - Always check and create the fingerprint value when the card authorization is successful.
          enum:
            - ALWAYS
            - ON_SUCCESS
          minLength: 1
          maxLength: 50
        encryption:
          type: object
          properties:
            method:
              type: string
              description: The encryption method used when sending encrypted card data to Global Payments.
              enum:
                - KTB
                - KSN
              minLength: 1
              maxLength: 50
            version:
              type: string
              description: The version of encryption being used.
              minLength: 1
              maxLength: 50
            info:
              type: string
              description: The encryption info used when sending encrypted card data to Global Payments.
              minLength: 1
              maxLength: 2000
        authentication:
          type: object
          description: Information outlining the degree of authentication executed related to a transaction.
          properties:
            three_ds:
              type: object
              description: Information outlining the degree of 3D Secure authentication executed.
              properties:
                message_version:
                  type: string
                  description: Indicates the version of 3DS
                  example: 1.0.0
                  minLength: 0
                  maxLength: 50
                eci:
                  type: string
                  description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                  example: '5'
                  minLength: 0
                  maxLength: 2
                value:
                  type: string
                  description: The authentication value created as part of the 3D Secure process.
                  minLength: 0
                  maxLength: 50
                server_trans_reference:
                  type: string
                  description: The reference created by the 3DSecure provider to identify the specific authentication attempt.
                  minLength: 0
                  maxLength: 50
                ds_trans_reference:
                  type: string
                  description: The reference created by the 3DSecure Directory Server to identify the specific authentication attempt.
                  minLength: 0
                  maxLength: 50
                exempt_status:
                  type: string
                  description: Indicates if any exemptions apply to this transaction.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - LOW_VALUE
                    - TRANSACTION_RISK_ANALYSIS
                    - TRUSTED_MERCHANT
                    - SECURE_CORPORATE_PAYMENT
                    - SCA_DELEGATION
        card:
          type: object
          properties:
            number:
              type: string
              description: The the card account number used to authorize the transaction. Also known as PAN.
              example: '4263970000005262'
              minLength: 1
              maxLength: 50
            expiry_month:
              type: string
              description: The 2 digit expiry date month of the card.
              example: '05'
              minLength: 2
              maxLength: 2
            expiry_year:
              type: string
              description: The 2 digit expiry date year of the card.
              example: '25'
              minLength: 2
              maxLength: 2
            track:
              type: string
              description: Data from magnetic stripe of a card
              minLength: 1
              maxLength: 500
            tag:
              type: string
              description: The full card tag data for an EMV/chip card transaction.
              minLength: 1
              maxLength: 2000
            chip_condition:
              type: string
              description: Indicates if a fallback mechanism was used to obtain the card information when EMV/chip did not work as expected. * `PREV_SUCCESS` - indicates the previous transaction with this card was a success. * `PREV_FAILED` - indicates the previous transaction with this card failed.
              enum:
                - PREV_SUCCESS
                - PREV_FAILED
              minLength: 1
              maxLength: 50
            pin_block:
              type: string
              description: 'Contains the pin block info, relating to the pin code the Payer entered.'
              minLength: 1
              maxLength: 500
            cvv:
              type: string
              description: The numeric value printed on the physical card.
              example: '852'
              minLength: 0
              maxLength: 4
            cvv_indicator:
              type: string
              description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
              example: PRESENT
              minLength: 0
              maxLength: 50
              enum:
                - ILLEGIBLE
                - NOT_PRESENT
                - PRESENT
            avs_address:
              type: string
              description: First line of the address associated with the card.
              example: Apt 123
              minLength: 0
              maxLength: 50
            avs_postal_code:
              type: string
              description: Postal code of the address associated with the card.
              example: TGX562
              minLength: 0
              maxLength: 50
            funding:
              type: string
              description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
              enum:
                - DEBIT
                - CREDIT
              default: CREDIT
              minLength: 0
              maxLength: 50
            authcode:
              type: string
              description: Code generated when the card is successfully authorized.
              minLength: 0
              maxLength: 50
            brand_reference:
              type: string
              description: The unique reference created by the brands/schemes to uniquely identify the transaction.
              minLength: 0
              maxLength: 50
        digital_wallet:
          type: object
          properties:
            token:
              type: string
              description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
              minLength: 1
              maxLength: 50
            token_format:
              type: string
              description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
              minLength: 1
              maxLength: 50
              enum:
                - CARD_NUMBER
                - CARD_TOKEN
            cryptogram:
              type: string
              description: The authentication value use to verify the validity of the digit wallet transaction.
              minLength: 1
              maxLength: 50
            provider:
              type: string
              description: Identifies who provides the digital wallet for the Payer.
              minLength: 1
              maxLength: 50
              enum:
                - APPLEPAY
                - PAY_BY_GOOGLE
            expiry_month:
              type: string
              description: The 2 digit expiry date month of the card.
              example: '05'
              minLength: 2
              maxLength: 2
            expiry_year:
              type: string
              description: The 2 digit expiry date year of the card.
              example: '25'
              minLength: 2
              maxLength: 2
            eci:
              type: string
              description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
              example: '5'
              minLength: 0
              maxLength: 50
            cvv:
              type: string
              description: The numeric value printed on the physical card.
              example: '852'
              minLength: 0
              maxLength: 4
            cvv_indicator:
              type: string
              description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
              example: PRESENT
              minLength: 0
              maxLength: 50
              enum:
                - ILLEGIBLE
                - NOT_PRESENT
                - PRESENT
            avs_address:
              type: string
              description: First line of the address associated with the card.
              example: Apt 123
              minLength: 0
              maxLength: 50
            avs_postal_code:
              type: string
              description: Postal code of the address associated with the card.
              example: TGX562
              minLength: 0
              maxLength: 50
        apm:
          type: object
          properties:
            provider:
              type: string
              description: A string used to identify the payment method provider being used to execute this transaction.
              enum:
                - TESTPAY
                - PAYPAL
                - SOFORT
                - IDEAL
                - GIROPAY
        bank_transfer:
          type: object
          properties:
            account_number:
              type: string
              description: The number or reference for the payer's bank account.
              example: '23452423'
              minLength: 0
              maxLength: 50
            number_type:
              type: string
              description: The type of bank account associated with the payer's bank account.
              example: SAVING
              enum:
                - CHECKING
                - SAVING
                - CREDIT
            check_reference:
              type: string
              description: The number or reference for the check
              example: '23452423'
              minLength: 0
              maxLength: 15
            sec_code:
              type: string
              description: |
                Indicates how the transaction was authorized by the merchant. 
                  * `CCD` - Cash Concentration or Disbursement - Can be either a credit or debit application where funds are wither distributed or consolidated between corporate entities.  
                  * `POP` - Point of Sale Entry - Point of sale debit applications non-shared (POS) environment. These transactions are most often initiated by the consumer via a plastic access card. This is only support for normal ACH transactions 
                  * `PPD` - Prearranged Payment and Deposits - used to credit or debit a consumer account. Popularity used for payroll direct deposits and pre-authorized bill payments. 
                  * `TEL` - Telephone-Initiated Entry - Used for the origination of a single entry debit transaction to a consumer's account pursuant to a verbal authorization obtained from the consumer via the telephone. 
                  * `WEB` - Internet (Web)-Initiated Entry - Used for the origination of debit entries (either Single or Recurring Entry) to a consumer's account pursuant to a to an authorization that is obtained from the Receiver via the Internet.
              example: CCD
              enum:
                - CCD
                - POP
                - PPD
                - TEL
                - WEB
            bank:
              type: object
              properties:
                code:
                  type: string
                  description: The local identifier code for the bank.
                  example: james.mason@example.com
                  minLength: 0
                  maxLength: 50
                name:
                  type: string
                  description: The name of the bank.
                  example: High Street Bank
                address:
                  type: object
                  properties:
                    line_1:
                      type: string
                      description: First line of the address.
                      minLength: 0
                      maxLength: 50
                    line_2:
                      type: string
                      description: Second line of the address.
                      minLength: 0
                      maxLength: 50
                    line_3:
                      type: string
                      description: Third  line of the address.
                      minLength: 0
                      maxLength: 50
                    city:
                      type: string
                      description: Merchant defined field common to all transactions that are part of the same order.
                      example: INV#88547
                      minLength: 0
                      maxLength: 50
                    state:
                      type: string
                      description: 'The state or region of the address. ISO 3166-2 minus the country code itself. For example, US Illinois = IL, or in the case of GB counties Wiltshire = WI or Aberdeenshire = ABD'
                      minLength: 0
                      maxLength: 3
                    postal_code:
                      type: string
                      description: The city or town of the address.
                      minLength: 0
                      maxLength: 50
                    country:
                      type: string
                      description: The country of the address. Countries are represented by the ISO-3166-1(alpha-2 code).
                      minLength: 0
                      maxLength: 2
    payment_method_response:
      type: object
      properties:
        id:
          type: string
          description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
          example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
          maxLength: 50
        fingerprint_presence_indicator:
          type: string
          description: 'If enabled, this field indicates whether the payment method has been seen before or is new. * `EXISTS` -  Indicates that the payment method was seen on the platform before by this merchant. * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.'
          enum:
            - NEW
            - EXISTS
          minLength: 0
          maxLength: 256
        fingerprint:
          type: string
          description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
          minLength: 0
          maxLength: 256
        result:
          type: string
          description: Result code from the payment method provider.
        message:
          type: string
          description: Result message from the payment method provider corresponding to the result code.
        entry_mode:
          type: string
          description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
          example: ECOM
          enum:
            - MOTO
            - ECOM
            - IN_APP
            - CHIP
            - SWIPE
            - MANUAL
            - PHONE
            - MAIL
            - CONTACTLESS_CHIP
            - CONTACTLESS_SWIPE
          minLength: 1
          maxLength: 50
        authentication:
          type: object
          description: Information outlining the degree of authentication executed related to a transaction.
          properties:
            three_ds:
              type: object
              description: Information outlining the degree of 3D Secure authentication executed.
              properties:
                value_result:
                  type: string
                  description: The result of the three_ds value validation by the brands or issuing bank.
                  minLength: 0
                  maxLength: 50
        digital_wallet:
          type: object
          properties:
            token:
              type: string
              description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
              minLength: 1
              maxLength: 50
            token_format:
              type: string
              description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
              minLength: 1
              maxLength: 50
              enum:
                - CARD_NUMBER
                - CARD_TOKEN
            cryptogram:
              type: string
              description: The authentication value use to verify the validity of the digit wallet transaction.
              minLength: 1
              maxLength: 50
            provider:
              type: string
              description: Identifies who provides the digital wallet for the Payer.
              minLength: 1
              maxLength: 50
              enum:
                - APPLEPAY
                - PAY_BY_GOOGLE
            expiry_month:
              type: string
              description: The 2 digit expiry date month of the card.
              example: '05'
              minLength: 2
              maxLength: 2
            expiry_year:
              type: string
              description: The 2 digit expiry date year of the card.
              example: '25'
              minLength: 2
              maxLength: 2
            eci:
              type: string
              description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
              example: '5'
              minLength: 0
              maxLength: 50
            cvv:
              type: string
              description: The numeric value printed on the physical card.
              example: '852'
              minLength: 0
              maxLength: 4
            cvv_indicator:
              type: string
              description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
              example: PRESENT
              minLength: 0
              maxLength: 50
              enum:
                - ILLEGIBLE
                - NOT_PRESENT
                - PRESENT
            avs_address:
              type: string
              description: First line of the address associated with the card.
              example: Apt 123
              minLength: 0
              maxLength: 50
            avs_postal_code:
              type: string
              description: Postal code of the address associated with the card.
              example: TGX562
              minLength: 0
              maxLength: 50
        apm:
          type: object
          properties:
            provider:
              type: string
              description: A string used to identify the payment method provider being used to execute this transaction.
              enum:
                - TESTPAY
                - PAYPAL
                - SOFORT
                - IDEAL
                - GIROPAY
            redirect_url:
              type: string
              description: URL to redirect the payer from the merchant's system to the payment method's system.
            session_token:
              type: string
              description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
              example: EC-0SR89134FA420913U
            fund_status:
              type: string
              description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
              example: RECEIVED
              enum:
                - NOT_EXPECTED
                - RECEIVED
                - WAITING
                - MISSING
            wait_notification:
              minimum: 0
              maximum: 1
              type: number
              description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
              example: 0
              enum:
                - 0
                - 1
            optional_redirect:
              minimum: 0
              maximum: 1
              type: number
              description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
              example: 0
              enum:
                - 0
                - 1
            provider_transaction_reference:
              type: string
              description: The reference the payment method provider created for the transaction.
              example: 49wnfs9w434234
            provider_time_created:
              type: string
              description: The time the payment method provider created the transaction at on their system.
              example: 49wnfs9w434234
            provider_payer_name:
              type: string
              description: A name of the payer from the payment method system.
              example: James Mason
            bank:
              type: object
              properties:
                name:
                  type: string
                  description: The name assocaited with the bank account
                identifier_code:
                  type: string
                  description: The international identifier code for the bank.
                iban:
                  type: string
                  description: The international identifier of the bank account.
                code:
                  type: string
                  description: The local identifier of the bank.
                account_number:
                  type: string
                  description: The local identifier of the bank account.
            mandate:
              type: object
              properties:
                code:
                  type: string
                  description: The reference to identify the mandate.
          description: Data associated with the response of an APM transaction.
        card:
          type: object
          properties:
            masked_number_last4:
              type: string
              description: Masked card number with last 4 digits showing.
              minLength: 12
              maxLength: 50
            tag_response:
              type: string
              description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
              minLength: 0
              maxLength: 50
            authcode:
              type: string
              description: Code generated when the card is successfully authorized.
              minLength: 0
              maxLength: 50
            brand:
              type: string
              description: Indicates the card brand that issued the card.
              enum:
                - VISA
                - MASTERCARD
                - AMEX
                - DINERS
                - DISCOVER
                - JCB
                - CUP
              minLength: 0
              maxLength: 50
            brand_reference:
              type: string
              description: The unique reference created by the brands/schemes to uniquely identify the transaction.
              minLength: 0
              maxLength: 50
            brand_time_reference:
              type: string
              description: The time returned by the card brand indicating when the transaction was processed on their system.
              minLength: 0
              maxLength: 50
            cvv_result:
              type: string
              description: The result of the CVV check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_address_result:
              type: string
              description: The result of the AVS address check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_postal_code_result:
              type: string
              description: The result of the AVS postal code check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_action:
              type: string
              description: The recommended AVS action to be taken by the agent processing the card transaction.
              minLength: 0
              maxLength: 50
              enum:
                - PROMPT
                - DECLINE
                - ACCEPT
            provider:
              type: object
              description: The result codes directly from the card issuer.
              properties:
                card.provider.result:
                  type: string
                  description: Result code from the card issuer.
                  minLength: 0
                  maxLength: 50
                card.provider.cvv_result:
                  type: string
                  description: The result code of the CVV check from the card issuer.
                  minLength: 0
                  maxLength: 50
                card.provider.avs_result:
                  type: string
                  description: The result code of the AVS check from the card issuer.
                  minLength: 0
                  maxLength: 50
                card.provider.avs_address_result:
                  type: string
                  description: The result code of the AVS address check from the card issuer.
                  minLength: 0
                  maxLength: 50
                card.provider.avs_postal_code_result:
                  type: string
                  description: The result of the AVS postal code check from the card issuer..
                  minLength: 0
                  maxLength: 50
        bank_transfer:
          type: object
          properties:
            name:
              type: string
              description: The name of the bank.
              example: High Street Bank
            masked_number_last4:
              type: string
              description: The last 4 characters of the local reference for a bank account number.
              minLength: 1
              maxLength: 50
            number_type:
              type: string
              description: The type of bank account associated with the payer's bank account.
              example: SAVING
              enum:
                - CHECKING
                - SAVING
                - CREDIT
    card_request:
      type: object
      properties:
        number:
          type: string
          description: The the card account number used to authorize the transaction. Also known as PAN.
          example: '4263970000005262'
          minLength: 1
          maxLength: 50
        expiry_month:
          type: string
          description: The 2 digit expiry date month of the card.
          example: '05'
          minLength: 2
          maxLength: 2
        expiry_year:
          type: string
          description: The 2 digit expiry date year of the card.
          example: '25'
          minLength: 2
          maxLength: 2
        track:
          type: string
          description: Data from magnetic stripe of a card
          minLength: 1
          maxLength: 500
        tag:
          type: string
          description: The full card tag data for an EMV/chip card transaction.
          minLength: 1
          maxLength: 2000
        chip_condition:
          type: string
          description: Indicates if a fallback mechanism was used to obtain the card information when EMV/chip did not work as expected. * `PREV_SUCCESS` - indicates the previous transaction with this card was a success. * `PREV_FAILED` - indicates the previous transaction with this card failed.
          enum:
            - PREV_SUCCESS
            - PREV_FAILED
          minLength: 1
          maxLength: 50
        pin_block:
          type: string
          description: 'Contains the pin block info, relating to the pin code the Payer entered.'
          minLength: 1
          maxLength: 500
        cvv:
          type: string
          description: The numeric value printed on the physical card.
          example: '852'
          minLength: 0
          maxLength: 4
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
          example: PRESENT
          minLength: 0
          maxLength: 50
          enum:
            - ILLEGIBLE
            - NOT_PRESENT
            - PRESENT
        avs_address:
          type: string
          description: First line of the address associated with the card.
          example: Apt 123
          minLength: 0
          maxLength: 50
        avs_postal_code:
          type: string
          description: Postal code of the address associated with the card.
          example: TGX562
          minLength: 0
          maxLength: 50
        funding:
          type: string
          description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
          enum:
            - DEBIT
            - CREDIT
          default: CREDIT
          minLength: 0
          maxLength: 50
        authcode:
          type: string
          description: Code generated when the card is successfully authorized.
          minLength: 0
          maxLength: 50
        brand_reference:
          type: string
          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
          minLength: 0
          maxLength: 50
    card_response:
      type: object
      properties:
        masked_number_last4:
          type: string
          description: Masked card number with last 4 digits showing.
          minLength: 12
          maxLength: 50
        tag_response:
          type: string
          description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
          minLength: 0
          maxLength: 50
        authcode:
          type: string
          description: Code generated when the card is successfully authorized.
          minLength: 0
          maxLength: 50
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - DINERS
            - DISCOVER
            - JCB
            - CUP
          minLength: 0
          maxLength: 50
        brand_reference:
          type: string
          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
          minLength: 0
          maxLength: 50
        brand_time_reference:
          type: string
          description: The time returned by the card brand indicating when the transaction was processed on their system.
          minLength: 0
          maxLength: 50
        cvv_result:
          type: string
          description: The result of the CVV check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_address_result:
          type: string
          description: The result of the AVS address check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_postal_code_result:
          type: string
          description: The result of the AVS postal code check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_action:
          type: string
          description: The recommended AVS action to be taken by the agent processing the card transaction.
          minLength: 0
          maxLength: 50
          enum:
            - PROMPT
            - DECLINE
            - ACCEPT
        provider:
          type: object
          description: The result codes directly from the card issuer.
          properties:
            card.provider.result:
              type: string
              description: Result code from the card issuer.
              minLength: 0
              maxLength: 50
            card.provider.cvv_result:
              type: string
              description: The result code of the CVV check from the card issuer.
              minLength: 0
              maxLength: 50
            card.provider.avs_result:
              type: string
              description: The result code of the AVS check from the card issuer.
              minLength: 0
              maxLength: 50
            card.provider.avs_address_result:
              type: string
              description: The result code of the AVS address check from the card issuer.
              minLength: 0
              maxLength: 50
            card.provider.avs_postal_code_result:
              type: string
              description: The result of the AVS postal code check from the card issuer..
              minLength: 0
              maxLength: 50
    digital_wallet_request:
      type: object
      properties:
        token:
          type: string
          description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
          minLength: 1
          maxLength: 50
        token_format:
          type: string
          description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
          minLength: 1
          maxLength: 50
          enum:
            - CARD_NUMBER
            - CARD_TOKEN
        cryptogram:
          type: string
          description: The authentication value use to verify the validity of the digit wallet transaction.
          minLength: 1
          maxLength: 50
        provider:
          type: string
          description: Identifies who provides the digital wallet for the Payer.
          minLength: 1
          maxLength: 50
          enum:
            - APPLEPAY
            - PAY_BY_GOOGLE
        expiry_month:
          type: string
          description: The 2 digit expiry date month of the card.
          example: '05'
          minLength: 2
          maxLength: 2
        expiry_year:
          type: string
          description: The 2 digit expiry date year of the card.
          example: '25'
          minLength: 2
          maxLength: 2
        eci:
          type: string
          description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
          example: '5'
          minLength: 0
          maxLength: 50
        cvv:
          type: string
          description: The numeric value printed on the physical card.
          example: '852'
          minLength: 0
          maxLength: 4
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
          example: PRESENT
          minLength: 0
          maxLength: 50
          enum:
            - ILLEGIBLE
            - NOT_PRESENT
            - PRESENT
        avs_address:
          type: string
          description: First line of the address associated with the card.
          example: Apt 123
          minLength: 0
          maxLength: 50
        avs_postal_code:
          type: string
          description: Postal code of the address associated with the card.
          example: TGX562
          minLength: 0
          maxLength: 50
    digital_wallet:
      type: object
      properties:
        token:
          type: string
          description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
          minLength: 1
          maxLength: 50
        token_format:
          type: string
          description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
          minLength: 1
          maxLength: 50
          enum:
            - CARD_NUMBER
            - CARD_TOKEN
        cryptogram:
          type: string
          description: The authentication value use to verify the validity of the digit wallet transaction.
          minLength: 1
          maxLength: 50
        provider:
          type: string
          description: Identifies who provides the digital wallet for the Payer.
          minLength: 1
          maxLength: 50
          enum:
            - APPLEPAY
            - PAY_BY_GOOGLE
        expiry_month:
          type: string
          description: The 2 digit expiry date month of the card.
          example: '05'
          minLength: 2
          maxLength: 2
        expiry_year:
          type: string
          description: The 2 digit expiry date year of the card.
          example: '25'
          minLength: 2
          maxLength: 2
        eci:
          type: string
          description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
          example: '5'
          minLength: 0
          maxLength: 50
        cvv:
          type: string
          description: The numeric value printed on the physical card.
          example: '852'
          minLength: 0
          maxLength: 4
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
          example: PRESENT
          minLength: 0
          maxLength: 50
          enum:
            - ILLEGIBLE
            - NOT_PRESENT
            - PRESENT
        avs_address:
          type: string
          description: First line of the address associated with the card.
          example: Apt 123
          minLength: 0
          maxLength: 50
        avs_postal_code:
          type: string
          description: Postal code of the address associated with the card.
          example: TGX562
          minLength: 0
          maxLength: 50
    bank_transfer_request:
      type: object
      properties:
        account_number:
          type: string
          description: The number or reference for the payer's bank account.
          example: '23452423'
          minLength: 0
          maxLength: 50
        number_type:
          type: string
          description: The type of bank account associated with the payer's bank account.
          example: SAVING
          enum:
            - CHECKING
            - SAVING
            - CREDIT
        check_reference:
          type: string
          description: The number or reference for the check
          example: '23452423'
          minLength: 0
          maxLength: 15
        sec_code:
          type: string
          description: |
            Indicates how the transaction was authorized by the merchant. 
              * `CCD` - Cash Concentration or Disbursement - Can be either a credit or debit application where funds are wither distributed or consolidated between corporate entities.  
              * `POP` - Point of Sale Entry - Point of sale debit applications non-shared (POS) environment. These transactions are most often initiated by the consumer via a plastic access card. This is only support for normal ACH transactions 
              * `PPD` - Prearranged Payment and Deposits - used to credit or debit a consumer account. Popularity used for payroll direct deposits and pre-authorized bill payments. 
              * `TEL` - Telephone-Initiated Entry - Used for the origination of a single entry debit transaction to a consumer's account pursuant to a verbal authorization obtained from the consumer via the telephone. 
              * `WEB` - Internet (Web)-Initiated Entry - Used for the origination of debit entries (either Single or Recurring Entry) to a consumer's account pursuant to a to an authorization that is obtained from the Receiver via the Internet.
          example: CCD
          enum:
            - CCD
            - POP
            - PPD
            - TEL
            - WEB
        bank:
          type: object
          properties:
            code:
              type: string
              description: The local identifier code for the bank.
              example: james.mason@example.com
              minLength: 0
              maxLength: 50
            name:
              type: string
              description: The name of the bank.
              example: High Street Bank
            address:
              type: object
              properties:
                line_1:
                  type: string
                  description: First line of the address.
                  minLength: 0
                  maxLength: 50
                line_2:
                  type: string
                  description: Second line of the address.
                  minLength: 0
                  maxLength: 50
                line_3:
                  type: string
                  description: Third  line of the address.
                  minLength: 0
                  maxLength: 50
                city:
                  type: string
                  description: Merchant defined field common to all transactions that are part of the same order.
                  example: INV#88547
                  minLength: 0
                  maxLength: 50
                state:
                  type: string
                  description: 'The state or region of the address. ISO 3166-2 minus the country code itself. For example, US Illinois = IL, or in the case of GB counties Wiltshire = WI or Aberdeenshire = ABD'
                  minLength: 0
                  maxLength: 3
                postal_code:
                  type: string
                  description: The city or town of the address.
                  minLength: 0
                  maxLength: 50
                country:
                  type: string
                  description: The country of the address. Countries are represented by the ISO-3166-1(alpha-2 code).
                  minLength: 0
                  maxLength: 2
    bank_transfer_response:
      type: object
      properties:
        name:
          type: string
          description: The name of the bank.
          example: High Street Bank
        masked_number_last4:
          type: string
          description: The last 4 characters of the local reference for a bank account number.
          minLength: 1
          maxLength: 50
        number_type:
          type: string
          description: The type of bank account associated with the payer's bank account.
          example: SAVING
          enum:
            - CHECKING
            - SAVING
            - CREDIT
    change_amount_request:
      type: object
      properties:
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
    change_amt_tag_request:
      type: object
      properties:
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        gratuity_amount:
          type: string
          description: The amount of the gratuity for a transaction.It is always represented in the lowest denomiation of the related currency.
          example: '1999'
        capture_sequence:
          type: string
          description: 'Indicates whether the request is the first,a subsequent or the last capture request when capturing multiple amounts separatelt'
          example: FIRST
          enum:
            - FIRST
            - SUBSEQUENT
            - LAST
        total_capture_count:
          type: integer
          description: Indicates the total or expected total of captures that will executed against a transaction flagged as being captured multiple times.
        payment_method:
          type: object
          properties:
            card:
              type: object
              properties:
                tag:
                  type: string
                  description: The full card tag data for an EMV/chip card transaction.
                  minLength: 1
                  maxLength: 2000
    existing_transaction_response:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier generated by Global Payments to identify the transaction.
          example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
          minLength: 4
          maxLength: 100
        time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        type:
          type: string
          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
          example: SALE
          default: SALE
          enum:
            - SALE
            - REFUND
        status:
          type: string
          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
          enum:
            - INITIATED
            - PREAUTHORIZED
            - CAPTURED
            - REVERSED
            - DECLINED
            - FUNDED
            - REJECTED
          minLength: 0
          maxLength: 50
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        country:
          type: string
          description: The country in ISO-3166-1(alpha-2 code) format.
          example: US
          enum:
            - ISO-3166-1(alpha-2 code)
            - US
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        batch_id:
          type: string
          description: A Global Payments created reference that uniquely identifies the batch.
          example: BAT_234234234
          minLength: 0
          maxLength: 50
        payment_method:
          type: object
          properties:
            result:
              type: string
              description: Result code from the payment method provider.
            message:
              type: string
              description: Result message from the payment method provider corresponding to the result code.
            card:
              type: object
              properties:
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
        action:
          type: object
          description: Information about the Action executed.
          properties:
            id:
              type: string
              description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
              minLength: 1
              maxLength: 50
            type:
              type: string
              description: Indicates the action taken.
            time_created:
              type: string
              format: date-time
              description: Global Payments time indicating when the object was created in ISO-8601 format.
              example: '2021-05-03T21:23:39.718Z'
            result_code:
              type: string
              description: The result of the action executed.
              enum:
                - SUCCESS
                - DECLINE
              minLength: 1
              maxLength: 50
            app_id:
              type: string
              description: The id of the app that was used to create the token.
              example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
              minLength: 1
              maxLength: 50
            app_name:
              type: string
              description: The name of the app the user gave to the application.
              example: demo_app
              minLength: 1
              maxLength: 50
    existing_transaction_payment_method_response:
      type: object
      properties:
        result:
          type: string
          description: Result code from the payment method provider.
        message:
          type: string
          description: Result message from the payment method provider corresponding to the result code.
        card:
          type: object
          properties:
            authcode:
              type: string
              description: Code generated when the card is successfully authorized.
              minLength: 0
              maxLength: 50
            brand_reference:
              type: string
              description: The unique reference created by the brands/schemes to uniquely identify the transaction.
              minLength: 0
              maxLength: 50
    existing_transaction_card_response:
      type: object
      properties:
        authcode:
          type: string
          description: Code generated when the card is successfully authorized.
          minLength: 0
          maxLength: 50
        brand_reference:
          type: string
          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
          minLength: 0
          maxLength: 50
    confirm_request:
      type: object
      properties:
        payment_method:
          type: object
          properties:
            apm:
              type: object
              properties:
                provider:
                  type: string
                  description: A string used to identify the payment method provider being used to execute this transaction.
                  enum:
                    - TESTPAY
                    - PAYPAL
                    - SOFORT
                    - IDEAL
                    - GIROPAY
                provider_payer_reference:
                  type: string
                  description: The payer reference from the payment method provider.
                  example: CUST_12345
              description: Data associated with an APM.
    payment_method_secondary_apm:
      type: object
      properties:
        apm:
          type: object
          properties:
            provider:
              type: string
              description: A string used to identify the payment method provider being used to execute this transaction.
              enum:
                - TESTPAY
                - PAYPAL
                - SOFORT
                - IDEAL
                - GIROPAY
            provider_payer_reference:
              type: string
              description: The payer reference from the payment method provider.
              example: CUST_12345
          description: Data associated with an APM.
    payment_method_secondary_apm_fields:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method provider being used to execute this transaction.
          enum:
            - TESTPAY
            - PAYPAL
            - SOFORT
            - IDEAL
            - GIROPAY
        provider_payer_reference:
          type: string
          description: The payer reference from the payment method provider.
          example: CUST_12345
      description: Data associated with an APM.
    confirm_response:
      type: object
      properties:
        payment_method:
          type: object
          properties:
            apm:
              type: object
              properties:
                provider:
                  type: string
                  description: A string used to identify the payment method provider being used to execute this transaction.
                  enum:
                    - TESTPAY
                    - PAYPAL
                    - SOFORT
                    - IDEAL
                    - GIROPAY
                provider_payer_reference:
                  type: string
                  description: The payer reference from the payment method provider.
                  example: CUST_12345
                provider_transaction_reference:
                  type: string
                  description: The reference the payment method provider created for the transaction.
                  example: 49wnfs9w434234
                provider_time_created:
                  type: string
                  description: The reference the payment method provider created for the transaction.
                  example: 49wnfs9w434234
                provider_payer_name:
                  type: string
                  description: A name of the payer from the payment method system.
                  example: James Mason
              description: Data associated with the response of an APM transaction.
    apm_response_secondary:
      type: object
      properties:
        apm:
          type: object
          properties:
            provider:
              type: string
              description: A string used to identify the payment method provider being used to execute this transaction.
              enum:
                - TESTPAY
                - PAYPAL
                - SOFORT
                - IDEAL
                - GIROPAY
            provider_payer_reference:
              type: string
              description: The payer reference from the payment method provider.
              example: CUST_12345
            provider_transaction_reference:
              type: string
              description: The reference the payment method provider created for the transaction.
              example: 49wnfs9w434234
            provider_time_created:
              type: string
              description: The reference the payment method provider created for the transaction.
              example: 49wnfs9w434234
            provider_payer_name:
              type: string
              description: A name of the payer from the payment method system.
              example: James Mason
          description: Data associated with the response of an APM transaction.
    apm_response_secondary_fields:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method provider being used to execute this transaction.
          enum:
            - TESTPAY
            - PAYPAL
            - SOFORT
            - IDEAL
            - GIROPAY
        provider_payer_reference:
          type: string
          description: The payer reference from the payment method provider.
          example: CUST_12345
        provider_transaction_reference:
          type: string
          description: The reference the payment method provider created for the transaction.
          example: 49wnfs9w434234
        provider_time_created:
          type: string
          description: The reference the payment method provider created for the transaction.
          example: 49wnfs9w434234
        provider_payer_name:
          type: string
          description: A name of the payer from the payment method system.
          example: James Mason
      description: Data associated with the response of an APM transaction.
    device:
      type: object
      properties:
        time:
          type: string
          description: The time from the device in ISO8601 format
        sequence_number:
          type: string
          description: The sequence number from the device used to align with processing platform.
        gratuity_prompt_mode:
          type: string
          description: Describes whether a device prompts a payer for a gratuity when the payer is entering their payment method details to the device.
          example: PROMPT
          enum:
            - PROMPT
            - NOT_REQUIRED
          minLength: 1
          maxLength: 50
        print_receipt_mode:
          type: string
          description: Describes the receipts a device prints when processing a transaction.
          example: BOTH
          enum:
            - NONE
            - PAYER
            - MERCHANT
            - BOTH
          minLength: 1
          maxLength: 50
        entry_modes:
          type: array
          items:
            type: array
            items:
              type: string
              description: Describes the allowed entry modes to obtain payment method information from the payer as part of a transaction request.
              example: CHIP
              enum:
                - CHIP
                - CONTACTLESS
                - MANUAL
                - SWIPE
              minLength: 1
              maxLength: 50
      description: Data relating to a device used to facilitate the transaction.
    apm_request:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method provider being used to execute this transaction.
          enum:
            - TESTPAY
            - PAYPAL
            - SOFORT
            - IDEAL
            - GIROPAY
    apm_response:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method provider being used to execute this transaction.
          enum:
            - TESTPAY
            - PAYPAL
            - SOFORT
            - IDEAL
            - GIROPAY
        redirect_url:
          type: string
          description: URL to redirect the payer from the merchant's system to the payment method's system.
        session_token:
          type: string
          description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
          example: EC-0SR89134FA420913U
        fund_status:
          type: string
          description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
          example: RECEIVED
          enum:
            - NOT_EXPECTED
            - RECEIVED
            - WAITING
            - MISSING
        wait_notification:
          minimum: 0
          maximum: 1
          type: number
          description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
          example: 0
          enum:
            - 0
            - 1
        optional_redirect:
          minimum: 0
          maximum: 1
          type: number
          description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
          example: 0
          enum:
            - 0
            - 1
        provider_transaction_reference:
          type: string
          description: The reference the payment method provider created for the transaction.
          example: 49wnfs9w434234
        provider_time_created:
          type: string
          description: The time the payment method provider created the transaction at on their system.
          example: 49wnfs9w434234
        provider_payer_name:
          type: string
          description: A name of the payer from the payment method system.
          example: James Mason
        bank:
          type: object
          properties:
            name:
              type: string
              description: The name assocaited with the bank account
            identifier_code:
              type: string
              description: The international identifier code for the bank.
            iban:
              type: string
              description: The international identifier of the bank account.
            code:
              type: string
              description: The local identifier of the bank.
            account_number:
              type: string
              description: The local identifier of the bank account.
        mandate:
          type: object
          properties:
            code:
              type: string
              description: The reference to identify the mandate.
      description: Data associated with the response of an APM transaction.
    installment_request:
      type: object
      properties:
        program:
          type: string
          description: The installment payment plan program.
          enum:
            - SIP
            - mSIP
            - HSBC
        term:
          description: Information returned about an installment payment plan.
      description: Information that relates to an installment payment plan.
    term_request:
      type: object
      properties:
        id:
          type: string
          description: The unique reference to identify the payment plan term details.
        time_unit:
          type: string
          description: The unit of time that represents the frequency of the installment payment plan.
          enum:
            - DAY
            - MONTH
            - YEAR
        time_unit_number:
          type: string
          description: The total number of payments to be made over the course of the installment payment plan.
      description: information relating to the terms of the installment payment plan.
    installment_response:
      type: object
      properties:
        program:
          type: string
          description: The installment payment plan program.
          enum:
            - SIP
            - mSIP
            - HSBC
        term:
          description: Information returned about an installment payment plan.
      description: Information that relates to an installment payment plan.
    term_response:
      type: object
      properties:
        id:
          type: string
          description: The unique reference to identify the payment plan term details.
        time_unit:
          type: string
          description: The unit of time that represents the frequency of the installment payment plan.
          enum:
            - DAY
            - MONTH
            - YEAR
        time_unit_number:
          type: string
          description: The total number of payments to be made over the course of the installment payment plan.
        interest_rate:
          type: string
          description: The interest paid on the installment payment plan by the payer.
        first_amount:
          type: string
          description: The amount of the first transaction in the plan.
        subsequent_amount:
          type: string
          description: The amounts of the subsequent transactions in the plan.
        last_amount:
          type: string
          description: The amount of the final transaction in the plan.
        total_amount:
          type: string
          description: The total amount the payer pays over the course of the plan.
      description: Stored data information used to create a transaction.
    transactions_list:
      type: object
      properties:
        total_record_count:
          type: number
          description: 'The total number of records across all pages for the search filter. When searching for a collection of resoures, this is returned on the first page only and when the date range is a month or less.'
          example: 3412
        current_page_size:
          type: number
          description: The total number of records returned on the current page. If current_page_size is less than the page_size using in the querystring then this is the final page for that search.
          example: 3412
        merchant_id:
          type: string
          description: A unique identifier for the merchant set by Global Payments.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
          minLength: 1
          maxLength: 50
        merchant_name:
          type: string
          description: A meaningful label for the merchant set by Global Payments.
          example: Sandbox_merchant_2
          minLength: 1
          maxLength: 50
        account_id:
          type: string
          description: A unique identifier for the merchant account set by Global Payments.
          example: TRA_6716058969854a48b33347043ff8225f
          minLength: 1
          maxLength: 50
        account_name:
          type: string
          description: A meaningful label for the merchant account set by Global Payments.
          example: Transaction_Processing
          minLength: 1
          maxLength: 50
        filter:
          type: object
          description: Indicates what fields and values used to filter the current list of resource objects in the current response.
        paging:
          type: object
          description: The paging values used to generate this response.
          properties:
            page:
              description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
              maximum: 1000
              minimum: 1
              type: number
              default: 1
            page_size:
              description: The total number of objects to return in a single page for that list.
              maximum: 1000
              minimum: 1
              type: number
              default: 5
            order_by:
              description: 'The value to order the entire list by. '
              type: string
              enum:
                - TIME_CREATED
            order:
              description: 'The direction of the ordering of the entire list, ASC or DESC'
              type: string
              enum:
                - ASC
                - DESC
        transactions:
          type: array
          items:
            type: object
            properties:
              time_created:
                type: string
                format: date-time
                description: Global Payments time indicating when the object was created in ISO-8601 format.
                example: '2021-05-03T21:23:39.718Z'
              status:
                type: string
                description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                enum:
                  - INITIATED
                  - PREAUTHORIZED
                  - CAPTURED
                  - REVERSED
                  - DECLINED
                  - FUNDED
                  - REJECTED
                minLength: 0
                maxLength: 50
              type:
                type: string
                description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                example: SALE
                default: SALE
                enum:
                  - SALE
                  - REFUND
              amount:
                type: string
                description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                example: '11099'
              currency:
                type: string
                description: The currency of the amount in ISO-4217(alpha-3)
                example: USD
              merchant_amount:
                type: string
                description: The amount of the transaction in the merchant's currency that is funded to the merchant.
                example: '1999'
              merchant_currency:
                type: string
                description: The currency of the amount in ISO-4217(alpha-3)
                example: USD
              discount_amount:
                type: string
                description: The discount amount of the transaction in the currency the transaction was captured in.
                example: '199'
              discount_currency:
                type: string
                description: The currency of the amount in ISO-4217(alpha-3)
                example: USD
              merchant_discount_amount:
                type: string
                description: The discount amount of the transaction in the currency the merchant gets funded in
                example: '299'
              merchant_discount_currency:
                type: string
                description: The currency of the amount in ISO-4217(alpha-3)
                example: USD
              reference:
                type: string
                description: Merchant defined field to reference the transaction.
                minLength: 8
                maxLength: 50
              time_created_reference:
                type: string
                description: Merchant's time indicating when the transaction was first created. Value is in ISO-8601 format.
              deposit_id:
                type: string
                description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
                minLength: 1
                maxLength: 50
              deposit_time_created:
                type: string
                format: date-time
                description: Global Payments time indicating when the object was created in ISO-8601 format.
                example: '2021-05-03T21:23:39.718Z'
              deposit_status:
                type: string
                description: Indicates where a resource object is in it's lifecylce.
                example: FUNDED
              batch_id:
                type: string
                description: A Global Payments created reference that uniquely identifies the batch.
                example: BAT_234234234
                minLength: 0
                maxLength: 50
              batch_time_created:
                type: string
                format: date-time
                description: Global Payments time indicating when the object was created in ISO-8601 format.
                example: '2021-05-03T21:23:39.718Z'
              payment_method:
                type: object
                properties:
                  entry_mode:
                    type: string
                    description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                    example: ECOM
                    enum:
                      - MOTO
                      - ECOM
                      - IN_APP
                      - CHIP
                      - SWIPE
                      - MANUAL
                      - PHONE
                      - MAIL
                      - CONTACTLESS_CHIP
                      - CONTACTLESS_SWIPE
                    minLength: 1
                    maxLength: 50
                  card:
                    type: object
                    properties:
                      brand:
                        type: string
                        description: Indicates the card brand that issued the card.
                        enum:
                          - VISA
                          - MASTERCARD
                          - AMEX
                          - DINERS
                          - DISCOVER
                          - JCB
                          - CUP
                        minLength: 0
                        maxLength: 50
                      authcode:
                        type: string
                        description: Code generated when the card is successfully authorized.
                        minLength: 0
                        maxLength: 50
                      arn:
                        type: string
                        description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
                        minLength: 1
                        maxLength: 50
                      brand_reference:
                        type: string
                        description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                        minLength: 0
                        maxLength: 50
                      masked_number_first6last4:
                        type: string
                        description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                    description: Data relating to the card payment method returned in a list response.
              fees:
                type: object
                description: A breakdown of the fees associated with the transaction.
                properties:
                  'total_amount_decimal:':
                    type: string
                    description: The total fee amount for this transaction. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.
                    example: '1298.67'
                  other_fees_amount_decimal:
                    type: string
                    description: 'The total amount of other fees for this transaction that don''t fit into assessment, interchange, discount or mark up. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.'
                    example: '1298.67'
                  exchange_rate:
                    type: string
                    description: The exchange rate used to convert the total fee amount in one currency to the currency of the merchant.
                    example: '0.12332'
                  assessment_total_amount_decimal:
                    type: string
                    description: The total assessment fee amount for this transaction. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.
                    example: '1298.67'
                  interchange:
                    type: object
                    description: a breakdown of the interchange fees associated with the transaction.
                    properties:
                      total_amount_decimal:
                        type: string
                        description: The total interchange amount represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                      program:
                        type: string
                        description: The name of the interchange program applied to the transction.
                      percentage:
                        type: string
                        description: The percentage of the transaction amount charged as interchange for this transaction.
                        example: 0.234%
                      percentage_amount_decimal:
                        type: string
                        description: The interchange amount derived from a percentage of the transaction amount. It is represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '101.56'
                      per_item_flat_amount_decimal:
                        type: string
                        description: The amount charged based on the number of items bought.
                        example: '10'
                      per_item_calculated_amount_decimal:
                        type: string
                        description: 'The amount that is charged based on one or many aspects of the transactions. These aspects can be the type of card used (debit, credit), the brand (Visa, Mastercard, etc,), how the card details were obtained,the channel (CP vs.CNP).'
                        example: '155'
                  discount:
                    type: object
                    description: a breakdown of the interchange fees associated with the transaction.
                    properties:
                      total_amount_decimal:
                        type: string
                        description: The total interchange amount represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                      rate_1_percentage:
                        type: string
                        description: The discount percentage charged based on the rate number.
                        example: 0.234%
                      rate_2_percentage:
                        type: string
                        description: The discount percentage charged based on the rate number.
                        example: 0.234%
                  assessment_1:
                    type: object
                    description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                    properties:
                      description:
                        type: string
                        description: The description for this assessment charge.
                      percentage:
                        type: string
                        description: The percentage of the transaction amount used to calculate this assessment charge.
                        example: 0.234%
                      percentage_amount_decimal:
                        type: string
                        description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                  assessment_2:
                    type: object
                    description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                    properties:
                      description:
                        type: string
                        description: The description for this assessment charge.
                      percentage:
                        type: string
                        description: The percentage of the transaction amount used to calculate this assessment charge.
                        example: 0.234%
                      percentage_amount_decimal:
                        type: string
                        description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                  assessment_3:
                    type: object
                    description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                    properties:
                      description:
                        type: string
                        description: The description for this assessment charge.
                      percentage:
                        type: string
                        description: The percentage of the transaction amount used to calculate this assessment charge.
                        example: 0.234%
                      percentage_amount_decimal:
                        type: string
                        description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                  assessment_4:
                    type: object
                    description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                    properties:
                      description:
                        type: string
                        description: The description for this assessment charge.
                      percentage:
                        type: string
                        description: The percentage of the transaction amount used to calculate this assessment charge.
                        example: 0.234%
                      percentage_amount_decimal:
                        type: string
                        description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                  assessment_5:
                    type: object
                    description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
                    properties:
                      description:
                        type: string
                        description: The description for this assessment charge.
                      percentage:
                        type: string
                        description: The percentage of the transaction amount used to calculate this assessment charge.
                        example: 0.234%
                      percentage_amount_decimal:
                        type: string
                        description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                        example: '1050.4'
                  mark_up:
                    type: object
                    description: A list of percentage mark ups on any currency conversion services for this transaction.
                    properties:
                      dcc_percentage:
                        type: string
                        description: 'The mark up percentage charged for DCC, Dynamic Currency Conversion.'
                        example: 0.034%
                      multicurrency_percentage:
                        type: string
                        description: The mark up percentage charged for Multi-Currency
                        example: 0.034%
              system:
                type: object
                description: Configuration relating to a transactions from the Global Payments system. This info is relevant for troubleshooting and integrators using other Global Payments systems to payment process.
                properties:
                  mid:
                    type: string
                    description: Merchant Identifier from Global Payments system for some features.
                    minLength: 1
                    maxLength: 50
                  tid:
                    type: string
                    description: Terminal Identifier from Global Payments system for some features.
                    minLength: 1
                    maxLength: 50
                  hierarchy:
                    type: string
                    description: Identifies the location of a merchant  within the merchant's corporate hierarchical structure.
                    minLength: 1
                    maxLength: 50
                  name:
                    type: string
                    description: The merchant name that is associated with the merchant.
                    example: MERCHANT ABC INC.
                    minLength: 1
                    maxLength: 100
                  dba:
                    type: string
                    description: The alternate name the merchant may be known as.
                    example: MERCHANT XYZ INC.
                    minLength: 1
                    maxLength: 100
        action:
          type: object
          description: Information about the Action executed.
          properties:
            id:
              type: string
              description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
              minLength: 1
              maxLength: 50
            type:
              type: string
              description: Indicates the action taken.
            time_created:
              type: string
              format: date-time
              description: Global Payments time indicating when the object was created in ISO-8601 format.
              example: '2021-05-03T21:23:39.718Z'
            result_code:
              type: string
              description: The result of the action executed.
              enum:
                - SUCCESS
                - DECLINE
              minLength: 1
              maxLength: 50
            app_id:
              type: string
              description: The id of the app that was used to create the token.
              example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
              minLength: 1
              maxLength: 50
            app_name:
              type: string
              description: The name of the app the user gave to the application.
              example: demo_app
              minLength: 1
              maxLength: 50
    transactions_list_item:
      type: object
      properties:
        time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        status:
          type: string
          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
          enum:
            - INITIATED
            - PREAUTHORIZED
            - CAPTURED
            - REVERSED
            - DECLINED
            - FUNDED
            - REJECTED
          minLength: 0
          maxLength: 50
        type:
          type: string
          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
          example: SALE
          default: SALE
          enum:
            - SALE
            - REFUND
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        merchant_amount:
          type: string
          description: The amount of the transaction in the merchant's currency that is funded to the merchant.
          example: '1999'
        merchant_currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        discount_amount:
          type: string
          description: The discount amount of the transaction in the currency the transaction was captured in.
          example: '199'
        discount_currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        merchant_discount_amount:
          type: string
          description: The discount amount of the transaction in the currency the merchant gets funded in
          example: '299'
        merchant_discount_currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        time_created_reference:
          type: string
          description: Merchant's time indicating when the transaction was first created. Value is in ISO-8601 format.
        deposit_id:
          type: string
          description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
          minLength: 1
          maxLength: 50
        deposit_time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        deposit_status:
          type: string
          description: Indicates where a resource object is in it's lifecylce.
          example: FUNDED
        batch_id:
          type: string
          description: A Global Payments created reference that uniquely identifies the batch.
          example: BAT_234234234
          minLength: 0
          maxLength: 50
        batch_time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        payment_method:
          type: object
          properties:
            entry_mode:
              type: string
              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
              example: ECOM
              enum:
                - MOTO
                - ECOM
                - IN_APP
                - CHIP
                - SWIPE
                - MANUAL
                - PHONE
                - MAIL
                - CONTACTLESS_CHIP
                - CONTACTLESS_SWIPE
              minLength: 1
              maxLength: 50
            card:
              type: object
              properties:
                brand:
                  type: string
                  description: Indicates the card brand that issued the card.
                  enum:
                    - VISA
                    - MASTERCARD
                    - AMEX
                    - DINERS
                    - DISCOVER
                    - JCB
                    - CUP
                  minLength: 0
                  maxLength: 50
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                arn:
                  type: string
                  description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
                  minLength: 1
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
                masked_number_first6last4:
                  type: string
                  description: 'The masked card account number, showing the first 6 and the last 4 digits.'
              description: Data relating to the card payment method returned in a list response.
        fees:
          type: object
          description: A breakdown of the fees associated with the transaction.
          properties:
            'total_amount_decimal:':
              type: string
              description: The total fee amount for this transaction. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.
              example: '1298.67'
            other_fees_amount_decimal:
              type: string
              description: 'The total amount of other fees for this transaction that don''t fit into assessment, interchange, discount or mark up. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.'
              example: '1298.67'
            exchange_rate:
              type: string
              description: The exchange rate used to convert the total fee amount in one currency to the currency of the merchant.
              example: '0.12332'
            assessment_total_amount_decimal:
              type: string
              description: The total assessment fee amount for this transaction. The value can contain percision lower than the lowest denomination of the currency. For example 1298.67 USD means $12.98 and 0.67 of a penny.
              example: '1298.67'
            interchange:
              type: object
              description: a breakdown of the interchange fees associated with the transaction.
              properties:
                total_amount_decimal:
                  type: string
                  description: The total interchange amount represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
                program:
                  type: string
                  description: The name of the interchange program applied to the transction.
                percentage:
                  type: string
                  description: The percentage of the transaction amount charged as interchange for this transaction.
                  example: 0.234%
                percentage_amount_decimal:
                  type: string
                  description: The interchange amount derived from a percentage of the transaction amount. It is represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '101.56'
                per_item_flat_amount_decimal:
                  type: string
                  description: The amount charged based on the number of items bought.
                  example: '10'
                per_item_calculated_amount_decimal:
                  type: string
                  description: 'The amount that is charged based on one or many aspects of the transactions. These aspects can be the type of card used (debit, credit), the brand (Visa, Mastercard, etc,), how the card details were obtained,the channel (CP vs.CNP).'
                  example: '155'
            discount:
              type: object
              description: a breakdown of the interchange fees associated with the transaction.
              properties:
                total_amount_decimal:
                  type: string
                  description: The total interchange amount represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
                rate_1_percentage:
                  type: string
                  description: The discount percentage charged based on the rate number.
                  example: 0.234%
                rate_2_percentage:
                  type: string
                  description: The discount percentage charged based on the rate number.
                  example: 0.234%
            assessment_1:
              type: object
              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
              properties:
                description:
                  type: string
                  description: The description for this assessment charge.
                percentage:
                  type: string
                  description: The percentage of the transaction amount used to calculate this assessment charge.
                  example: 0.234%
                percentage_amount_decimal:
                  type: string
                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
            assessment_2:
              type: object
              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
              properties:
                description:
                  type: string
                  description: The description for this assessment charge.
                percentage:
                  type: string
                  description: The percentage of the transaction amount used to calculate this assessment charge.
                  example: 0.234%
                percentage_amount_decimal:
                  type: string
                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
            assessment_3:
              type: object
              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
              properties:
                description:
                  type: string
                  description: The description for this assessment charge.
                percentage:
                  type: string
                  description: The percentage of the transaction amount used to calculate this assessment charge.
                  example: 0.234%
                percentage_amount_decimal:
                  type: string
                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
            assessment_4:
              type: object
              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
              properties:
                description:
                  type: string
                  description: The description for this assessment charge.
                percentage:
                  type: string
                  description: The percentage of the transaction amount used to calculate this assessment charge.
                  example: 0.234%
                percentage_amount_decimal:
                  type: string
                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
            assessment_5:
              type: object
              description: a breakdown of a specific type of assessment charge for the transaction. There can be more than one assessment charge associated with a transaction.
              properties:
                description:
                  type: string
                  description: The description for this assessment charge.
                percentage:
                  type: string
                  description: The percentage of the transaction amount used to calculate this assessment charge.
                  example: 0.234%
                percentage_amount_decimal:
                  type: string
                  description: The amount for this assessment charge represented as a decimal of the lowest denomination of the currency.e.g. 1050.4 is $10.50 plus 0.4 of a cent
                  example: '1050.4'
            mark_up:
              type: object
              description: A list of percentage mark ups on any currency conversion services for this transaction.
              properties:
                dcc_percentage:
                  type: string
                  description: 'The mark up percentage charged for DCC, Dynamic Currency Conversion.'
                  example: 0.034%
                multicurrency_percentage:
                  type: string
                  description: The mark up percentage charged for Multi-Currency
                  example: 0.034%
        system:
          type: object
          description: Configuration relating to a transactions from the Global Payments system. This info is relevant for troubleshooting and integrators using other Global Payments systems to payment process.
          properties:
            mid:
              type: string
              description: Merchant Identifier from Global Payments system for some features.
              minLength: 1
              maxLength: 50
            tid:
              type: string
              description: Terminal Identifier from Global Payments system for some features.
              minLength: 1
              maxLength: 50
            hierarchy:
              type: string
              description: Identifies the location of a merchant  within the merchant's corporate hierarchical structure.
              minLength: 1
              maxLength: 50
            name:
              type: string
              description: The merchant name that is associated with the merchant.
              example: MERCHANT ABC INC.
              minLength: 1
              maxLength: 100
            dba:
              type: string
              description: The alternate name the merchant may be known as.
              example: MERCHANT XYZ INC.
              minLength: 1
              maxLength: 100
    payment_method_list_response:
      type: object
      properties:
        entry_mode:
          type: string
          description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
          example: ECOM
          enum:
            - MOTO
            - ECOM
            - IN_APP
            - CHIP
            - SWIPE
            - MANUAL
            - PHONE
            - MAIL
            - CONTACTLESS_CHIP
            - CONTACTLESS_SWIPE
          minLength: 1
          maxLength: 50
        card:
          type: object
          properties:
            brand:
              type: string
              description: Indicates the card brand that issued the card.
              enum:
                - VISA
                - MASTERCARD
                - AMEX
                - DINERS
                - DISCOVER
                - JCB
                - CUP
              minLength: 0
              maxLength: 50
            authcode:
              type: string
              description: Code generated when the card is successfully authorized.
              minLength: 0
              maxLength: 50
            arn:
              type: string
              description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
              minLength: 1
              maxLength: 50
            brand_reference:
              type: string
              description: The unique reference created by the brands/schemes to uniquely identify the transaction.
              minLength: 0
              maxLength: 50
            masked_number_first6last4:
              type: string
              description: 'The masked card account number, showing the first 6 and the last 4 digits.'
          description: Data relating to the card payment method returned in a list response.
    card_list_response:
      type: object
      properties:
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - DINERS
            - DISCOVER
            - JCB
            - CUP
          minLength: 0
          maxLength: 50
        authcode:
          type: string
          description: Code generated when the card is successfully authorized.
          minLength: 0
          maxLength: 50
        arn:
          type: string
          description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
          minLength: 1
          maxLength: 50
        brand_reference:
          type: string
          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
          minLength: 0
          maxLength: 50
        masked_number_first6last4:
          type: string
          description: 'The masked card account number, showing the first 6 and the last 4 digits.'
      description: Data relating to the card payment method returned in a list response.
    transactions_list_real_time:
      type: object
      properties:
        total_record_count:
          type: number
          description: 'The total number of records across all pages for the search filter. When searching for a collection of resoures, this is returned on the first page only and when the date range is a month or less.'
          example: 3412
        current_page_size:
          type: number
          description: The total number of records returned on the current page. If current_page_size is less than the page_size using in the querystring then this is the final page for that search.
          example: 3412
        merchant_id:
          type: string
          description: A unique identifier for the merchant set by Global Payments.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
          minLength: 1
          maxLength: 50
        merchant_name:
          type: string
          description: A meaningful label for the merchant set by Global Payments.
          example: Sandbox_merchant_2
          minLength: 1
          maxLength: 50
        account_id:
          type: string
          description: A unique identifier for the merchant account set by Global Payments.
          example: TRA_6716058969854a48b33347043ff8225f
          minLength: 1
          maxLength: 50
        account_name:
          type: string
          description: A meaningful label for the merchant account set by Global Payments.
          example: Transaction_Processing
          minLength: 1
          maxLength: 50
        filter:
          type: object
          description: Indicates what fields and values used to filter the current list of resource objects in the current response.
        paging:
          type: object
          description: The paging values used to generate this response.
          properties:
            page:
              description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
              maximum: 1000
              minimum: 1
              type: number
              default: 1
            page_size:
              description: The total number of objects to return in a single page for that list.
              maximum: 1000
              minimum: 1
              type: number
              default: 5
            order_by:
              description: 'The value to order the entire list by. '
              type: string
              enum:
                - TIME_CREATED
            order:
              description: 'The direction of the ordering of the entire list, ASC or DESC'
              type: string
              enum:
                - ASC
                - DESC
        transactions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: A unique identifier generated by Global Payments to identify the transaction.
                example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
                minLength: 4
                maxLength: 100
              time_created:
                type: string
                format: date-time
                description: Global Payments time indicating when the object was created in ISO-8601 format.
                example: '2021-05-03T21:23:39.718Z'
              status:
                type: string
                description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
                enum:
                  - INITIATED
                  - PREAUTHORIZED
                  - CAPTURED
                  - REVERSED
                  - DECLINED
                  - FUNDED
                  - REJECTED
                minLength: 0
                maxLength: 50
              type:
                type: string
                description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
                example: SALE
                default: SALE
                enum:
                  - SALE
                  - REFUND
              channel:
                type: string
                description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
                example: CNP
                enum:
                  - CP
                  - CNP
              amount:
                type: string
                description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
                example: '11099'
              currency:
                type: string
                description: The currency of the amount in ISO-4217(alpha-3)
                example: USD
              reference:
                type: string
                description: Merchant defined field to reference the transaction.
                minLength: 8
                maxLength: 50
              batch_id:
                type: string
                description: A Global Payments created reference that uniquely identifies the batch.
                example: BAT_234234234
                minLength: 0
                maxLength: 50
              country:
                type: string
                description: The country in ISO-3166-1(alpha-2 code) format.
                example: US
                enum:
                  - ISO-3166-1(alpha-2 code)
                  - US
              parent_resource_id:
                type: string
                description: An identifier generated by Global Payments to uniquely identify the parent resource of this resource. This is resource that was used to create the current instance.
              create_action_id:
                type: string
                description: An identifier generated by Global Payments to uniquely identify the action that created this resource.
              payment_method:
                type: object
                properties:
                  name:
                    type: string
                    description: The full name of the owner of the payment method.
                    example: James Mason
                    minLength: 0
                    maxLength: 100
                  result:
                    type: string
                    description: Result code from the payment method provider.
                  message:
                    type: string
                    description: Result message from the payment method provider corresponding to the result code.
                  entry_mode:
                    type: string
                    description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
                    example: ECOM
                    enum:
                      - MOTO
                      - ECOM
                      - IN_APP
                      - CHIP
                      - SWIPE
                      - MANUAL
                      - PHONE
                      - MAIL
                      - CONTACTLESS_CHIP
                      - CONTACTLESS_SWIPE
                    minLength: 1
                    maxLength: 50
                  card:
                    type: object
                    properties:
                      brand:
                        type: string
                        description: Indicates the card brand that issued the card.
                        enum:
                          - VISA
                          - MASTERCARD
                          - AMEX
                          - DINERS
                          - DISCOVER
                          - JCB
                          - CUP
                        minLength: 0
                        maxLength: 50
                      authcode:
                        type: string
                        description: Code generated when the card is successfully authorized.
                        minLength: 0
                        maxLength: 50
                      brand_reference:
                        type: string
                        description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                        minLength: 0
                        maxLength: 50
                      masked_number_first6last4:
                        type: string
                        description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                      masked_number_last4:
                        type: string
                        description: Masked card number with last 4 digits showing.
                        minLength: 12
                        maxLength: 50
                      funding:
                        type: string
                        description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                        enum:
                          - DEBIT
                          - CREDIT
                        default: CREDIT
                        minLength: 0
                        maxLength: 50
                      cvv_indicator:
                        type: string
                        description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                        example: PRESENT
                        minLength: 0
                        maxLength: 50
                        enum:
                          - ILLEGIBLE
                          - NOT_PRESENT
                          - PRESENT
                      cvv_result:
                        type: string
                        description: The result of the CVV check.
                        minLength: 0
                        maxLength: 50
                        enum:
                          - MATCHED
                          - NOT_MATCHED
                          - NOT_CHECKED
                      avs_address_result:
                        type: string
                        description: The result of the AVS address check.
                        minLength: 0
                        maxLength: 50
                        enum:
                          - MATCHED
                          - NOT_MATCHED
                          - NOT_CHECKED
                      avs_postal_code_result:
                        type: string
                        description: The result of the AVS postal code check.
                        minLength: 0
                        maxLength: 50
                        enum:
                          - MATCHED
                          - NOT_MATCHED
                          - NOT_CHECKED
                    description: Data relating to the card payment method returned in a list response.
        action:
          type: object
          description: Information about the Action executed.
          properties:
            id:
              type: string
              description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
              minLength: 1
              maxLength: 50
            type:
              type: string
              description: Indicates the action taken.
            time_created:
              type: string
              format: date-time
              description: Global Payments time indicating when the object was created in ISO-8601 format.
              example: '2021-05-03T21:23:39.718Z'
            result_code:
              type: string
              description: The result of the action executed.
              enum:
                - SUCCESS
                - DECLINE
              minLength: 1
              maxLength: 50
            app_id:
              type: string
              description: The id of the app that was used to create the token.
              example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
              minLength: 1
              maxLength: 50
            app_name:
              type: string
              description: The name of the app the user gave to the application.
              example: demo_app
              minLength: 1
              maxLength: 50
    transactions_list_real_time_item:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier generated by Global Payments to identify the transaction.
          example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
          minLength: 4
          maxLength: 100
        time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        status:
          type: string
          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
          enum:
            - INITIATED
            - PREAUTHORIZED
            - CAPTURED
            - REVERSED
            - DECLINED
            - FUNDED
            - REJECTED
          minLength: 0
          maxLength: 50
        type:
          type: string
          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
          example: SALE
          default: SALE
          enum:
            - SALE
            - REFUND
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
          example: CNP
          enum:
            - CP
            - CNP
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        batch_id:
          type: string
          description: A Global Payments created reference that uniquely identifies the batch.
          example: BAT_234234234
          minLength: 0
          maxLength: 50
        country:
          type: string
          description: The country in ISO-3166-1(alpha-2 code) format.
          example: US
          enum:
            - ISO-3166-1(alpha-2 code)
            - US
        parent_resource_id:
          type: string
          description: An identifier generated by Global Payments to uniquely identify the parent resource of this resource. This is resource that was used to create the current instance.
        create_action_id:
          type: string
          description: An identifier generated by Global Payments to uniquely identify the action that created this resource.
        payment_method:
          type: object
          properties:
            name:
              type: string
              description: The full name of the owner of the payment method.
              example: James Mason
              minLength: 0
              maxLength: 100
            result:
              type: string
              description: Result code from the payment method provider.
            message:
              type: string
              description: Result message from the payment method provider corresponding to the result code.
            entry_mode:
              type: string
              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
              example: ECOM
              enum:
                - MOTO
                - ECOM
                - IN_APP
                - CHIP
                - SWIPE
                - MANUAL
                - PHONE
                - MAIL
                - CONTACTLESS_CHIP
                - CONTACTLESS_SWIPE
              minLength: 1
              maxLength: 50
            card:
              type: object
              properties:
                brand:
                  type: string
                  description: Indicates the card brand that issued the card.
                  enum:
                    - VISA
                    - MASTERCARD
                    - AMEX
                    - DINERS
                    - DISCOVER
                    - JCB
                    - CUP
                  minLength: 0
                  maxLength: 50
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
                masked_number_first6last4:
                  type: string
                  description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                masked_number_last4:
                  type: string
                  description: Masked card number with last 4 digits showing.
                  minLength: 12
                  maxLength: 50
                funding:
                  type: string
                  description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                  enum:
                    - DEBIT
                    - CREDIT
                  default: CREDIT
                  minLength: 0
                  maxLength: 50
                cvv_indicator:
                  type: string
                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                  example: PRESENT
                  minLength: 0
                  maxLength: 50
                  enum:
                    - ILLEGIBLE
                    - NOT_PRESENT
                    - PRESENT
                cvv_result:
                  type: string
                  description: The result of the CVV check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_address_result:
                  type: string
                  description: The result of the AVS address check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_postal_code_result:
                  type: string
                  description: The result of the AVS postal code check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
              description: Data relating to the card payment method returned in a list response.
    payment_method_list_real_time_response:
      type: object
      properties:
        name:
          type: string
          description: The full name of the owner of the payment method.
          example: James Mason
          minLength: 0
          maxLength: 100
        result:
          type: string
          description: Result code from the payment method provider.
        message:
          type: string
          description: Result message from the payment method provider corresponding to the result code.
        entry_mode:
          type: string
          description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
          example: ECOM
          enum:
            - MOTO
            - ECOM
            - IN_APP
            - CHIP
            - SWIPE
            - MANUAL
            - PHONE
            - MAIL
            - CONTACTLESS_CHIP
            - CONTACTLESS_SWIPE
          minLength: 1
          maxLength: 50
        card:
          type: object
          properties:
            brand:
              type: string
              description: Indicates the card brand that issued the card.
              enum:
                - VISA
                - MASTERCARD
                - AMEX
                - DINERS
                - DISCOVER
                - JCB
                - CUP
              minLength: 0
              maxLength: 50
            authcode:
              type: string
              description: Code generated when the card is successfully authorized.
              minLength: 0
              maxLength: 50
            brand_reference:
              type: string
              description: The unique reference created by the brands/schemes to uniquely identify the transaction.
              minLength: 0
              maxLength: 50
            masked_number_first6last4:
              type: string
              description: 'The masked card account number, showing the first 6 and the last 4 digits.'
            masked_number_last4:
              type: string
              description: Masked card number with last 4 digits showing.
              minLength: 12
              maxLength: 50
            funding:
              type: string
              description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
              enum:
                - DEBIT
                - CREDIT
              default: CREDIT
              minLength: 0
              maxLength: 50
            cvv_indicator:
              type: string
              description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
              example: PRESENT
              minLength: 0
              maxLength: 50
              enum:
                - ILLEGIBLE
                - NOT_PRESENT
                - PRESENT
            cvv_result:
              type: string
              description: The result of the CVV check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_address_result:
              type: string
              description: The result of the AVS address check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_postal_code_result:
              type: string
              description: The result of the AVS postal code check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
          description: Data relating to the card payment method returned in a list response.
    card_list_real_time_response:
      type: object
      properties:
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - DINERS
            - DISCOVER
            - JCB
            - CUP
          minLength: 0
          maxLength: 50
        authcode:
          type: string
          description: Code generated when the card is successfully authorized.
          minLength: 0
          maxLength: 50
        brand_reference:
          type: string
          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
          minLength: 0
          maxLength: 50
        masked_number_first6last4:
          type: string
          description: 'The masked card account number, showing the first 6 and the last 4 digits.'
        masked_number_last4:
          type: string
          description: Masked card number with last 4 digits showing.
          minLength: 12
          maxLength: 50
        funding:
          type: string
          description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
          enum:
            - DEBIT
            - CREDIT
          default: CREDIT
          minLength: 0
          maxLength: 50
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
          example: PRESENT
          minLength: 0
          maxLength: 50
          enum:
            - ILLEGIBLE
            - NOT_PRESENT
            - PRESENT
        cvv_result:
          type: string
          description: The result of the CVV check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_address_result:
          type: string
          description: The result of the AVS address check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_postal_code_result:
          type: string
          description: The result of the AVS postal code check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
      description: Data relating to the card payment method returned in a list response.
    transactions_single_real_time:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier generated by Global Payments to identify the transaction.
          example: TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
          minLength: 4
          maxLength: 100
        time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        time_last_updated:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was last updated in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        status:
          type: string
          description: 'Indicates where a transaction is in its lifecycle. * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook. * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for a result. * `PREAUTHORIZED` - A Transaction has been approved but a capture request is required to commence the movement of funds. * `CAPTURED` - A Transaction has been successfully authorized and captured. The funding process will commence once the transaction remains in this status. * `REVERSED` - A Transaction that had a status of PENDING, PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded. * `DECLINED` - A Transaction where the payment method provider declined the transfer of funds between the payer and the merchant. * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected. * `REJECTED` - A Transaction where the funds were expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations.'
          enum:
            - INITIATED
            - PREAUTHORIZED
            - CAPTURED
            - REVERSED
            - DECLINED
            - FUNDED
            - REJECTED
          minLength: 0
          maxLength: 50
        type:
          type: string
          description: 'Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.'
          example: SALE
          default: SALE
          enum:
            - SALE
            - REFUND
        merchant_id:
          type: string
          description: A unique identifier for the merchant set by Global Payments.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
          minLength: 1
          maxLength: 50
        merchant_name:
          type: string
          description: A meaningful label for the merchant set by Global Payments.
          example: Sandbox_merchant_2
          minLength: 1
          maxLength: 50
        account_id:
          type: string
          description: A unique identifier for the merchant account set by Global Payments.
          example: TRA_6716058969854a48b33347043ff8225f
          minLength: 1
          maxLength: 50
        account_name:
          type: string
          description: A meaningful label for the merchant account set by Global Payments.
          example: Transaction_Processing
          minLength: 1
          maxLength: 50
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
          example: CNP
          enum:
            - CP
            - CNP
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        amount:
          type: string
          description: The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
          example: '11099'
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        description:
          type: string
          description: Merchant defined field to describe the transaction.
          example: SKU#BLK-MED-G123-GUC
          maxLength: 100
        order_reference:
          type: string
          description: Merchant defined field common to all transactions that are part of the same order.
          example: INV#88547
          minLength: 0
          maxLength: 50
        batch_id:
          type: string
          description: A Global Payments created reference that uniquely identifies the batch.
          example: BAT_234234234
          minLength: 0
          maxLength: 50
        initiator:
          type: string
          description: 'Indicates whether the Merchant or the Payer initiated the creation of a transaction. * `PAYER` - The transaction was initated by the customer who is paying the merchant. * `MERCHANT` - The transaction was initated by the merchant, who is getting paid by the payer.'''
          enum:
            - PAYER
            - MERCHANT
        country:
          type: string
          description: The country in ISO-3166-1(alpha-2 code) format.
          example: US
          enum:
            - ISO-3166-1(alpha-2 code)
            - US
        language:
          type: string
          description: Indicates the language the transaction was executed in. In the format ISO-639-1 (alpha-2) or ISO-639-1 (alpha-2)_ISO-3166(alpha-2)
          example: fr_CA
          enum:
            - ISO-639(alpha-2)
            - fr
            - ISO-639(alpha-2)_ISO-3166(alpha-2)
            - fr_CA
        ip_address:
          type: string
          description: Indicates the source IP Address of the system used to create the transaction.
          example: 123.123.123.123
          minLength: 0
          maxLength: 50
        site_reference:
          type: string
          description: A merchant defined reference for the location that created the transaction.
          minLength: 0
          maxLength: 50
        parent_resource_id:
          type: string
          description: An identifier generated by Global Payments to uniquely identify the parent resource of this resource. This is resource that was used to create the current instance.
        create_action_id:
          type: string
          description: An identifier generated by Global Payments to uniquely identify the action that created this resource.
        payment_method:
          type: object
          properties:
            name:
              type: string
              description: The full name of the owner of the payment method.
              example: James Mason
              minLength: 0
              maxLength: 100
            result:
              type: string
              description: Result code from the payment method provider.
            message:
              type: string
              description: Result message from the payment method provider corresponding to the result code.
            entry_mode:
              type: string
              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
              example: ECOM
              enum:
                - MOTO
                - ECOM
                - IN_APP
                - CHIP
                - SWIPE
                - MANUAL
                - PHONE
                - MAIL
                - CONTACTLESS_CHIP
                - CONTACTLESS_SWIPE
              minLength: 1
              maxLength: 50
            card:
              type: object
              properties:
                brand:
                  type: string
                  description: Indicates the card brand that issued the card.
                  enum:
                    - VISA
                    - MASTERCARD
                    - AMEX
                    - DINERS
                    - DISCOVER
                    - JCB
                    - CUP
                  minLength: 0
                  maxLength: 50
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
                masked_number_first6last4:
                  type: string
                  description: 'The masked card account number, showing the first 6 and the last 4 digits.'
                masked_number_last4:
                  type: string
                  description: Masked card number with last 4 digits showing.
                  minLength: 12
                  maxLength: 50
                funding:
                  type: string
                  description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                  enum:
                    - DEBIT
                    - CREDIT
                  default: CREDIT
                  minLength: 0
                  maxLength: 50
                cvv_indicator:
                  type: string
                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                  example: PRESENT
                  minLength: 0
                  maxLength: 50
                  enum:
                    - ILLEGIBLE
                    - NOT_PRESENT
                    - PRESENT
                cvv_result:
                  type: string
                  description: The result of the CVV check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_address_result:
                  type: string
                  description: The result of the AVS address check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_postal_code_result:
                  type: string
                  description: The result of the AVS postal code check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
              description: Data relating to the card payment method returned in a list response.
        system:
          type: object
          description: Configuration relating to a transactions from the Global Payments system. This info is relevant for troubleshooting and integrators using other Global Payments systems to payment process.
          properties:
            mid:
              type: string
              description: Merchant Identifier from Global Payments system for some features.
              minLength: 1
              maxLength: 50
            tid:
              type: string
              description: Terminal Identifier from Global Payments system for some features.
              minLength: 1
              maxLength: 50
            hierarchy:
              type: string
              description: Identifies the location of a merchant  within the merchant's corporate hierarchical structure.
              minLength: 1
              maxLength: 50
            name:
              type: string
              description: The merchant name that is associated with the merchant.
              example: MERCHANT ABC INC.
              minLength: 1
              maxLength: 100
            dba:
              type: string
              description: The alternate name the merchant may be known as.
              example: MERCHANT XYZ INC.
              minLength: 1
              maxLength: 100
    payment_method_single_real_time_response:
      type: object
      properties:
        name:
          type: string
          description: The full name of the owner of the payment method.
          example: James Mason
          minLength: 0
          maxLength: 100
        result:
          type: string
          description: Result code from the payment method provider.
        message:
          type: string
          description: Result message from the payment method provider corresponding to the result code.
        entry_mode:
          type: string
          description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
          example: ECOM
          enum:
            - MOTO
            - ECOM
            - IN_APP
            - CHIP
            - SWIPE
            - MANUAL
            - PHONE
            - MAIL
            - CONTACTLESS_CHIP
            - CONTACTLESS_SWIPE
          minLength: 1
          maxLength: 50
        card:
          type: object
          properties:
            brand:
              type: string
              description: Indicates the card brand that issued the card.
              enum:
                - VISA
                - MASTERCARD
                - AMEX
                - DINERS
                - DISCOVER
                - JCB
                - CUP
              minLength: 0
              maxLength: 50
            authcode:
              type: string
              description: Code generated when the card is successfully authorized.
              minLength: 0
              maxLength: 50
            brand_reference:
              type: string
              description: The unique reference created by the brands/schemes to uniquely identify the transaction.
              minLength: 0
              maxLength: 50
            masked_number_first6last4:
              type: string
              description: 'The masked card account number, showing the first 6 and the last 4 digits.'
            masked_number_last4:
              type: string
              description: Masked card number with last 4 digits showing.
              minLength: 12
              maxLength: 50
            funding:
              type: string
              description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
              enum:
                - DEBIT
                - CREDIT
              default: CREDIT
              minLength: 0
              maxLength: 50
            cvv_indicator:
              type: string
              description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
              example: PRESENT
              minLength: 0
              maxLength: 50
              enum:
                - ILLEGIBLE
                - NOT_PRESENT
                - PRESENT
            cvv_result:
              type: string
              description: The result of the CVV check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_address_result:
              type: string
              description: The result of the AVS address check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
            avs_postal_code_result:
              type: string
              description: The result of the AVS postal code check.
              minLength: 0
              maxLength: 50
              enum:
                - MATCHED
                - NOT_MATCHED
                - NOT_CHECKED
          description: Data relating to the card payment method returned in a list response.
    card_single_real_time_response:
      type: object
      properties:
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - DINERS
            - DISCOVER
            - JCB
            - CUP
          minLength: 0
          maxLength: 50
        authcode:
          type: string
          description: Code generated when the card is successfully authorized.
          minLength: 0
          maxLength: 50
        brand_reference:
          type: string
          description: The unique reference created by the brands/schemes to uniquely identify the transaction.
          minLength: 0
          maxLength: 50
        masked_number_first6last4:
          type: string
          description: 'The masked card account number, showing the first 6 and the last 4 digits.'
        masked_number_last4:
          type: string
          description: Masked card number with last 4 digits showing.
          minLength: 12
          maxLength: 50
        funding:
          type: string
          description: Indicates whether the card is a debit or credit card. * `DEBTI` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
          enum:
            - DEBIT
            - CREDIT
          default: CREDIT
          minLength: 0
          maxLength: 50
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
          example: PRESENT
          minLength: 0
          maxLength: 50
          enum:
            - ILLEGIBLE
            - NOT_PRESENT
            - PRESENT
        cvv_result:
          type: string
          description: The result of the CVV check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_address_result:
          type: string
          description: The result of the AVS address check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
        avs_postal_code_result:
          type: string
          description: The result of the AVS postal code check.
          minLength: 0
          maxLength: 50
          enum:
            - MATCHED
            - NOT_MATCHED
            - NOT_CHECKED
      description: Data relating to the card payment method returned in a list response.
    notifications:
      type: object
      description: Indicates to Global Payments where the merchant wants to receive notifications of certain events that occur on the Global Payments system.
      properties:
        return_url:
          example: 'https://www.example.com/notifications/return'
          type: string
          description: 'The merchant URL to return the payer to, once the payer has completed payment using the payment method. This returns control of the payer''s payment experience to the merchant.'
        status_url:
          example: 'https://www.example.com/notifications/status'
          type: string
          description: The merchant URL to notify the merchant of the latest status of the transaction.
        challenge_return_url:
          example: 'https://www.example.com/notifications/return'
          type: string
          description: The merchant URL that will receive the notification when the customer has completed the authentication.
        three_ds_method_return_url:
          type: string
          description: The merchant URL that will receive the notification when the 3DS ACS successfully gathers device information and to close the hidden iFrame accordingly.
          example: 'https://www.example.com/notifications/3DS_method_complete'
        decoupled_challenge_return_url:
          example: 'https://www.example.com/notifications/return'
          type: string
          description: The merchant URL that will receive the notification when the customer has completed the authentication when the authentication is decoupled and separate to the purchase.
    split_amount_request:
      type: object
      properties:
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          minLength: 8
          maxLength: 50
        description:
          type: string
          description: Merchant defined field to describe the transaction.
          example: SKU#BLK-MED-G123-GUC
          maxLength: 100
        partner_amount:
          type: string
          description: The amount of a transaction that is funded to the partner.
          example: '11099'
    split_amount_response:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier generated by Global Payments to identify a transfer
          example: TRF_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
          minLength: 1
          maxLength: 50
        time_created:
          type: string
          format: date-time
          description: Global Payments time indicating when the object was created in ISO-8601 format.
          example: '2021-05-03T21:23:39.718Z'
        status:
          type: string
          description: Indicates where a Transfer is in its lifecycle. * `CAPTURED` - A Teansfer has been successfully captured and will move between merchant account and their preferred payment method.
          enum:
            - CAPTURED
          minLength: 0
          maxLength: 50
        currency:
          type: string
          description: The currency of the amount in ISO-4217(alpha-3)
          example: USD
        country:
          type: string
          description: The country in ISO-3166-1(alpha-2 code) format.
          example: US
          enum:
            - ISO-3166-1(alpha-2 code)
            - US
        merchant_amount:
          type: string
          description: The amount of the transfer in the merchant's currency that is funded to the merchant.
          example: '11099'
        partner_amount:
          type: string
          description: The amount of a transaction that is funded to the partner.
          example: '11099'
        merchant_id:
          type: string
          description: A unique identifier for the merchant set by Global Payments.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
          minLength: 1
          maxLength: 50
        merchant_name:
          type: string
          description: A meaningful label for the merchant set by Global Payments.
          example: Sandbox_merchant_2
          minLength: 1
          maxLength: 50
        account_id:
          type: string
          description: A unique identifier for the merchant account set by Global Payments.
          example: TRA_6716058969854a48b33347043ff8225f
          minLength: 1
          maxLength: 50
        account_name:
          type: string
          description: A meaningful label for the merchant account set by Global Payments.
          example: Transaction_Processing
          minLength: 1
          maxLength: 50
        payment_method:
          type: object
          properties:
            id:
              type: string
              description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
              example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
              maxLength: 50
            fingerprint_presence_indicator:
              type: string
              description: 'If enabled, this field indicates whether the payment method has been seen before or is new. * `EXISTS` -  Indicates that the payment method was seen on the platform before by this merchant. * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.'
              enum:
                - NEW
                - EXISTS
              minLength: 0
              maxLength: 256
            fingerprint:
              type: string
              description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
              minLength: 0
              maxLength: 256
            result:
              type: string
              description: Result code from the payment method provider.
            message:
              type: string
              description: Result message from the payment method provider corresponding to the result code.
            entry_mode:
              type: string
              description: Indicates how the payment method information was obtained by the Merchant for this transaction. * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information. * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
              example: ECOM
              enum:
                - MOTO
                - ECOM
                - IN_APP
                - CHIP
                - SWIPE
                - MANUAL
                - PHONE
                - MAIL
                - CONTACTLESS_CHIP
                - CONTACTLESS_SWIPE
              minLength: 1
              maxLength: 50
            authentication:
              type: object
              description: Information outlining the degree of authentication executed related to a transaction.
              properties:
                three_ds:
                  type: object
                  description: Information outlining the degree of 3D Secure authentication executed.
                  properties:
                    value_result:
                      type: string
                      description: The result of the three_ds value validation by the brands or issuing bank.
                      minLength: 0
                      maxLength: 50
            digital_wallet:
              type: object
              properties:
                token:
                  type: string
                  description: 'A token that represents, or is the payment method, stored with  the digital wallet.'
                  minLength: 1
                  maxLength: 50
                token_format:
                  type: string
                  description: Indicates if the actual card number or a token is being used to process the transaction. * `CARD_NUMBER` - The value in the digital wallet token field is a real card number (PAN) * `CARD_TOKEN` - The value in the digital wallet token field is a temporary token in the format of a card number (PAN) but is not a real card number.
                  minLength: 1
                  maxLength: 50
                  enum:
                    - CARD_NUMBER
                    - CARD_TOKEN
                cryptogram:
                  type: string
                  description: The authentication value use to verify the validity of the digit wallet transaction.
                  minLength: 1
                  maxLength: 50
                provider:
                  type: string
                  description: Identifies who provides the digital wallet for the Payer.
                  minLength: 1
                  maxLength: 50
                  enum:
                    - APPLEPAY
                    - PAY_BY_GOOGLE
                expiry_month:
                  type: string
                  description: The 2 digit expiry date month of the card.
                  example: '05'
                  minLength: 2
                  maxLength: 2
                expiry_year:
                  type: string
                  description: The 2 digit expiry date year of the card.
                  example: '25'
                  minLength: 2
                  maxLength: 2
                eci:
                  type: string
                  description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process. 2 or 1  for Mastercard indicates the merchant has a liability shift. 5 or 6  for Visa or Amex indicates the merchant has a liability shift. However for Amex if the payer is not enrolled the eci may still be 6 but liability shift has not bee achieved.
                  example: '5'
                  minLength: 0
                  maxLength: 50
                cvv:
                  type: string
                  description: The numeric value printed on the physical card.
                  example: '852'
                  minLength: 0
                  maxLength: 4
                cvv_indicator:
                  type: string
                  description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability. * `ILLEGIBLE` - indicates the cvv is present but cannot be read. * `NOT_PRESENT` - indicates the cvv is not present on the card. * `PRESENT` - indicates the cvv is present.
                  example: PRESENT
                  minLength: 0
                  maxLength: 50
                  enum:
                    - ILLEGIBLE
                    - NOT_PRESENT
                    - PRESENT
                avs_address:
                  type: string
                  description: First line of the address associated with the card.
                  example: Apt 123
                  minLength: 0
                  maxLength: 50
                avs_postal_code:
                  type: string
                  description: Postal code of the address associated with the card.
                  example: TGX562
                  minLength: 0
                  maxLength: 50
            apm:
              type: object
              properties:
                provider:
                  type: string
                  description: A string used to identify the payment method provider being used to execute this transaction.
                  enum:
                    - TESTPAY
                    - PAYPAL
                    - SOFORT
                    - IDEAL
                    - GIROPAY
                redirect_url:
                  type: string
                  description: URL to redirect the payer from the merchant's system to the payment method's system.
                session_token:
                  type: string
                  description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
                  example: EC-0SR89134FA420913U
                fund_status:
                  type: string
                  description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
                  example: RECEIVED
                  enum:
                    - NOT_EXPECTED
                    - RECEIVED
                    - WAITING
                    - MISSING
                wait_notification:
                  minimum: 0
                  maximum: 1
                  type: number
                  description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
                  example: 0
                  enum:
                    - 0
                    - 1
                optional_redirect:
                  minimum: 0
                  maximum: 1
                  type: number
                  description: 'Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.'
                  example: 0
                  enum:
                    - 0
                    - 1
                provider_transaction_reference:
                  type: string
                  description: The reference the payment method provider created for the transaction.
                  example: 49wnfs9w434234
                provider_time_created:
                  type: string
                  description: The time the payment method provider created the transaction at on their system.
                  example: 49wnfs9w434234
                provider_payer_name:
                  type: string
                  description: A name of the payer from the payment method system.
                  example: James Mason
                bank:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name assocaited with the bank account
                    identifier_code:
                      type: string
                      description: The international identifier code for the bank.
                    iban:
                      type: string
                      description: The international identifier of the bank account.
                    code:
                      type: string
                      description: The local identifier of the bank.
                    account_number:
                      type: string
                      description: The local identifier of the bank account.
                mandate:
                  type: object
                  properties:
                    code:
                      type: string
                      description: The reference to identify the mandate.
              description: Data associated with the response of an APM transaction.
            card:
              type: object
              properties:
                masked_number_last4:
                  type: string
                  description: Masked card number with last 4 digits showing.
                  minLength: 12
                  maxLength: 50
                tag_response:
                  type: string
                  description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
                  minLength: 0
                  maxLength: 50
                authcode:
                  type: string
                  description: Code generated when the card is successfully authorized.
                  minLength: 0
                  maxLength: 50
                brand:
                  type: string
                  description: Indicates the card brand that issued the card.
                  enum:
                    - VISA
                    - MASTERCARD
                    - AMEX
                    - DINERS
                    - DISCOVER
                    - JCB
                    - CUP
                  minLength: 0
                  maxLength: 50
                brand_reference:
                  type: string
                  description: The unique reference created by the brands/schemes to uniquely identify the transaction.
                  minLength: 0
                  maxLength: 50
                brand_time_reference:
                  type: string
                  description: The time returned by the card brand indicating when the transaction was processed on their system.
                  minLength: 0
                  maxLength: 50
                cvv_result:
                  type: string
                  description: The result of the CVV check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_address_result:
                  type: string
                  description: The result of the AVS address check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_postal_code_result:
                  type: string
                  description: The result of the AVS postal code check.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - MATCHED
                    - NOT_MATCHED
                    - NOT_CHECKED
                avs_action:
                  type: string
                  description: The recommended AVS action to be taken by the agent processing the card transaction.
                  minLength: 0
                  maxLength: 50
                  enum:
                    - PROMPT
                    - DECLINE
                    - ACCEPT
                provider:
                  type: object
                  description: The result codes directly from the card issuer.
                  properties:
                    card.provider.result:
                      type: string
                      description: Result code from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.cvv_result:
                      type: string
                      description: The result code of the CVV check from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.avs_result:
                      type: string
                      description: The result code of the AVS check from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.avs_address_result:
                      type: string
                      description: The result code of the AVS address check from the card issuer.
                      minLength: 0
                      maxLength: 50
                    card.provider.avs_postal_code_result:
                      type: string
                      description: The result of the AVS postal code check from the card issuer..
                      minLength: 0
                      maxLength: 50
            bank_transfer:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the bank.
                  example: High Street Bank
                masked_number_last4:
                  type: string
                  description: The last 4 characters of the local reference for a bank account number.
                  minLength: 1
                  maxLength: 50
                number_type:
                  type: string
                  description: The type of bank account associated with the payer's bank account.
                  example: SAVING
                  enum:
                    - CHECKING
                    - SAVING
                    - CREDIT
        action:
          type: object
          description: Information about the Action executed.
          properties:
            id:
              type: string
              description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
              minLength: 1
              maxLength: 50
            type:
              type: string
              description: Indicates the action taken.
            time_created:
              type: string
              format: date-time
              description: Global Payments time indicating when the object was created in ISO-8601 format.
              example: '2021-05-03T21:23:39.718Z'
            result_code:
              type: string
              description: The result of the action executed.
              enum:
                - SUCCESS
                - DECLINE
              minLength: 1
              maxLength: 50
            app_id:
              type: string
              description: The id of the app that was used to create the token.
              example: U1lRHKomEn7DN907RCDPxVhyMfiMLcfy
              minLength: 1
              maxLength: 50
            app_name:
              type: string
              description: The name of the app the user gave to the application.
              example: demo_app
              minLength: 1
              maxLength: 50
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
